{"mappings":"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","sources":["node_modules/@lit/reactive-element/src/css-tag.ts","node_modules/@lit/reactive-element/src/reactive-element.ts","node_modules/lit-html/src/lit-html.ts","node_modules/lit-element/src/lit-element.ts","node_modules/@svgdotjs/svg.js/src/utils/methods.js","node_modules/@svgdotjs/svg.js/src/utils/utils.js","node_modules/@svgdotjs/svg.js/src/utils/window.js","node_modules/@svgdotjs/svg.js/src/utils/adopter.js","node_modules/@svgdotjs/svg.js/src/modules/core/namespaces.js","node_modules/@svgdotjs/svg.js/src/modules/optional/arrange.js","node_modules/@svgdotjs/svg.js/src/modules/core/regex.js","node_modules/@svgdotjs/svg.js/src/types/Color.js","node_modules/@svgdotjs/svg.js/src/modules/optional/class.js","node_modules/@svgdotjs/svg.js/src/modules/optional/css.js","node_modules/@svgdotjs/svg.js/src/modules/optional/data.js","node_modules/@svgdotjs/svg.js/src/modules/optional/memory.js","node_modules/@svgdotjs/svg.js/src/types/Point.js","node_modules/@svgdotjs/svg.js/src/types/Matrix.js","node_modules/@svgdotjs/svg.js/src/modules/core/parser.js","node_modules/@svgdotjs/svg.js/src/types/Box.js","node_modules/@svgdotjs/svg.js/src/types/List.js","node_modules/@svgdotjs/svg.js/src/modules/core/event.js","node_modules/@svgdotjs/svg.js/src/modules/core/selector.js","node_modules/@svgdotjs/svg.js/src/types/EventTarget.js","node_modules/@svgdotjs/svg.js/src/modules/core/defaults.js","node_modules/@svgdotjs/svg.js/src/types/SVGArray.js","node_modules/@svgdotjs/svg.js/src/types/SVGNumber.js","node_modules/@svgdotjs/svg.js/src/modules/core/attr.js","node_modules/@svgdotjs/svg.js/src/elements/Dom.js","node_modules/@svgdotjs/svg.js/src/elements/Element.js","node_modules/@svgdotjs/svg.js/src/modules/optional/sugar.js","node_modules/@svgdotjs/svg.js/src/modules/optional/transform.js","node_modules/@svgdotjs/svg.js/src/elements/Container.js","node_modules/@svgdotjs/svg.js/src/elements/Defs.js","node_modules/@svgdotjs/svg.js/src/elements/Shape.js","node_modules/@svgdotjs/svg.js/src/modules/core/circled.js","node_modules/@svgdotjs/svg.js/src/elements/Ellipse.js","node_modules/@svgdotjs/svg.js/src/elements/Fragment.js","node_modules/@svgdotjs/svg.js/src/modules/core/gradiented.js","node_modules/@svgdotjs/svg.js/src/elements/Gradient.js","node_modules/@svgdotjs/svg.js/src/elements/Pattern.js","node_modules/@svgdotjs/svg.js/src/elements/Image.js","node_modules/@svgdotjs/svg.js/src/types/PointArray.js","node_modules/@svgdotjs/svg.js/src/modules/core/pointed.js","node_modules/@svgdotjs/svg.js/src/elements/Line.js","node_modules/@svgdotjs/svg.js/src/elements/Marker.js","node_modules/@svgdotjs/svg.js/src/animation/Controller.js","node_modules/@svgdotjs/svg.js/src/utils/pathParser.js","node_modules/@svgdotjs/svg.js/src/types/PathArray.js","node_modules/@svgdotjs/svg.js/src/animation/Morphable.js","node_modules/@svgdotjs/svg.js/src/elements/Path.js","node_modules/@svgdotjs/svg.js/src/modules/core/poly.js","node_modules/@svgdotjs/svg.js/src/elements/Polygon.js","node_modules/@svgdotjs/svg.js/src/elements/Polyline.js","node_modules/@svgdotjs/svg.js/src/elements/Rect.js","node_modules/@svgdotjs/svg.js/src/animation/Queue.js","node_modules/@svgdotjs/svg.js/src/animation/Animator.js","node_modules/@svgdotjs/svg.js/src/animation/Timeline.js","node_modules/@svgdotjs/svg.js/src/animation/Runner.js","node_modules/@svgdotjs/svg.js/src/elements/Svg.js","node_modules/@svgdotjs/svg.js/src/elements/Symbol.js","node_modules/@svgdotjs/svg.js/src/modules/core/textable.js","node_modules/@svgdotjs/svg.js/src/elements/Text.js","node_modules/@svgdotjs/svg.js/src/elements/Tspan.js","node_modules/@svgdotjs/svg.js/src/elements/Circle.js","node_modules/@svgdotjs/svg.js/src/elements/ClipPath.js","node_modules/@svgdotjs/svg.js/src/elements/ForeignObject.js","node_modules/@svgdotjs/svg.js/src/modules/core/containerGeometry.js","node_modules/@svgdotjs/svg.js/src/elements/A.js","node_modules/@svgdotjs/svg.js/src/elements/G.js","node_modules/@svgdotjs/svg.js/src/elements/Mask.js","node_modules/@svgdotjs/svg.js/src/elements/Stop.js","node_modules/@svgdotjs/svg.js/src/elements/Style.js","node_modules/@svgdotjs/svg.js/src/elements/TextPath.js","node_modules/@svgdotjs/svg.js/src/elements/Use.js","node_modules/@svgdotjs/svg.js/src/main.js","src/index.js"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets =\n  window.ShadowRoot &&\n  (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) &&\n  'adoptedStyleSheets' in Document.prototype &&\n  'replace' in CSSStyleSheet.prototype;\n\n/**\n * A CSSResult or native CSSStyleSheet.\n *\n * In browsers that support constructible CSS style sheets, CSSStyleSheet\n * object can be used for styling along side CSSResult from the `css`\n * template tag.\n */\nexport type CSSResultOrNative = CSSResult | CSSStyleSheet;\n\nexport type CSSResultArray = Array<CSSResultOrNative | CSSResultArray>;\n\n/**\n * A single CSSResult, CSSStyleSheet, or an array or nested arrays of those.\n */\nexport type CSSResultGroup = CSSResultOrNative | CSSResultArray;\n\nconst constructionToken = Symbol();\n\nconst cssTagCache = new WeakMap<TemplateStringsArray, CSSStyleSheet>();\n\n/**\n * A container for a string of CSS text, that may be used to create a CSSStyleSheet.\n *\n * CSSResult is the return value of `css`-tagged template literals and\n * `unsafeCSS()`. In order to ensure that CSSResults are only created via the\n * `css` tag and `unsafeCSS()`, CSSResult cannot be constructed directly.\n */\nexport class CSSResult {\n  // This property needs to remain unminified.\n  ['_$cssResult$'] = true;\n  readonly cssText: string;\n  private _styleSheet?: CSSStyleSheet;\n  private _strings: TemplateStringsArray | undefined;\n\n  private constructor(\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n        'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.'\n      );\n    }\n    this.cssText = cssText;\n    this._strings = strings;\n  }\n\n  // This is a getter so that it's lazy. In practice, this means stylesheets\n  // are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet | undefined {\n    // If `supportsAdoptingStyleSheets` is true then we assume CSSStyleSheet is\n    // constructable.\n    let styleSheet = this._styleSheet;\n    const strings = this._strings;\n    if (supportsAdoptingStyleSheets && styleSheet === undefined) {\n      const cacheable = strings !== undefined && strings.length === 1;\n      if (cacheable) {\n        styleSheet = cssTagCache.get(strings);\n      }\n      if (styleSheet === undefined) {\n        (this._styleSheet = styleSheet = new CSSStyleSheet()).replaceSync(\n          this.cssText\n        );\n        if (cacheable) {\n          cssTagCache.set(strings, styleSheet);\n        }\n      }\n    }\n    return styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\ntype ConstructableCSSResult = CSSResult & {\n  new (\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ): CSSResult;\n};\n\nconst textFromCSSResult = (value: CSSResultGroup | number) => {\n  // This property needs to remain unminified.\n  if ((value as CSSResult)['_$cssResult$'] === true) {\n    return (value as CSSResult).cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n      `Value passed to 'css' function must be a 'css' function result: ` +\n        `${value}. Use 'unsafeCSS' to pass non-literal values, but take care ` +\n        `to ensure page security.`\n    );\n  }\n};\n\n/**\n * Wrap a value for interpolation in a {@linkcode css} tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) =>\n  new (CSSResult as ConstructableCSSResult)(\n    typeof value === 'string' ? value : String(value),\n    undefined,\n    constructionToken\n  );\n\n/**\n * A template literal tag which can be used with LitElement's\n * {@linkcode LitElement.styles} property to set element styles.\n *\n * For security reasons, only literal string values and number may be used in\n * embedded expressions. To incorporate non-literal values {@linkcode unsafeCSS}\n * may be used inside an expression.\n */\nexport const css = (\n  strings: TemplateStringsArray,\n  ...values: (CSSResultGroup | number)[]\n): CSSResult => {\n  const cssText =\n    strings.length === 1\n      ? strings[0]\n      : values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]\n        );\n  return new (CSSResult as ConstructableCSSResult)(\n    cssText,\n    strings,\n    constructionToken\n  );\n};\n\n/**\n * Applies the given styles to a `shadowRoot`. When Shadow DOM is\n * available but `adoptedStyleSheets` is not, styles are appended to the\n * `shadowRoot` to [mimic spec behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n * Note, when shimming is used, any styles that are subsequently placed into\n * the shadowRoot should be placed *before* any shimmed adopted styles. This\n * will match spec behavior that gives adopted sheets precedence over styles in\n * shadowRoot.\n */\nexport const adoptStyles = (\n  renderRoot: ShadowRoot,\n  styles: Array<CSSResultOrNative>\n) => {\n  if (supportsAdoptingStyleSheets) {\n    (renderRoot as ShadowRoot).adoptedStyleSheets = styles.map((s) =>\n      s instanceof CSSStyleSheet ? s : s.styleSheet!\n    );\n  } else {\n    styles.forEach((s) => {\n      const style = document.createElement('style');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const nonce = (window as any)['litNonce'];\n      if (nonce !== undefined) {\n        style.setAttribute('nonce', nonce);\n      }\n      style.textContent = (s as CSSResult).cssText;\n      renderRoot.appendChild(style);\n    });\n  }\n};\n\nconst cssResultFromStyleSheet = (sheet: CSSStyleSheet) => {\n  let cssText = '';\n  for (const rule of sheet.cssRules) {\n    cssText += rule.cssText;\n  }\n  return unsafeCSS(cssText);\n};\n\nexport const getCompatibleStyle = supportsAdoptingStyleSheets\n  ? (s: CSSResultOrNative) => s\n  : (s: CSSResultOrNative) =>\n      s instanceof CSSStyleSheet ? cssResultFromStyleSheet(s) : s;\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Use this module if you want to create your own base class extending\n * {@link ReactiveElement}.\n * @packageDocumentation\n */\n\nimport {\n  getCompatibleStyle,\n  adoptStyles,\n  CSSResultGroup,\n  CSSResultOrNative,\n} from './css-tag.js';\nimport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\nexport * from './css-tag.js';\nexport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\nconst DEV_MODE = true;\n\nlet requestUpdateThenable: (name: string) => {\n  then: (\n    onfulfilled?: (value: boolean) => void,\n    _onrejected?: () => void\n  ) => void;\n};\n\nlet issueWarning: (code: string, warning: string) => void;\n\nconst trustedTypes = (window as unknown as {trustedTypes?: {emptyScript: ''}})\n  .trustedTypes;\n\n// Temporary workaround for https://crbug.com/993268\n// Currently, any attribute starting with \"on\" is considered to be a\n// TrustedScript source. Such boolean attributes must be set to the equivalent\n// trusted emptyScript value.\nconst emptyStringForBooleanAttribute = trustedTypes\n  ? (trustedTypes.emptyScript as unknown as '')\n  : '';\n\nconst polyfillSupport = DEV_MODE\n  ? window.reactiveElementPolyfillSupportDevMode\n  : window.reactiveElementPolyfillSupport;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> =\n    (globalThis.litIssuedWarnings ??= new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n\n  issueWarning(\n    'dev-mode',\n    `Lit is in dev mode. Not recommended for production!`\n  );\n\n  // Issue polyfill support warning.\n  if (window.ShadyDOM?.inUse && polyfillSupport === undefined) {\n    issueWarning(\n      'polyfill-support-missing',\n      `Shadow DOM is being polyfilled via \\`ShadyDOM\\` but ` +\n        `the \\`polyfill-support\\` module has not been loaded.`\n    );\n  }\n\n  requestUpdateThenable = (name) => ({\n    then: (\n      onfulfilled?: (value: boolean) => void,\n      _onrejected?: () => void\n    ) => {\n      issueWarning(\n        'request-update-promise',\n        `The \\`requestUpdate\\` method should no longer return a Promise but ` +\n          `does so on \\`${name}\\`. Use \\`updateComplete\\` instead.`\n      );\n      if (onfulfilled !== undefined) {\n        onfulfilled(false);\n      }\n    },\n  });\n}\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace ReactiveUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry = Update;\n    export interface Update {\n      kind: 'update';\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: ReactiveUnstable.DebugLog.Entry) => {\n      const shouldEmit = (window as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      window.dispatchEvent(\n        new CustomEvent<ReactiveUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        })\n      );\n    }\n  : undefined;\n\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\n/*@__INLINE__*/\nconst JSCompiler_renameProperty = <P extends PropertyKey>(\n  prop: P,\n  _obj: unknown\n): P => prop;\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string | null, type?: TypeHint): Type;\n\n  /**\n   * Called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n  | ComplexAttributeConverter<Type>\n  | ((value: string | null, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * When set to `true`, indicates the property is internal private state. The\n   * property should not be set by users. When using TypeScript, this property\n   * should be marked as `private` or `protected`, and it is also a common\n   * practice to use a leading `_` in the name. The property is not added to\n   * `observedAttributes`.\n   */\n  readonly state?: boolean;\n\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean | string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\n/**\n * A Map of property keys to values.\n *\n * Takes an optional type parameter T, which when specified as a non-any,\n * non-unknown type, will make the Map more strongly-typed, associating the map\n * keys with their corresponding value type on T.\n *\n * Use `PropertyValues<this>` when overriding ReactiveElement.update() and\n * other lifecycle methods in order to get stronger type-checking on keys\n * and values.\n */\n// This type is conditional so that if the parameter T is not specified, or\n// is `any`, the type will include `Map<PropertyKey, unknown>`. Since T is not\n// given in the uses of PropertyValues in this file, all uses here fallback to\n// meaning `Map<PropertyKey, unknown>`, but if a developer uses\n// `PropertyValues<this>` (or any other value for T) they will get a\n// strongly-typed Map type.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type PropertyValues<T = any> = T extends object\n  ? PropertyValueMap<T>\n  : Map<PropertyKey, unknown>;\n\n/**\n * Do not use, instead prefer {@linkcode PropertyValues}.\n */\n// This type must be exported such that JavaScript generated by the Google\n// Closure Compiler can import a type reference.\nexport interface PropertyValueMap<T> extends Map<PropertyKey, unknown> {\n  get<K extends keyof T>(k: K): T[K];\n  set<K extends keyof T>(key: K, value: T[K]): this;\n  has<K extends keyof T>(k: K): boolean;\n  delete<K extends keyof T>(k: K): boolean;\n}\n\nexport const defaultConverter: ComplexAttributeConverter = {\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        value = value ? emptyStringForBooleanAttribute : null;\n        break;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        value = value == null ? value : JSON.stringify(value);\n        break;\n    }\n    return value;\n  },\n\n  fromAttribute(value: string | null, type?: unknown) {\n    let fromValue: unknown = value;\n    switch (type) {\n      case Boolean:\n        fromValue = value !== null;\n        break;\n      case Number:\n        fromValue = value === null ? null : Number(value);\n        break;\n      case Object:\n      case Array:\n        // Do *not* generate exception when invalid JSON is set as elements\n        // don't normally complain on being mis-configured.\n        // TODO(sorvell): Do generate exception in *dev mode*.\n        try {\n          // Assert to adhere to Bazel's \"must type assert JSON parse\" rule.\n          fromValue = JSON.parse(value!) as unknown;\n        } catch (e) {\n          fromValue = null;\n        }\n        break;\n    }\n    return fromValue;\n  },\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean => {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual,\n};\n\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n\n/**\n * A string representing one of the supported dev mode warning categories.\n */\nexport type WarningKind = 'change-in-update' | 'migration';\n\nexport type Initializer = (element: ReactiveElement) => void;\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport abstract class ReactiveElement\n  extends HTMLElement\n  implements ReactiveControllerHost\n{\n  // Note: these are patched in only in DEV_MODE.\n  /**\n   * Read or set all the enabled warning categories for this class.\n   *\n   * This property is only used in development builds.\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enabledWarnings?: WarningKind[];\n\n  /**\n   * Enable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Enable for all ReactiveElement subclasses\n   * ReactiveElement.enableWarning?.('migration');\n   *\n   * // Enable for only MyElement and subclasses\n   * MyElement.enableWarning?.('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Disable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Disable for all ReactiveElement subclasses\n   * ReactiveElement.disableWarning?.('migration');\n   *\n   * // Disable for only MyElement and subclasses\n   * MyElement.disableWarning?.('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static disableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Adds an initializer function to the class that is called during instance\n   * construction.\n   *\n   * This is useful for code that runs against a `ReactiveElement`\n   * subclass, such as a decorator, that needs to do work for each\n   * instance, such as setting up a `ReactiveController`.\n   *\n   * ```ts\n   * const myDecorator = (target: typeof ReactiveElement, key: string) => {\n   *   target.addInitializer((instance: ReactiveElement) => {\n   *     // This is run during construction of the element\n   *     new MyController(instance);\n   *   });\n   * }\n   * ```\n   *\n   * Decorating a field will then cause each instance to run an initializer\n   * that adds a controller:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   @myDecorator foo;\n   * }\n   * ```\n   *\n   * Initializers are stored per-constructor. Adding an initializer to a\n   * subclass does not add it to a superclass. Since initializers are run in\n   * constructors, initializers will run in order of the class hierarchy,\n   * starting with superclasses and progressing to the instance's class.\n   *\n   * @nocollapse\n   */\n  static addInitializer(initializer: Initializer) {\n    this._initializers ??= [];\n    this._initializers.push(initializer);\n  }\n\n  static _initializers?: Initializer[];\n\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   * @nocollapse\n   */\n  private static __attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having finished creating properties.\n   */\n  protected static [finalized] = true;\n\n  /**\n   * Memoized list of all element properties, including any superclass properties.\n   * Created lazily on user subclasses when finalizing the class.\n   * @nocollapse\n   * @category properties\n   */\n  static elementProperties: PropertyDeclarationMap = new Map();\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring reactive properties. When\n   * a reactive property is set the element will update and render.\n   *\n   * By default properties are public fields, and as such, they should be\n   * considered as primarily settable by element users, either via attribute or\n   * the property itself.\n   *\n   * Generally, properties that are changed by the element should be private or\n   * protected fields and should use the `state: true` option. Properties\n   * marked as `state` do not reflect from the corresponding attribute\n   *\n   * However, sometimes element code does need to set a public property. This\n   * should typically only be done in response to user interaction, and an event\n   * should be fired informing the user; for example, a checkbox sets its\n   * `checked` property when clicked and fires a `changed` event. Mutating\n   * public properties should typically not be done for non-primitive (object or\n   * array) properties. In other cases when an element needs to manage state, a\n   * private property set with the `state: true` option should be used. When\n   * needed, state properties can be initialized via public properties to\n   * facilitate complex interactions.\n   * @nocollapse\n   * @category properties\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Memoized list of all element styles.\n   * Created lazily on user subclasses when finalizing the class.\n   * @nocollapse\n   * @category styles\n   */\n  static elementStyles: Array<CSSResultOrNative> = [];\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the {@linkcode css} tag function, via constructible stylesheets, or\n   * imported from native CSS module scripts.\n   *\n   * Note on Content Security Policy:\n   *\n   * Element styles are implemented with `<style>` tags when the browser doesn't\n   * support adopted StyleSheets. To use such `<style>` tags with the style-src\n   * CSP directive, the style-src value must either include 'unsafe-inline' or\n   * 'nonce-<base64-value>' with <base64-value> replaced be a server-generated\n   * nonce.\n   *\n   * To provide a nonce to use on generated <style> elements, set\n   * `window.litNonce` to a server-generated nonce in your page's HTML, before\n   * loading application code:\n   *\n   * ```html\n   * <script>\n   *   // Generated and unique per request:\n   *   window.litNonce = 'a1b2c3d4';\n   * </script>\n   * ```\n   * @nocollapse\n   * @category styles\n   */\n  static styles?: CSSResultGroup;\n\n  /**\n   * The set of properties defined by this class that caused an accessor to be\n   * added during `createProperty`.\n   * @nocollapse\n   */\n  private static __reactivePropertyKeys?: Set<PropertyKey>;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   * @category attributes\n   */\n  static get observedAttributes() {\n    // note: piggy backing on this to ensure we're finalized.\n    this.finalize();\n    const attributes: string[] = [];\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    this.elementProperties.forEach((v, p) => {\n      const attr = this.__attributeNameForProperty(p, v);\n      if (attr !== undefined) {\n        this.__attributeToPropertyMap.set(attr, p);\n        attributes.push(attr);\n      }\n    });\n    return attributes;\n  }\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist\n   * and stores a {@linkcode PropertyDeclaration} for the property with the\n   * given options. The property setter calls the property's `hasChanged`\n   * property option or uses a strict identity check to determine whether or not\n   * to request an update.\n   *\n   * This method may be overridden to customize properties; however,\n   * when doing so, it's important to call `super.createProperty` to ensure\n   * the property is setup correctly. This method calls\n   * `getPropertyDescriptor` internally to get a descriptor to install.\n   * To customize what properties do when they are get or set, override\n   * `getPropertyDescriptor`. To customize the options for a property,\n   * implement `createProperty` like this:\n   *\n   * ```ts\n   * static createProperty(name, options) {\n   *   options = Object.assign(options, {myOption: true});\n   *   super.createProperty(name, options);\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  static createProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration = defaultPropertyDeclaration\n  ) {\n    // if this is a state property, force the attribute to false.\n    if (options.state) {\n      // Cast as any since this is readonly.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (options as any).attribute = false;\n    }\n    // Note, since this can be called by the `@property` decorator which\n    // is called before `finalize`, we ensure finalization has been kicked off.\n    this.finalize();\n    this.elementProperties.set(name, options);\n    // Do not generate an accessor if the prototype already has one, since\n    // it would be lost otherwise and that would never be the user's intention;\n    // Instead, we expect users to call `requestUpdate` themselves from\n    // user-defined accessors. Note that if the super has an accessor we will\n    // still overwrite it\n    if (!options.noAccessor && !this.prototype.hasOwnProperty(name)) {\n      const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n      const descriptor = this.getPropertyDescriptor(name, key, options);\n      if (descriptor !== undefined) {\n        Object.defineProperty(this.prototype, name, descriptor);\n        if (DEV_MODE) {\n          // If this class doesn't have its own set, create one and initialize\n          // with the values in the set from the nearest ancestor class, if any.\n          if (!this.hasOwnProperty('__reactivePropertyKeys')) {\n            this.__reactivePropertyKeys = new Set(\n              this.__reactivePropertyKeys ?? []\n            );\n          }\n          this.__reactivePropertyKeys!.add(name);\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns a property descriptor to be defined on the given named property.\n   * If no descriptor is returned, the property will not become an accessor.\n   * For example,\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   static getPropertyDescriptor(name, key, options) {\n   *     const defaultDescriptor =\n   *         super.getPropertyDescriptor(name, key, options);\n   *     const setter = defaultDescriptor.set;\n   *     return {\n   *       get: defaultDescriptor.get,\n   *       set(value) {\n   *         setter.call(this, value);\n   *         // custom action.\n   *       },\n   *       configurable: true,\n   *       enumerable: true\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  protected static getPropertyDescriptor(\n    name: PropertyKey,\n    key: string | symbol,\n    options: PropertyDeclaration\n  ): PropertyDescriptor | undefined {\n    return {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      get(): any {\n        return (this as {[key: string]: unknown})[key as string];\n      },\n      set(this: ReactiveElement, value: unknown) {\n        const oldValue = (this as {} as {[key: string]: unknown})[\n          name as string\n        ];\n        (this as {} as {[key: string]: unknown})[key as string] = value;\n        (this as unknown as ReactiveElement).requestUpdate(\n          name,\n          oldValue,\n          options\n        );\n      },\n      configurable: true,\n      enumerable: true,\n    };\n  }\n\n  /**\n   * Returns the property options associated with the given property.\n   * These options are defined with a `PropertyDeclaration` via the `properties`\n   * object or the `@property` decorator and are registered in\n   * `createProperty(...)`.\n   *\n   * Note, this method should be considered \"final\" and not overridden. To\n   * customize the options for a given property, override\n   * {@linkcode createProperty}.\n   *\n   * @nocollapse\n   * @final\n   * @category properties\n   */\n  static getPropertyOptions(name: PropertyKey) {\n    return this.elementProperties.get(name) || defaultPropertyDeclaration;\n  }\n\n  /**\n   * Creates property accessors for registered properties, sets up element\n   * styling, and ensures any superclasses are also finalized. Returns true if\n   * the element was finalized.\n   * @nocollapse\n   */\n  protected static finalize() {\n    if (this.hasOwnProperty(finalized)) {\n      return false;\n    }\n    this[finalized] = true;\n    // finalize any superclasses\n    const superCtor = Object.getPrototypeOf(this) as typeof ReactiveElement;\n    superCtor.finalize();\n    this.elementProperties = new Map(superCtor.elementProperties);\n    // initialize Map populated in observedAttributes\n    this.__attributeToPropertyMap = new Map();\n    // make any properties\n    // Note, only process \"own\" properties since this element will inherit\n    // any properties defined on the superClass, and finalization ensures\n    // the entire prototype chain is finalized.\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      // support symbols in properties (IE11 does not support this)\n      const propKeys = [\n        ...Object.getOwnPropertyNames(props),\n        ...Object.getOwnPropertySymbols(props),\n      ];\n      // This for/of is ok because propKeys is an array\n      for (const p of propKeys) {\n        // note, use of `any` is due to TypeScript lack of support for symbol in\n        // index types\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.createProperty(p, (props as any)[p]);\n      }\n    }\n    this.elementStyles = this.finalizeStyles(this.styles);\n    // DEV mode warnings\n    if (DEV_MODE) {\n      const warnRemovedOrRenamed = (name: string, renamed = false) => {\n        if (this.prototype.hasOwnProperty(name)) {\n          issueWarning(\n            renamed ? 'renamed-api' : 'removed-api',\n            `\\`${name}\\` is implemented on class ${this.name}. It ` +\n              `has been ${renamed ? 'renamed' : 'removed'} ` +\n              `in this version of LitElement.`\n          );\n        }\n      };\n      warnRemovedOrRenamed('initialize');\n      warnRemovedOrRenamed('requestUpdateInternal');\n      warnRemovedOrRenamed('_getUpdateComplete', true);\n    }\n    return true;\n  }\n\n  /**\n   * Options used when calling `attachShadow`. Set this property to customize\n   * the options for the shadowRoot; for example, to create a closed\n   * shadowRoot: `{mode: 'closed'}`.\n   *\n   * Note, these options are used in `createRenderRoot`. If this method\n   * is customized, options should be respected if possible.\n   * @nocollapse\n   * @category rendering\n   */\n  static shadowRootOptions: ShadowRootInit = {mode: 'open'};\n\n  /**\n   * Takes the styles the user supplied via the `static styles` property and\n   * returns the array of styles to apply to the element.\n   * Override this method to integrate into a style management system.\n   *\n   * Styles are deduplicated preserving the _last_ instance in the list. This\n   * is a performance optimization to avoid duplicated styles that can occur\n   * especially when composing via subclassing. The last item is kept to try\n   * to preserve the cascade order with the assumption that it's most important\n   * that last added styles override previous styles.\n   *\n   * @nocollapse\n   * @category styles\n   */\n  protected static finalizeStyles(\n    styles?: CSSResultGroup\n  ): Array<CSSResultOrNative> {\n    const elementStyles = [];\n    if (Array.isArray(styles)) {\n      // Dedupe the flattened array in reverse order to preserve the last items.\n      // Casting to Array<unknown> works around TS error that\n      // appears to come from trying to flatten a type CSSResultArray.\n      const set = new Set((styles as Array<unknown>).flat(Infinity).reverse());\n      // Then preserve original order by adding the set items in reverse order.\n      for (const s of set) {\n        elementStyles.unshift(getCompatibleStyle(s as CSSResultOrNative));\n      }\n    } else if (styles !== undefined) {\n      elementStyles.push(getCompatibleStyle(styles));\n    }\n    return elementStyles;\n  }\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   * @category rendering\n   */\n  readonly renderRoot!: HTMLElement | ShadowRoot;\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static __attributeNameForProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration\n  ) {\n    const attribute = options.attribute;\n    return attribute === false\n      ? undefined\n      : typeof attribute === 'string'\n      ? attribute\n      : typeof name === 'string'\n      ? name.toLowerCase()\n      : undefined;\n  }\n\n  private __instanceProperties?: PropertyValues = new Map();\n  // Initialize to an unresolved Promise so we can make sure the element has\n  // connected before first update.\n  private __updatePromise!: Promise<boolean>;\n\n  /**\n   * True if there is a pending update as a result of calling `requestUpdate()`.\n   * Should only be read.\n   * @category updates\n   */\n  isUpdatePending = false;\n\n  /**\n   * Is set to `true` after the first update. The element code cannot assume\n   * that `renderRoot` exists before the element `hasUpdated`.\n   * @category updates\n   */\n  hasUpdated = false;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   *\n   * @internal\n   */\n  _$changedProperties!: PropertyValues;\n\n  /**\n   * Map with keys of properties that should be reflected when updated.\n   */\n  private __reflectingProperties?: Map<PropertyKey, PropertyDeclaration>;\n\n  /**\n   * Name of currently reflecting property\n   */\n  private __reflectingProperty: PropertyKey | null = null;\n\n  /**\n   * Set of controllers.\n   */\n  private __controllers?: ReactiveController[];\n\n  constructor() {\n    super();\n    this._initialize();\n  }\n\n  /**\n   * Internal only override point for customizing work done when elements\n   * are constructed.\n   *\n   * @internal\n   */\n  _initialize() {\n    this.__updatePromise = new Promise<boolean>(\n      (res) => (this.enableUpdating = res)\n    );\n    this._$changedProperties = new Map();\n    this.__saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this.requestUpdate();\n    (this.constructor as typeof ReactiveElement)._initializers?.forEach((i) =>\n      i(this)\n    );\n  }\n\n  /**\n   * Registers a `ReactiveController` to participate in the element's reactive\n   * update cycle. The element automatically calls into any registered\n   * controllers during its lifecycle callbacks.\n   *\n   * If the element is connected when `addController()` is called, the\n   * controller's `hostConnected()` callback will be immediately called.\n   * @category controllers\n   */\n  addController(controller: ReactiveController) {\n    (this.__controllers ??= []).push(controller);\n    // If a controller is added after the element has been connected,\n    // call hostConnected. Note, re-using existence of `renderRoot` here\n    // (which is set in connectedCallback) to avoid the need to track a\n    // first connected state.\n    if (this.renderRoot !== undefined && this.isConnected) {\n      controller.hostConnected?.();\n    }\n  }\n\n  /**\n   * Removes a `ReactiveController` from the element.\n   * @category controllers\n   */\n  removeController(controller: ReactiveController) {\n    // Note, if the indexOf is -1, the >>> will flip the sign which makes the\n    // splice do nothing.\n    this.__controllers?.splice(this.__controllers.indexOf(controller) >>> 0, 1);\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private __saveInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    (this.constructor as typeof ReactiveElement).elementProperties.forEach(\n      (_v, p) => {\n        if (this.hasOwnProperty(p)) {\n          this.__instanceProperties!.set(p, this[p as keyof this]);\n          delete this[p as keyof this];\n        }\n      }\n    );\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   *\n   * @return Returns a node into which to render.\n   * @category rendering\n   */\n  protected createRenderRoot(): Element | ShadowRoot {\n    const renderRoot =\n      this.shadowRoot ??\n      this.attachShadow(\n        (this.constructor as typeof ReactiveElement).shadowRootOptions\n      );\n    adoptStyles(\n      renderRoot,\n      (this.constructor as typeof ReactiveElement).elementStyles\n    );\n    return renderRoot;\n  }\n\n  /**\n   * On first connection, creates the element's renderRoot, sets up\n   * element styling, and enables updating.\n   * @category lifecycle\n   */\n  connectedCallback() {\n    // create renderRoot before first update.\n    if (this.renderRoot === undefined) {\n      (\n        this as {\n          renderRoot: Element | DocumentFragment;\n        }\n      ).renderRoot = this.createRenderRoot();\n    }\n    this.enableUpdating(true);\n    this.__controllers?.forEach((c) => c.hostConnected?.());\n  }\n\n  /**\n   * Note, this method should be considered final and not overridden. It is\n   * overridden on the element instance with a function that triggers the first\n   * update.\n   * @category updates\n   */\n  protected enableUpdating(_requestedUpdate: boolean) {}\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   * @category lifecycle\n   */\n  disconnectedCallback() {\n    this.__controllers?.forEach((c) => c.hostDisconnected?.());\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   *\n   * Specifically, when an attribute is set, the corresponding property is set.\n   * You should rarely need to implement this callback. If this method is\n   * overridden, `super.attributeChangedCallback(name, _old, value)` must be\n   * called.\n   *\n   * See [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)\n   * on MDN for more information about the `attributeChangedCallback`.\n   * @category attributes\n   */\n  attributeChangedCallback(\n    name: string,\n    _old: string | null,\n    value: string | null\n  ) {\n    this._$attributeToProperty(name, value);\n  }\n\n  private __propertyToAttribute(\n    name: PropertyKey,\n    value: unknown,\n    options: PropertyDeclaration = defaultPropertyDeclaration\n  ) {\n    const attr = (\n      this.constructor as typeof ReactiveElement\n    ).__attributeNameForProperty(name, options);\n    if (attr !== undefined && options.reflect === true) {\n      const toAttribute =\n        (options.converter as ComplexAttributeConverter)?.toAttribute ??\n        defaultConverter.toAttribute;\n      const attrValue = toAttribute!(value, options.type);\n      if (\n        DEV_MODE &&\n        (this.constructor as typeof ReactiveElement).enabledWarnings!.indexOf(\n          'migration'\n        ) >= 0 &&\n        attrValue === undefined\n      ) {\n        issueWarning(\n          'undefined-attribute-value',\n          `The attribute value for the ${name as string} property is ` +\n            `undefined on element ${this.localName}. The attribute will be ` +\n            `removed, but in the previous version of \\`ReactiveElement\\`, ` +\n            `the attribute would not have changed.`\n        );\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this.__reflectingProperty = name;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /** @internal */\n  _$attributeToProperty(name: string, value: string | null) {\n    const ctor = this.constructor as typeof ReactiveElement;\n    // Note, hint this as an `AttributeMap` so closure clearly understands\n    // the type; it has issues with tracking types through statics\n    const propName = (ctor.__attributeToPropertyMap as AttributeMap).get(name);\n    // Use tracking info to avoid reflecting a property value to an attribute\n    // if it was just set because the attribute changed.\n    if (propName !== undefined && this.__reflectingProperty !== propName) {\n      const options = ctor.getPropertyOptions(propName);\n      const converter = options.converter;\n      const fromAttribute =\n        (converter as ComplexAttributeConverter)?.fromAttribute ??\n        (typeof converter === 'function'\n          ? (converter as (value: string | null, type?: unknown) => unknown)\n          : null) ??\n        defaultConverter.fromAttribute;\n      // mark state reflecting\n      this.__reflectingProperty = propName;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this[propName as keyof this] = fromAttribute!(value, options.type) as any;\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should be called\n   * when an element should update based on some state not triggered by setting\n   * a reactive property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored.\n   *\n   * @param name name of requesting property\n   * @param oldValue old value of requesting property\n   * @param options property options to use instead of the previously\n   *     configured options\n   * @category updates\n   */\n  requestUpdate(\n    name?: PropertyKey,\n    oldValue?: unknown,\n    options?: PropertyDeclaration\n  ): void {\n    let shouldRequestUpdate = true;\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      options =\n        options ||\n        (this.constructor as typeof ReactiveElement).getPropertyOptions(name);\n      const hasChanged = options.hasChanged || notEqual;\n      if (hasChanged(this[name as keyof this], oldValue)) {\n        if (!this._$changedProperties.has(name)) {\n          this._$changedProperties.set(name, oldValue);\n        }\n        // Add to reflecting properties set.\n        // Note, it's important that every change has a chance to add the\n        // property to `_reflectingProperties`. This ensures setting\n        // attribute + property reflects correctly.\n        if (options.reflect === true && this.__reflectingProperty !== name) {\n          if (this.__reflectingProperties === undefined) {\n            this.__reflectingProperties = new Map();\n          }\n          this.__reflectingProperties.set(name, options);\n        }\n      } else {\n        // Abort the request if the property should not be considered changed.\n        shouldRequestUpdate = false;\n      }\n    }\n    if (!this.isUpdatePending && shouldRequestUpdate) {\n      this.__updatePromise = this.__enqueueUpdate();\n    }\n    // Note, since this no longer returns a promise, in dev mode we return a\n    // thenable which warns if it's called.\n    return DEV_MODE\n      ? (requestUpdateThenable(this.localName) as unknown as void)\n      : undefined;\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async __enqueueUpdate() {\n    this.isUpdatePending = true;\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await this.__updatePromise;\n    } catch (e) {\n      // Refire any previous errors async so they do not disrupt the update\n      // cycle. Errors are refired so developers have a chance to observe\n      // them, and this can be done by implementing\n      // `window.onunhandledrejection`.\n      Promise.reject(e);\n    }\n    const result = this.scheduleUpdate();\n    // If `scheduleUpdate` returns a Promise, we await it. This is done to\n    // enable coordinating updates with a scheduler. Note, the result is\n    // checked to avoid delaying an additional microtask unless we need to.\n    if (result != null) {\n      await result;\n    }\n    return !this.isUpdatePending;\n  }\n\n  /**\n   * Schedules an element update. You can override this method to change the\n   * timing of updates by returning a Promise. The update will await the\n   * returned Promise, and you should resolve the Promise to allow the update\n   * to proceed. If this method is overridden, `super.scheduleUpdate()`\n   * must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```ts\n   * override protected async scheduleUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.scheduleUpdate();\n   * }\n   * ```\n   * @category updates\n   */\n  protected scheduleUpdate(): void | Promise<unknown> {\n    return this.performUpdate();\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * Call `performUpdate()` to immediately process a pending update. This should\n   * generally not be needed, but it can be done in rare cases when you need to\n   * update synchronously.\n   *\n   * Note: To ensure `performUpdate()` synchronously completes a pending update,\n   * it should not be overridden. In LitElement 2.x it was suggested to override\n   * `performUpdate()` to also customizing update scheduling. Instead, you should now\n   * override `scheduleUpdate()`. For backwards compatibility with LitElement 2.x,\n   * scheduling updates via `performUpdate()` continues to work, but will make\n   * also calling `performUpdate()` to synchronously process updates difficult.\n   *\n   * @category updates\n   */\n  protected performUpdate(): void | Promise<unknown> {\n    // Abort any update if one is not pending when this is called.\n    // This can happen if `performUpdate` is called early to \"flush\"\n    // the update.\n    if (!this.isUpdatePending) {\n      return;\n    }\n    debugLogEvent?.({kind: 'update'});\n    // create renderRoot before first update.\n    if (!this.hasUpdated) {\n      // Produce warning if any class properties are shadowed by class fields\n      if (DEV_MODE) {\n        const shadowedProperties: string[] = [];\n        (\n          this.constructor as typeof ReactiveElement\n        ).__reactivePropertyKeys?.forEach((p) => {\n          if (this.hasOwnProperty(p) && !this.__instanceProperties?.has(p)) {\n            shadowedProperties.push(p as string);\n          }\n        });\n        if (shadowedProperties.length) {\n          throw new Error(\n            `The following properties on element ${this.localName} will not ` +\n              `trigger updates as expected because they are set using class ` +\n              `fields: ${shadowedProperties.join(', ')}. ` +\n              `Native class fields and some compiled output will overwrite ` +\n              `accessors used for detecting changes. See ` +\n              `https://lit.dev/msg/class-field-shadowing ` +\n              `for more information.`\n          );\n        }\n      }\n    }\n    // Mixin instance properties once, if they exist.\n    if (this.__instanceProperties) {\n      // Use forEach so this works even if for/of loops are compiled to for loops\n      // expecting arrays\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.__instanceProperties!.forEach((v, p) => ((this as any)[p] = v));\n      this.__instanceProperties = undefined;\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._$changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.willUpdate(changedProperties);\n        this.__controllers?.forEach((c) => c.hostUpdate?.());\n        this.update(changedProperties);\n      } else {\n        this.__markUpdated();\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      // Ensure element can accept additional updates after an exception.\n      this.__markUpdated();\n      throw e;\n    }\n    // The update is no longer considered pending and further updates are now allowed.\n    if (shouldUpdate) {\n      this._$didUpdate(changedProperties);\n    }\n  }\n\n  /**\n   * Invoked before `update()` to compute values needed during the update.\n   *\n   * Implement `willUpdate` to compute property values that depend on other\n   * properties and are used in the rest of the update process.\n   *\n   * ```ts\n   * willUpdate(changedProperties) {\n   *   // only need to check changed properties for an expensive computation.\n   *   if (changedProperties.has('firstName') || changedProperties.has('lastName')) {\n   *     this.sha = computeSHA(`${this.firstName} ${this.lastName}`);\n   *   }\n   * }\n   *\n   * render() {\n   *   return html`SHA: ${this.sha}`;\n   * }\n   * ```\n   *\n   * @category updates\n   */\n  protected willUpdate(_changedProperties: PropertyValues): void {}\n\n  // Note, this is an override point for polyfill-support.\n  // @internal\n  _$didUpdate(changedProperties: PropertyValues) {\n    this.__controllers?.forEach((c) => c.hostUpdated?.());\n    if (!this.hasUpdated) {\n      this.hasUpdated = true;\n      this.firstUpdated(changedProperties);\n    }\n    this.updated(changedProperties);\n    if (\n      DEV_MODE &&\n      this.isUpdatePending &&\n      (this.constructor as typeof ReactiveElement).enabledWarnings!.indexOf(\n        'change-in-update'\n      ) >= 0\n    ) {\n      issueWarning(\n        'change-in-update',\n        `Element ${this.localName} scheduled an update ` +\n          `(generally because a property was set) ` +\n          `after an update completed, causing a new update to be scheduled. ` +\n          `This is inefficient and should be avoided unless the next update ` +\n          `can only be scheduled as a side effect of the previous update.`\n      );\n    }\n  }\n\n  private __markUpdated() {\n    this._$changedProperties = new Map();\n    this.isUpdatePending = false;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super.getUpdateComplete()`, then any subsequent state.\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  get updateComplete(): Promise<boolean> {\n    return this.getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   override async getUpdateComplete() {\n   *     const result = await super.getUpdateComplete();\n   *     await this._myChild.updateComplete;\n   *     return result;\n   *   }\n   * }\n   * ```\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  protected getUpdateComplete(): Promise<boolean> {\n    return this.__updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update()` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected update(_changedProperties: PropertyValues) {\n    if (this.__reflectingProperties !== undefined) {\n      // Use forEach so this works even if for/of loops are compiled to for\n      // loops expecting arrays\n      this.__reflectingProperties.forEach((v, k) =>\n        this.__propertyToAttribute(k, this[k as keyof this], v)\n      );\n      this.__reflectingProperties = undefined;\n    }\n    this.__markUpdated();\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected updated(_changedProperties: PropertyValues) {}\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * ```ts\n   * firstUpdated() {\n   *   this.renderRoot.getElementById('my-text-area').focus();\n   * }\n   * ```\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {}\n}\n\n// Apply polyfills if available\npolyfillSupport?.({ReactiveElement});\n\n// Dev mode warnings...\nif (DEV_MODE) {\n  // Default warning set.\n  ReactiveElement.enabledWarnings = ['change-in-update'];\n  const ensureOwnWarnings = function (ctor: typeof ReactiveElement) {\n    if (\n      !ctor.hasOwnProperty(JSCompiler_renameProperty('enabledWarnings', ctor))\n    ) {\n      ctor.enabledWarnings = ctor.enabledWarnings!.slice();\n    }\n  };\n  ReactiveElement.enableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    if (this.enabledWarnings!.indexOf(warning) < 0) {\n      this.enabledWarnings!.push(warning);\n    }\n  };\n  ReactiveElement.disableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    const i = this.enabledWarnings!.indexOf(warning);\n    if (i >= 0) {\n      this.enabledWarnings!.splice(i, 1);\n    }\n  };\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for ReactiveElement usage.\n(globalThis.reactiveElementVersions ??= []).push('1.3.4');\nif (DEV_MODE && globalThis.reactiveElementVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. Loading multiple versions ` +\n      `is not recommended.`\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// IMPORTANT: these imports must be type-only\nimport type {Directive, DirectiveResult, PartInfo} from './directive.js';\n\nconst DEV_MODE = true;\nconst ENABLE_EXTRA_SECURITY_HOOKS = true;\nconst ENABLE_SHADYDOM_NOPATCH = true;\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace LitUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | TemplatePrep\n      | TemplateInstantiated\n      | TemplateInstantiatedAndUpdated\n      | TemplateUpdating\n      | BeginRender\n      | EndRender\n      | CommitPartEntry\n      | SetPartValue;\n    export interface TemplatePrep {\n      kind: 'template prep';\n      template: Template;\n      strings: TemplateStringsArray;\n      clonableTemplate: HTMLTemplateElement;\n      parts: TemplatePart[];\n    }\n    export interface BeginRender {\n      kind: 'begin render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart | undefined;\n    }\n    export interface EndRender {\n      kind: 'end render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart;\n    }\n    export interface TemplateInstantiated {\n      kind: 'template instantiated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateInstantiatedAndUpdated {\n      kind: 'template instantiated and updated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateUpdating {\n      kind: 'template updating';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface SetPartValue {\n      kind: 'set part';\n      part: Part;\n      value: unknown;\n      valueIndex: number;\n      values: unknown[];\n      templateInstance: TemplateInstance;\n    }\n\n    export type CommitPartEntry =\n      | CommitNothingToChildEntry\n      | CommitText\n      | CommitNode\n      | CommitAttribute\n      | CommitProperty\n      | CommitBooleanAttribute\n      | CommitEventListener\n      | CommitToElementBinding;\n\n    export interface CommitNothingToChildEntry {\n      kind: 'commit nothing to child';\n      start: ChildNode;\n      end: ChildNode | null;\n      parent: Disconnectable | undefined;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitText {\n      kind: 'commit text';\n      node: Text;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitNode {\n      kind: 'commit node';\n      start: Node;\n      parent: Disconnectable | undefined;\n      value: Node;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitAttribute {\n      kind: 'commit attribute';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitProperty {\n      kind: 'commit property';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitBooleanAttribute {\n      kind: 'commit boolean attribute';\n      element: Element;\n      name: string;\n      value: boolean;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitEventListener {\n      kind: 'commit event listener';\n      element: Element;\n      name: string;\n      value: unknown;\n      oldListener: unknown;\n      options: RenderOptions | undefined;\n      // True if we're removing the old event listener (e.g. because settings changed, or value is nothing)\n      removeListener: boolean;\n      // True if we're adding a new event listener (e.g. because first render, or settings changed)\n      addListener: boolean;\n    }\n\n    export interface CommitToElementBinding {\n      kind: 'commit to element binding';\n      element: Element;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: LitUnstable.DebugLog.Entry) => {\n      const shouldEmit = (window as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      window.dispatchEvent(\n        new CustomEvent<LitUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        })\n      );\n    }\n  : undefined;\n// Used for connecting beginRender and endRender events when there are nested\n// renders when errors are thrown preventing an endRender event from being\n// called.\nlet debugLogRenderId = 0;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  globalThis.litIssuedWarnings ??= new Set();\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += code\n      ? ` See https://lit.dev/msg/${code} for more information.`\n      : '';\n    if (!globalThis.litIssuedWarnings!.has(warning)) {\n      console.warn(warning);\n      globalThis.litIssuedWarnings!.add(warning);\n    }\n  };\n\n  issueWarning(\n    'dev-mode',\n    `Lit is in dev mode. Not recommended for production!`\n  );\n}\n\nconst wrap =\n  ENABLE_SHADYDOM_NOPATCH &&\n  window.ShadyDOM?.inUse &&\n  window.ShadyDOM?.noPatch === true\n    ? window.ShadyDOM!.wrap\n    : (node: Node) => node;\n\nconst trustedTypes = (globalThis as unknown as Partial<Window>).trustedTypes;\n\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = trustedTypes\n  ? trustedTypes.createPolicy('lit-html', {\n      createHTML: (s) => s,\n    })\n  : undefined;\n\n/**\n * Used to sanitize any value before it is written into the DOM. This can be\n * used to implement a security policy of allowed and disallowed values in\n * order to prevent XSS attacks.\n *\n * One way of using this callback would be to check attributes and properties\n * against a list of high risk fields, and require that values written to such\n * fields be instances of a class which is safe by construction. Closure's Safe\n * HTML Types is one implementation of this technique (\n * https://github.com/google/safe-html-types/blob/master/doc/safehtml-types.md).\n * The TrustedTypes polyfill in API-only mode could also be used as a basis\n * for this technique (https://github.com/WICG/trusted-types).\n *\n * @param node The HTML node (usually either a #text node or an Element) that\n *     is being written to. Note that this is just an exemplar node, the write\n *     may take place against another instance of the same class of node.\n * @param name The name of an attribute or property (for example, 'href').\n * @param type Indicates whether the write that's about to be performed will\n *     be to a property or a node.\n * @return A function that will sanitize this class of writes.\n */\nexport type SanitizerFactory = (\n  node: Node,\n  name: string,\n  type: 'property' | 'attribute'\n) => ValueSanitizer;\n\n/**\n * A function which can sanitize values that will be written to a specific kind\n * of DOM sink.\n *\n * See SanitizerFactory.\n *\n * @param value The value to sanitize. Will be the actual value passed into\n *     the lit-html template literal, so this could be of any type.\n * @return The value to write to the DOM. Usually the same as the input value,\n *     unless sanitization is needed.\n */\nexport type ValueSanitizer = (value: unknown) => unknown;\n\nconst identityFunction: ValueSanitizer = (value: unknown) => value;\nconst noopSanitizer: SanitizerFactory = (\n  _node: Node,\n  _name: string,\n  _type: 'property' | 'attribute'\n) => identityFunction;\n\n/** Sets the global sanitizer factory. */\nconst setSanitizer = (newSanitizer: SanitizerFactory) => {\n  if (!ENABLE_EXTRA_SECURITY_HOOKS) {\n    return;\n  }\n  if (sanitizerFactoryInternal !== noopSanitizer) {\n    throw new Error(\n      `Attempted to overwrite existing lit-html security policy.` +\n        ` setSanitizeDOMValueFactory should be called at most once.`\n    );\n  }\n  sanitizerFactoryInternal = newSanitizer;\n};\n\n/**\n * Only used in internal tests, not a part of the public API.\n */\nconst _testOnlyClearSanitizerFactoryDoNotCallOrElse = () => {\n  sanitizerFactoryInternal = noopSanitizer;\n};\n\nconst createSanitizer: SanitizerFactory = (node, name, type) => {\n  return sanitizerFactoryInternal(node, name, type);\n};\n\n// Added to an attribute name to mark the attribute as bound so we can find\n// it easily.\nconst boundAttributeSuffix = '$lit$';\n\n// This marker is used in many syntactic positions in HTML, so it must be\n// a valid element name and attribute name. We don't support dynamic names (yet)\n// but this at least ensures that the parse tree is closer to the template\n// intention.\nconst marker = `lit$${String(Math.random()).slice(9)}$`;\n\n// String used to tell if a comment is a marker comment\nconst markerMatch = '?' + marker;\n\n// Text used to insert a comment marker node. We use processing instruction\n// syntax because it's slightly smaller, but parses as a comment node.\nconst nodeMarker = `<${markerMatch}>`;\n\nconst d = document;\n\n// Creates a dynamic marker. We never have to search for these in the DOM.\nconst createMarker = (v = '') => d.createComment(v);\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\ntype Primitive = null | undefined | boolean | number | string | symbol | bigint;\nconst isPrimitive = (value: unknown): value is Primitive =>\n  value === null || (typeof value != 'object' && typeof value != 'function');\nconst isArray = Array.isArray;\nconst isIterable = (value: unknown): value is Iterable<unknown> =>\n  isArray(value) ||\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  typeof (value as any)?.[Symbol.iterator] === 'function';\n\nconst SPACE_CHAR = `[ \\t\\n\\f\\r]`;\nconst ATTR_VALUE_CHAR = `[^ \\t\\n\\f\\r\"'\\`<>=]`;\nconst NAME_CHAR = `[^\\\\s\"'>=/]`;\n\n// These regexes represent the five parsing states that we care about in the\n// Template's HTML scanner. They match the *end* of the state they're named\n// after.\n// Depending on the match, we transition to a new state. If there's no match,\n// we stay in the same state.\n// Note that the regexes are stateful. We utilize lastIndex and sync it\n// across the multiple regexes used. In addition to the five regexes below\n// we also dynamically create a regex to find the matching end tags for raw\n// text elements.\n\n/**\n * End of text is: `<` followed by:\n *   (comment start) or (tag) or (dynamic tag binding)\n */\nconst textEndRegex = /<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g;\nconst COMMENT_START = 1;\nconst TAG_NAME = 2;\nconst DYNAMIC_TAG_NAME = 3;\n\nconst commentEndRegex = /-->/g;\n/**\n * Comments not started with <!--, like </{, can be ended by a single `>`\n */\nconst comment2EndRegex = />/g;\n\n/**\n * The tagEnd regex matches the end of the \"inside an opening\" tag syntax\n * position. It either matches a `>`, an attribute-like sequence, or the end\n * of the string after a space (attribute-name position ending).\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\t\\n\\f\\r\" are HTML space characters:\n * https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * So an attribute is:\n *  * The name: any character except a whitespace character, (\"), ('), \">\",\n *    \"=\", or \"/\". Note: this is different from the HTML spec which also excludes control characters.\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nconst tagEndRegex = new RegExp(\n  `>|${SPACE_CHAR}(?:(${NAME_CHAR}+)(${SPACE_CHAR}*=${SPACE_CHAR}*(?:${ATTR_VALUE_CHAR}|(\"|')|))|$)`,\n  'g'\n);\nconst ENTIRE_MATCH = 0;\nconst ATTRIBUTE_NAME = 1;\nconst SPACES_AND_EQUALS = 2;\nconst QUOTE_CHAR = 3;\n\nconst singleQuoteAttrEndRegex = /'/g;\nconst doubleQuoteAttrEndRegex = /\"/g;\n/**\n * Matches the raw text elements.\n *\n * Comments are not parsed within raw text elements, so we need to search their\n * text content for marker strings.\n */\nconst rawTextElement = /^(?:script|style|textarea|title)$/i;\n\n/** TemplateResult types */\nconst HTML_RESULT = 1;\nconst SVG_RESULT = 2;\n\ntype ResultType = typeof HTML_RESULT | typeof SVG_RESULT;\n\n// TemplatePart types\n// IMPORTANT: these must match the values in PartType\nconst ATTRIBUTE_PART = 1;\nconst CHILD_PART = 2;\nconst PROPERTY_PART = 3;\nconst BOOLEAN_ATTRIBUTE_PART = 4;\nconst EVENT_PART = 5;\nconst ELEMENT_PART = 6;\nconst COMMENT_PART = 7;\n\n/**\n * The return type of the template tag functions, {@linkcode html} and\n * {@linkcode svg}.\n *\n * A `TemplateResult` object holds all the information about a template\n * expression required to render it: the template strings, expression values,\n * and type of template (html or svg).\n *\n * `TemplateResult` objects do not create any DOM on their own. To create or\n * update DOM you need to render the `TemplateResult`. See\n * [Rendering](https://lit.dev/docs/components/rendering) for more information.\n *\n */\nexport type TemplateResult<T extends ResultType = ResultType> = {\n  // This property needs to remain unminified.\n  ['_$litType$']: T;\n  strings: TemplateStringsArray;\n  values: unknown[];\n};\n\nexport type HTMLTemplateResult = TemplateResult<typeof HTML_RESULT>;\n\nexport type SVGTemplateResult = TemplateResult<typeof SVG_RESULT>;\n\nexport interface CompiledTemplateResult {\n  // This is a factory in order to make template initialization lazy\n  // and allow ShadyRenderOptions scope to be passed in.\n  // This property needs to remain unminified.\n  ['_$litType$']: CompiledTemplate;\n  values: unknown[];\n}\n\nexport interface CompiledTemplate extends Omit<Template, 'el'> {\n  // el is overridden to be optional. We initialize it on first render\n  el?: HTMLTemplateElement;\n\n  // The prepared HTML string to create a template element from.\n  h: TrustedHTML;\n}\n\n/**\n * Generates a template literal tag function that returns a TemplateResult with\n * the given result type.\n */\nconst tag =\n  <T extends ResultType>(type: T) =>\n  (strings: TemplateStringsArray, ...values: unknown[]): TemplateResult<T> => {\n    // Warn against templates octal escape sequences\n    // We do this here rather than in render so that the warning is closer to the\n    // template definition.\n    if (DEV_MODE && strings.some((s) => s === undefined)) {\n      console.warn(\n        'Some template strings are undefined.\\n' +\n          'This is probably caused by illegal octal escape sequences.'\n      );\n    }\n    return {\n      // This property needs to remain unminified.\n      ['_$litType$']: type,\n      strings,\n      values,\n    };\n  };\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const header = (title: string) => html`<h1>${title}</h1>`;\n * ```\n *\n * The `html` tag returns a description of the DOM to render as a value. It is\n * lazy, meaning no work is done until the template is rendered. When rendering,\n * if a template comes from the same expression as a previously rendered result,\n * it's efficiently updated instead of replaced.\n */\nexport const html = tag(HTML_RESULT);\n\n/**\n * Interprets a template literal as an SVG fragment that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const rect = svg`<rect width=\"10\" height=\"10\"></rect>`;\n *\n * const myImage = html`\n *   <svg viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n *     ${rect}\n *   </svg>`;\n * ```\n *\n * The `svg` *tag function* should only be used for SVG fragments, or elements\n * that would be contained **inside** an `<svg>` HTML element. A common error is\n * placing an `<svg>` *element* in a template tagged with the `svg` tag\n * function. The `<svg>` element is an HTML element and should be used within a\n * template tagged with the {@linkcode html} tag function.\n *\n * In LitElement usage, it's invalid to return an SVG fragment from the\n * `render()` method, as the SVG fragment will be contained within the element's\n * shadow root and thus cannot be used within an `<svg>` HTML element.\n */\nexport const svg = tag(SVG_RESULT);\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = Symbol.for('lit-noChange');\n\n/**\n * A sentinel value that signals a ChildPart to fully clear its content.\n *\n * ```ts\n * const button = html`${\n *  user.isAdmin\n *    ? html`<button>DELETE</button>`\n *    : nothing\n * }`;\n * ```\n *\n * Prefer using `nothing` over other falsy values as it provides a consistent\n * behavior between various expression binding contexts.\n *\n * In child expressions, `undefined`, `null`, `''`, and `nothing` all behave the\n * same and render no nodes. In attribute expressions, `nothing` _removes_ the\n * attribute, while `undefined` and `null` will render an empty string. In\n * property expressions `nothing` becomes `undefined`.\n */\nexport const nothing = Symbol.for('lit-nothing');\n\n/**\n * The cache of prepared templates, keyed by the tagged TemplateStringsArray\n * and _not_ accounting for the specific template tag used. This means that\n * template tags cannot be dynamic - the must statically be one of html, svg,\n * or attr. This restriction simplifies the cache lookup, which is on the hot\n * path for rendering.\n */\nconst templateCache = new WeakMap<TemplateStringsArray, Template>();\n\n/**\n * Object specifying options for controlling lit-html rendering. Note that\n * while `render` may be called multiple times on the same `container` (and\n * `renderBefore` reference node) to efficiently update the rendered content,\n * only the options passed in during the first render are respected during\n * the lifetime of renders to that unique `container` + `renderBefore`\n * combination.\n */\nexport interface RenderOptions {\n  /**\n   * An object to use as the `this` value for event listeners. It's often\n   * useful to set this to the host component rendering a template.\n   */\n  host?: object;\n  /**\n   * A DOM node before which to render content in the container.\n   */\n  renderBefore?: ChildNode | null;\n  /**\n   * Node used for cloning the template (`importNode` will be called on this\n   * node). This controls the `ownerDocument` of the rendered DOM, along with\n   * any inherited context. Defaults to the global `document`.\n   */\n  creationScope?: {importNode(node: Node, deep?: boolean): Node};\n  /**\n   * The initial connected state for the top-level part being rendered. If no\n   * `isConnected` option is set, `AsyncDirective`s will be connected by\n   * default. Set to `false` if the initial render occurs in a disconnected tree\n   * and `AsyncDirective`s should see `isConnected === false` for their initial\n   * render. The `part.setConnected()` method must be used subsequent to initial\n   * render to change the connected state of the part.\n   */\n  isConnected?: boolean;\n}\n\n/**\n * Renders a value, usually a lit-html TemplateResult, to the container.\n *\n * This example renders the text \"Hello, Zoe!\" inside a paragraph tag, appending\n * it to the container `document.body`.\n *\n * ```js\n * import {html, render} from 'lit';\n *\n * const name = \"Zoe\";\n * render(html`<p>Hello, ${name}!</p>`, document.body);\n * ```\n *\n * @param value Any [renderable\n *   value](https://lit.dev/docs/templates/expressions/#child-expressions),\n *   typically a {@linkcode TemplateResult} created by evaluating a template tag\n *   like {@linkcode html} or {@linkcode svg}.\n * @param container A DOM container to render to. The first render will append\n *   the rendered value to the container, and subsequent renders will\n *   efficiently update the rendered value if the same result type was\n *   previously rendered there.\n * @param options See {@linkcode RenderOptions} for options documentation.\n * @see\n * {@link https://lit.dev/docs/libraries/standalone-templates/#rendering-lit-html-templates| Rendering Lit HTML Templates}\n */\nexport const render = (\n  value: unknown,\n  container: HTMLElement | DocumentFragment,\n  options?: RenderOptions\n): RootPart => {\n  if (DEV_MODE && container == null) {\n    // Give a clearer error message than\n    //     Uncaught TypeError: Cannot read properties of null (reading\n    //     '_$litPart$')\n    // which reads like an internal Lit error.\n    throw new TypeError(`The container to render into may not be ${container}`);\n  }\n  const renderId = DEV_MODE ? debugLogRenderId++ : 0;\n  const partOwnerNode = options?.renderBefore ?? container;\n  // This property needs to remain unminified.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let part: ChildPart = (partOwnerNode as any)['_$litPart$'];\n  debugLogEvent?.({\n    kind: 'begin render',\n    id: renderId,\n    value,\n    container,\n    options,\n    part,\n  });\n  if (part === undefined) {\n    const endNode = options?.renderBefore ?? null;\n    // This property needs to remain unminified.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (partOwnerNode as any)['_$litPart$'] = part = new ChildPart(\n      container.insertBefore(createMarker(), endNode),\n      endNode,\n      undefined,\n      options ?? {}\n    );\n  }\n  part._$setValue(value);\n  debugLogEvent?.({\n    kind: 'end render',\n    id: renderId,\n    value,\n    container,\n    options,\n    part,\n  });\n  return part as RootPart;\n};\n\nif (ENABLE_EXTRA_SECURITY_HOOKS) {\n  render.setSanitizer = setSanitizer;\n  render.createSanitizer = createSanitizer;\n  if (DEV_MODE) {\n    render._testOnlyClearSanitizerFactoryDoNotCallOrElse =\n      _testOnlyClearSanitizerFactoryDoNotCallOrElse;\n  }\n}\n\nconst walker = d.createTreeWalker(\n  d,\n  129 /* NodeFilter.SHOW_{ELEMENT|COMMENT} */,\n  null,\n  false\n);\n\nlet sanitizerFactoryInternal: SanitizerFactory = noopSanitizer;\n\n//\n// Classes only below here, const variable declarations only above here...\n//\n// Keeping variable declarations and classes together improves minification.\n// Interfaces and type aliases can be interleaved freely.\n//\n\n// Type for classes that have a `_directive` or `_directives[]` field, used by\n// `resolveDirective`\nexport interface DirectiveParent {\n  _$parent?: DirectiveParent;\n  _$isConnected: boolean;\n  __directive?: Directive;\n  __directives?: Array<Directive | undefined>;\n}\n\n/**\n * Returns an HTML string for the given TemplateStringsArray and result type\n * (HTML or SVG), along with the case-sensitive bound attribute names in\n * template order. The HTML contains comment comment markers denoting the\n * `ChildPart`s and suffixes on bound attributes denoting the `AttributeParts`.\n *\n * @param strings template strings array\n * @param type HTML or SVG\n * @return Array containing `[html, attrNames]` (array returned for terseness,\n *     to avoid object fields since this code is shared with non-minified SSR\n *     code)\n */\nconst getTemplateHtml = (\n  strings: TemplateStringsArray,\n  type: ResultType\n): [TrustedHTML, Array<string | undefined>] => {\n  // Insert makers into the template HTML to represent the position of\n  // bindings. The following code scans the template strings to determine the\n  // syntactic position of the bindings. They can be in text position, where\n  // we insert an HTML comment, attribute value position, where we insert a\n  // sentinel string and re-write the attribute name, or inside a tag where\n  // we insert the sentinel string.\n  const l = strings.length - 1;\n  // Stores the case-sensitive bound attribute names in the order of their\n  // parts. ElementParts are also reflected in this array as undefined\n  // rather than a string, to disambiguate from attribute bindings.\n  const attrNames: Array<string | undefined> = [];\n  let html = type === SVG_RESULT ? '<svg>' : '';\n\n  // When we're inside a raw text tag (not it's text content), the regex\n  // will still be tagRegex so we can find attributes, but will switch to\n  // this regex when the tag ends.\n  let rawTextEndRegex: RegExp | undefined;\n\n  // The current parsing state, represented as a reference to one of the\n  // regexes\n  let regex = textEndRegex;\n\n  for (let i = 0; i < l; i++) {\n    const s = strings[i];\n    // The index of the end of the last attribute name. When this is\n    // positive at end of a string, it means we're in an attribute value\n    // position and need to rewrite the attribute name.\n    // We also use a special value of -2 to indicate that we encountered\n    // the end of a string in attribute name position.\n    let attrNameEndIndex = -1;\n    let attrName: string | undefined;\n    let lastIndex = 0;\n    let match!: RegExpExecArray | null;\n\n    // The conditions in this loop handle the current parse state, and the\n    // assignments to the `regex` variable are the state transitions.\n    while (lastIndex < s.length) {\n      // Make sure we start searching from where we previously left off\n      regex.lastIndex = lastIndex;\n      match = regex.exec(s);\n      if (match === null) {\n        break;\n      }\n      lastIndex = regex.lastIndex;\n      if (regex === textEndRegex) {\n        if (match[COMMENT_START] === '!--') {\n          regex = commentEndRegex;\n        } else if (match[COMMENT_START] !== undefined) {\n          // We started a weird comment, like </{\n          regex = comment2EndRegex;\n        } else if (match[TAG_NAME] !== undefined) {\n          if (rawTextElement.test(match[TAG_NAME])) {\n            // Record if we encounter a raw-text element. We'll switch to\n            // this regex at the end of the tag.\n            rawTextEndRegex = new RegExp(`</${match[TAG_NAME]}`, 'g');\n          }\n          regex = tagEndRegex;\n        } else if (match[DYNAMIC_TAG_NAME] !== undefined) {\n          if (DEV_MODE) {\n            throw new Error(\n              'Bindings in tag names are not supported. Please use static templates instead. ' +\n                'See https://lit.dev/docs/templates/expressions/#static-expressions'\n            );\n          }\n          regex = tagEndRegex;\n        }\n      } else if (regex === tagEndRegex) {\n        if (match[ENTIRE_MATCH] === '>') {\n          // End of a tag. If we had started a raw-text element, use that\n          // regex\n          regex = rawTextEndRegex ?? textEndRegex;\n          // We may be ending an unquoted attribute value, so make sure we\n          // clear any pending attrNameEndIndex\n          attrNameEndIndex = -1;\n        } else if (match[ATTRIBUTE_NAME] === undefined) {\n          // Attribute name position\n          attrNameEndIndex = -2;\n        } else {\n          attrNameEndIndex = regex.lastIndex - match[SPACES_AND_EQUALS].length;\n          attrName = match[ATTRIBUTE_NAME];\n          regex =\n            match[QUOTE_CHAR] === undefined\n              ? tagEndRegex\n              : match[QUOTE_CHAR] === '\"'\n              ? doubleQuoteAttrEndRegex\n              : singleQuoteAttrEndRegex;\n        }\n      } else if (\n        regex === doubleQuoteAttrEndRegex ||\n        regex === singleQuoteAttrEndRegex\n      ) {\n        regex = tagEndRegex;\n      } else if (regex === commentEndRegex || regex === comment2EndRegex) {\n        regex = textEndRegex;\n      } else {\n        // Not one of the five state regexes, so it must be the dynamically\n        // created raw text regex and we're at the close of that element.\n        regex = tagEndRegex;\n        rawTextEndRegex = undefined;\n      }\n    }\n\n    if (DEV_MODE) {\n      // If we have a attrNameEndIndex, which indicates that we should\n      // rewrite the attribute name, assert that we're in a valid attribute\n      // position - either in a tag, or a quoted attribute value.\n      console.assert(\n        attrNameEndIndex === -1 ||\n          regex === tagEndRegex ||\n          regex === singleQuoteAttrEndRegex ||\n          regex === doubleQuoteAttrEndRegex,\n        'unexpected parse state B'\n      );\n    }\n\n    // We have four cases:\n    //  1. We're in text position, and not in a raw text element\n    //     (regex === textEndRegex): insert a comment marker.\n    //  2. We have a non-negative attrNameEndIndex which means we need to\n    //     rewrite the attribute name to add a bound attribute suffix.\n    //  3. We're at the non-first binding in a multi-binding attribute, use a\n    //     plain marker.\n    //  4. We're somewhere else inside the tag. If we're in attribute name\n    //     position (attrNameEndIndex === -2), add a sequential suffix to\n    //     generate a unique attribute name.\n\n    // Detect a binding next to self-closing tag end and insert a space to\n    // separate the marker from the tag end:\n    const end =\n      regex === tagEndRegex && strings[i + 1].startsWith('/>') ? ' ' : '';\n    html +=\n      regex === textEndRegex\n        ? s + nodeMarker\n        : attrNameEndIndex >= 0\n        ? (attrNames.push(attrName!),\n          s.slice(0, attrNameEndIndex) +\n            boundAttributeSuffix +\n            s.slice(attrNameEndIndex)) +\n          marker +\n          end\n        : s +\n          marker +\n          (attrNameEndIndex === -2 ? (attrNames.push(undefined), i) : end);\n  }\n\n  const htmlResult: string | TrustedHTML =\n    html + (strings[l] || '<?>') + (type === SVG_RESULT ? '</svg>' : '');\n\n  // A security check to prevent spoofing of Lit template results.\n  // In the future, we may be able to replace this with Array.isTemplateObject,\n  // though we might need to make that check inside of the html and svg\n  // functions, because precompiled templates don't come in as\n  // TemplateStringArray objects.\n  if (!Array.isArray(strings) || !strings.hasOwnProperty('raw')) {\n    let message = 'invalid template strings array';\n    if (DEV_MODE) {\n      message = `\n          Internal Error: expected template strings to be an array\n          with a 'raw' field. Faking a template strings array by\n          calling html or svg like an ordinary function is effectively\n          the same as calling unsafeHtml and can lead to major security\n          issues, e.g. opening your code up to XSS attacks.\n\n          If you're using the html or svg tagged template functions normally\n          and and still seeing this error, please file a bug at\n          https://github.com/lit/lit/issues/new?template=bug_report.md\n          and include information about your build tooling, if any.\n        `\n        .trim()\n        .replace(/\\n */g, '\\n');\n    }\n    throw new Error(message);\n  }\n  // Returned as an array for terseness\n  return [\n    policy !== undefined\n      ? policy.createHTML(htmlResult)\n      : (htmlResult as unknown as TrustedHTML),\n    attrNames,\n  ];\n};\n\n/** @internal */\nexport type {Template};\nclass Template {\n  /** @internal */\n  el!: HTMLTemplateElement;\n  /** @internal */\n  parts: Array<TemplatePart> = [];\n\n  constructor(\n    // This property needs to remain unminified.\n    {strings, ['_$litType$']: type}: TemplateResult,\n    options?: RenderOptions\n  ) {\n    let node: Node | null;\n    let nodeIndex = 0;\n    let attrNameIndex = 0;\n    const partCount = strings.length - 1;\n    const parts = this.parts;\n\n    // Create template element\n    const [html, attrNames] = getTemplateHtml(strings, type);\n    this.el = Template.createElement(html, options);\n    walker.currentNode = this.el.content;\n\n    // Reparent SVG nodes into template root\n    if (type === SVG_RESULT) {\n      const content = this.el.content;\n      const svgElement = content.firstChild!;\n      svgElement.remove();\n      content.append(...svgElement.childNodes);\n    }\n\n    // Walk the template to find binding markers and create TemplateParts\n    while ((node = walker.nextNode()) !== null && parts.length < partCount) {\n      if (node.nodeType === 1) {\n        if (DEV_MODE) {\n          const tag = (node as Element).localName;\n          // Warn if `textarea` includes an expression and throw if `template`\n          // does since these are not supported. We do this by checking\n          // innerHTML for anything that looks like a marker. This catches\n          // cases like bindings in textarea there markers turn into text nodes.\n          if (\n            /^(?:textarea|template)$/i!.test(tag) &&\n            (node as Element).innerHTML.includes(marker)\n          ) {\n            const m =\n              `Expressions are not supported inside \\`${tag}\\` ` +\n              `elements. See https://lit.dev/msg/expression-in-${tag} for more ` +\n              `information.`;\n            if (tag === 'template') {\n              throw new Error(m);\n            } else issueWarning('', m);\n          }\n        }\n        // TODO (justinfagnani): for attempted dynamic tag names, we don't\n        // increment the bindingIndex, and it'll be off by 1 in the element\n        // and off by two after it.\n        if ((node as Element).hasAttributes()) {\n          // We defer removing bound attributes because on IE we might not be\n          // iterating attributes in their template order, and would sometimes\n          // remove an attribute that we still need to create a part for.\n          const attrsToRemove = [];\n          for (const name of (node as Element).getAttributeNames()) {\n            // `name` is the name of the attribute we're iterating over, but not\n            // _neccessarily_ the name of the attribute we will create a part\n            // for. They can be different in browsers that don't iterate on\n            // attributes in source order. In that case the attrNames array\n            // contains the attribute name we'll process next. We only need the\n            // attribute name here to know if we should process a bound attribute\n            // on this element.\n            if (\n              name.endsWith(boundAttributeSuffix) ||\n              name.startsWith(marker)\n            ) {\n              const realName = attrNames[attrNameIndex++];\n              attrsToRemove.push(name);\n              if (realName !== undefined) {\n                // Lowercase for case-sensitive SVG attributes like viewBox\n                const value = (node as Element).getAttribute(\n                  realName.toLowerCase() + boundAttributeSuffix\n                )!;\n                const statics = value.split(marker);\n                const m = /([.?@])?(.*)/.exec(realName)!;\n                parts.push({\n                  type: ATTRIBUTE_PART,\n                  index: nodeIndex,\n                  name: m[2],\n                  strings: statics,\n                  ctor:\n                    m[1] === '.'\n                      ? PropertyPart\n                      : m[1] === '?'\n                      ? BooleanAttributePart\n                      : m[1] === '@'\n                      ? EventPart\n                      : AttributePart,\n                });\n              } else {\n                parts.push({\n                  type: ELEMENT_PART,\n                  index: nodeIndex,\n                });\n              }\n            }\n          }\n          for (const name of attrsToRemove) {\n            (node as Element).removeAttribute(name);\n          }\n        }\n        // TODO (justinfagnani): benchmark the regex against testing for each\n        // of the 3 raw text element names.\n        if (rawTextElement.test((node as Element).tagName)) {\n          // For raw text elements we need to split the text content on\n          // markers, create a Text node for each segment, and create\n          // a TemplatePart for each marker.\n          const strings = (node as Element).textContent!.split(marker);\n          const lastIndex = strings.length - 1;\n          if (lastIndex > 0) {\n            (node as Element).textContent = trustedTypes\n              ? (trustedTypes.emptyScript as unknown as '')\n              : '';\n            // Generate a new text node for each literal section\n            // These nodes are also used as the markers for node parts\n            // We can't use empty text nodes as markers because they're\n            // normalized when cloning in IE (could simplify when\n            // IE is no longer supported)\n            for (let i = 0; i < lastIndex; i++) {\n              (node as Element).append(strings[i], createMarker());\n              // Walk past the marker node we just added\n              walker.nextNode();\n              parts.push({type: CHILD_PART, index: ++nodeIndex});\n            }\n            // Note because this marker is added after the walker's current\n            // node, it will be walked to in the outer loop (and ignored), so\n            // we don't need to adjust nodeIndex here\n            (node as Element).append(strings[lastIndex], createMarker());\n          }\n        }\n      } else if (node.nodeType === 8) {\n        const data = (node as Comment).data;\n        if (data === markerMatch) {\n          parts.push({type: CHILD_PART, index: nodeIndex});\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            parts.push({type: COMMENT_PART, index: nodeIndex});\n            // Move to the end of the match\n            i += marker.length - 1;\n          }\n        }\n      }\n      nodeIndex++;\n    }\n    debugLogEvent?.({\n      kind: 'template prep',\n      template: this,\n      clonableTemplate: this.el,\n      parts: this.parts,\n      strings,\n    });\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @nocollapse */\n  static createElement(html: TrustedHTML, _options?: RenderOptions) {\n    const el = d.createElement('template');\n    el.innerHTML = html as unknown as string;\n    return el;\n  }\n}\n\nexport interface Disconnectable {\n  _$parent?: Disconnectable;\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // Rather than hold connection state on instances, Disconnectables recursively\n  // fetch the connection state from the RootPart they are connected in via\n  // getters up the Disconnectable tree via _$parent references. This pushes the\n  // cost of tracking the isConnected state to `AsyncDirectives`, and avoids\n  // needing to pass all Disconnectables (parts, template instances, and\n  // directives) their connection state each time it changes, which would be\n  // costly for trees that have no AsyncDirectives.\n  _$isConnected: boolean;\n}\n\nfunction resolveDirective(\n  part: ChildPart | AttributePart | ElementPart,\n  value: unknown,\n  parent: DirectiveParent = part,\n  attributeIndex?: number\n): unknown {\n  // Bail early if the value is explicitly noChange. Note, this means any\n  // nested directive is still attached and is not run.\n  if (value === noChange) {\n    return value;\n  }\n  let currentDirective =\n    attributeIndex !== undefined\n      ? (parent as AttributePart).__directives?.[attributeIndex]\n      : (parent as ChildPart | ElementPart | Directive).__directive;\n  const nextDirectiveConstructor = isPrimitive(value)\n    ? undefined\n    : // This property needs to remain unminified.\n      (value as DirectiveResult)['_$litDirective$'];\n  if (currentDirective?.constructor !== nextDirectiveConstructor) {\n    // This property needs to remain unminified.\n    currentDirective?.['_$notifyDirectiveConnectionChanged']?.(false);\n    if (nextDirectiveConstructor === undefined) {\n      currentDirective = undefined;\n    } else {\n      currentDirective = new nextDirectiveConstructor(part as PartInfo);\n      currentDirective._$initialize(part, parent, attributeIndex);\n    }\n    if (attributeIndex !== undefined) {\n      ((parent as AttributePart).__directives ??= [])[attributeIndex] =\n        currentDirective;\n    } else {\n      (parent as ChildPart | Directive).__directive = currentDirective;\n    }\n  }\n  if (currentDirective !== undefined) {\n    value = resolveDirective(\n      part,\n      currentDirective._$resolve(part, (value as DirectiveResult).values),\n      currentDirective,\n      attributeIndex\n    );\n  }\n  return value;\n}\n\n/**\n * An updateable instance of a Template. Holds references to the Parts used to\n * update the template instance.\n */\nclass TemplateInstance implements Disconnectable {\n  /** @internal */\n  _$template: Template;\n  /** @internal */\n  _parts: Array<Part | undefined> = [];\n\n  /** @internal */\n  _$parent: ChildPart;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  constructor(template: Template, parent: ChildPart) {\n    this._$template = template;\n    this._$parent = parent;\n  }\n\n  // Called by ChildPart parentNode getter\n  get parentNode() {\n    return this._$parent.parentNode;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  // This method is separate from the constructor because we need to return a\n  // DocumentFragment and we don't want to hold onto it with an instance field.\n  _clone(options: RenderOptions | undefined) {\n    const {\n      el: {content},\n      parts: parts,\n    } = this._$template;\n    const fragment = (options?.creationScope ?? d).importNode(content, true);\n    walker.currentNode = fragment;\n\n    let node = walker.nextNode()!;\n    let nodeIndex = 0;\n    let partIndex = 0;\n    let templatePart = parts[0];\n\n    while (templatePart !== undefined) {\n      if (nodeIndex === templatePart.index) {\n        let part: Part | undefined;\n        if (templatePart.type === CHILD_PART) {\n          part = new ChildPart(\n            node as HTMLElement,\n            node.nextSibling,\n            this,\n            options\n          );\n        } else if (templatePart.type === ATTRIBUTE_PART) {\n          part = new templatePart.ctor(\n            node as HTMLElement,\n            templatePart.name,\n            templatePart.strings,\n            this,\n            options\n          );\n        } else if (templatePart.type === ELEMENT_PART) {\n          part = new ElementPart(node as HTMLElement, this, options);\n        }\n        this._parts.push(part);\n        templatePart = parts[++partIndex];\n      }\n      if (nodeIndex !== templatePart?.index) {\n        node = walker.nextNode()!;\n        nodeIndex++;\n      }\n    }\n    return fragment;\n  }\n\n  _update(values: Array<unknown>) {\n    let i = 0;\n    for (const part of this._parts) {\n      if (part !== undefined) {\n        debugLogEvent?.({\n          kind: 'set part',\n          part,\n          value: values[i],\n          valueIndex: i,\n          values,\n          templateInstance: this,\n        });\n        if ((part as AttributePart).strings !== undefined) {\n          (part as AttributePart)._$setValue(values, part as AttributePart, i);\n          // The number of values the part consumes is part.strings.length - 1\n          // since values are in between template spans. We increment i by 1\n          // later in the loop, so increment it by part.strings.length - 2 here\n          i += (part as AttributePart).strings!.length - 2;\n        } else {\n          part._$setValue(values[i]);\n        }\n      }\n      i++;\n    }\n  }\n}\n\n/*\n * Parts\n */\ntype AttributeTemplatePart = {\n  readonly type: typeof ATTRIBUTE_PART;\n  readonly index: number;\n  readonly name: string;\n  /** @internal */\n  readonly ctor: typeof AttributePart;\n  /** @internal */\n  readonly strings: ReadonlyArray<string>;\n};\ntype NodeTemplatePart = {\n  readonly type: typeof CHILD_PART;\n  readonly index: number;\n};\ntype ElementTemplatePart = {\n  readonly type: typeof ELEMENT_PART;\n  readonly index: number;\n};\ntype CommentTemplatePart = {\n  readonly type: typeof COMMENT_PART;\n  readonly index: number;\n};\n\n/**\n * A TemplatePart represents a dynamic part in a template, before the template\n * is instantiated. When a template is instantiated Parts are created from\n * TemplateParts.\n */\ntype TemplatePart =\n  | NodeTemplatePart\n  | AttributeTemplatePart\n  | ElementTemplatePart\n  | CommentTemplatePart;\n\nexport type Part =\n  | ChildPart\n  | AttributePart\n  | PropertyPart\n  | BooleanAttributePart\n  | ElementPart\n  | EventPart;\n\nexport type {ChildPart};\nclass ChildPart implements Disconnectable {\n  readonly type = CHILD_PART;\n  readonly options: RenderOptions | undefined;\n  _$committedValue: unknown = nothing;\n  /** @internal */\n  __directive?: Directive;\n  /** @internal */\n  _$startNode: ChildNode;\n  /** @internal */\n  _$endNode: ChildNode | null;\n  private _textSanitizer: ValueSanitizer | undefined;\n  /** @internal */\n  _$parent: Disconnectable | undefined;\n  /**\n   * Connection state for RootParts only (i.e. ChildPart without _$parent\n   * returned from top-level `render`). This field is unsed otherwise. The\n   * intention would clearer if we made `RootPart` a subclass of `ChildPart`\n   * with this field (and a different _$isConnected getter), but the subclass\n   * caused a perf regression, possibly due to making call sites polymorphic.\n   * @internal\n   */\n  __isConnected: boolean;\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    // ChildParts that are not at the root should always be created with a\n    // parent; only RootChildNode's won't, so they return the local isConnected\n    // state\n    return this._$parent?._$isConnected ?? this.__isConnected;\n  }\n\n  // The following fields will be patched onto ChildParts when required by\n  // AsyncDirective\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /** @internal */\n  _$notifyConnectionChanged?(\n    isConnected: boolean,\n    removeFromParent?: boolean,\n    from?: number\n  ): void;\n  /** @internal */\n  _$reparentDisconnectables?(parent: Disconnectable): void;\n\n  constructor(\n    startNode: ChildNode,\n    endNode: ChildNode | null,\n    parent: TemplateInstance | ChildPart | undefined,\n    options: RenderOptions | undefined\n  ) {\n    this._$startNode = startNode;\n    this._$endNode = endNode;\n    this._$parent = parent;\n    this.options = options;\n    // Note __isConnected is only ever accessed on RootParts (i.e. when there is\n    // no _$parent); the value on a non-root-part is \"don't care\", but checking\n    // for parent would be more code\n    this.__isConnected = options?.isConnected ?? true;\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      // Explicitly initialize for consistent class shape.\n      this._textSanitizer = undefined;\n    }\n  }\n\n  /**\n   * The parent node into which the part renders its content.\n   *\n   * A ChildPart's content consists of a range of adjacent child nodes of\n   * `.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n   * `.endNode`).\n   *\n   * - If both `.startNode` and `.endNode` are non-null, then the part's content\n   * consists of all siblings between `.startNode` and `.endNode`, exclusively.\n   *\n   * - If `.startNode` is non-null but `.endNode` is null, then the part's\n   * content consists of all siblings following `.startNode`, up to and\n   * including the last child of `.parentNode`. If `.endNode` is non-null, then\n   * `.startNode` will always be non-null.\n   *\n   * - If both `.endNode` and `.startNode` are null, then the part's content\n   * consists of all child nodes of `.parentNode`.\n   */\n  get parentNode(): Node {\n    let parentNode: Node = wrap(this._$startNode).parentNode!;\n    const parent = this._$parent;\n    if (\n      parent !== undefined &&\n      parentNode.nodeType === 11 /* Node.DOCUMENT_FRAGMENT */\n    ) {\n      // If the parentNode is a DocumentFragment, it may be because the DOM is\n      // still in the cloned fragment during initial render; if so, get the real\n      // parentNode the part will be committed into by asking the parent.\n      parentNode = (parent as ChildPart | TemplateInstance).parentNode;\n    }\n    return parentNode;\n  }\n\n  /**\n   * The part's leading marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get startNode(): Node | null {\n    return this._$startNode;\n  }\n\n  /**\n   * The part's trailing marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get endNode(): Node | null {\n    return this._$endNode;\n  }\n\n  _$setValue(value: unknown, directiveParent: DirectiveParent = this): void {\n    if (DEV_MODE && this.parentNode === null) {\n      throw new Error(\n        `This \\`ChildPart\\` has no \\`parentNode\\` and therefore cannot accept a value. This likely means the element containing the part was manipulated in an unsupported way outside of Lit's control such that the part's marker nodes were ejected from DOM. For example, setting the element's \\`innerHTML\\` or \\`textContent\\` can do this.`\n      );\n    }\n    value = resolveDirective(this, value, directiveParent);\n    if (isPrimitive(value)) {\n      // Non-rendering child values. It's important that these do not render\n      // empty text nodes to avoid issues with preventing default <slot>\n      // fallback content.\n      if (value === nothing || value == null || value === '') {\n        if (this._$committedValue !== nothing) {\n          debugLogEvent?.({\n            kind: 'commit nothing to child',\n            start: this._$startNode,\n            end: this._$endNode,\n            parent: this._$parent,\n            options: this.options,\n          });\n          this._$clear();\n        }\n        this._$committedValue = nothing;\n      } else if (value !== this._$committedValue && value !== noChange) {\n        this._commitText(value);\n      }\n      // This property needs to remain unminified.\n    } else if ((value as TemplateResult)['_$litType$'] !== undefined) {\n      this._commitTemplateResult(value as TemplateResult);\n    } else if ((value as Node).nodeType !== undefined) {\n      this._commitNode(value as Node);\n    } else if (isIterable(value)) {\n      this._commitIterable(value);\n    } else {\n      // Fallback, will render the string representation\n      this._commitText(value);\n    }\n  }\n\n  private _insert<T extends Node>(node: T, ref = this._$endNode) {\n    return wrap(wrap(this._$startNode).parentNode!).insertBefore(node, ref);\n  }\n\n  private _commitNode(value: Node): void {\n    if (this._$committedValue !== value) {\n      this._$clear();\n      if (\n        ENABLE_EXTRA_SECURITY_HOOKS &&\n        sanitizerFactoryInternal !== noopSanitizer\n      ) {\n        const parentNodeName = this._$startNode.parentNode?.nodeName;\n        if (parentNodeName === 'STYLE' || parentNodeName === 'SCRIPT') {\n          let message = 'Forbidden';\n          if (DEV_MODE) {\n            if (parentNodeName === 'STYLE') {\n              message =\n                `Lit does not support binding inside style nodes. ` +\n                `This is a security risk, as style injection attacks can ` +\n                `exfiltrate data and spoof UIs. ` +\n                `Consider instead using css\\`...\\` literals ` +\n                `to compose styles, and make do dynamic styling with ` +\n                `css custom properties, ::parts, <slot>s, ` +\n                `and by mutating the DOM rather than stylesheets.`;\n            } else {\n              message =\n                `Lit does not support binding inside script nodes. ` +\n                `This is a security risk, as it could allow arbitrary ` +\n                `code execution.`;\n            }\n          }\n          throw new Error(message);\n        }\n      }\n      debugLogEvent?.({\n        kind: 'commit node',\n        start: this._$startNode,\n        parent: this._$parent,\n        value: value,\n        options: this.options,\n      });\n      this._$committedValue = this._insert(value);\n    }\n  }\n\n  private _commitText(value: unknown): void {\n    // If the committed value is a primitive it means we called _commitText on\n    // the previous render, and we know that this._$startNode.nextSibling is a\n    // Text node. We can now just replace the text content (.data) of the node.\n    if (\n      this._$committedValue !== nothing &&\n      isPrimitive(this._$committedValue)\n    ) {\n      const node = wrap(this._$startNode).nextSibling as Text;\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(node, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n      }\n      debugLogEvent?.({\n        kind: 'commit text',\n        node,\n        value,\n        options: this.options,\n      });\n      (node as Text).data = value as string;\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        const textNode = document.createTextNode('');\n        this._commitNode(textNode);\n        // When setting text content, for security purposes it matters a lot\n        // what the parent is. For example, <style> and <script> need to be\n        // handled with care, while <span> does not. So first we need to put a\n        // text node into the document, then we can sanitize its content.\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(textNode, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n        debugLogEvent?.({\n          kind: 'commit text',\n          node: textNode,\n          value,\n          options: this.options,\n        });\n        textNode.data = value as string;\n      } else {\n        this._commitNode(d.createTextNode(value as string));\n        debugLogEvent?.({\n          kind: 'commit text',\n          node: wrap(this._$startNode).nextSibling as Text,\n          value,\n          options: this.options,\n        });\n      }\n    }\n    this._$committedValue = value;\n  }\n\n  private _commitTemplateResult(\n    result: TemplateResult | CompiledTemplateResult\n  ): void {\n    // This property needs to remain unminified.\n    const {values, ['_$litType$']: type} = result;\n    // If $litType$ is a number, result is a plain TemplateResult and we get\n    // the template from the template cache. If not, result is a\n    // CompiledTemplateResult and _$litType$ is a CompiledTemplate and we need\n    // to create the <template> element the first time we see it.\n    const template: Template | CompiledTemplate =\n      typeof type === 'number'\n        ? this._$getTemplate(result as TemplateResult)\n        : (type.el === undefined &&\n            (type.el = Template.createElement(type.h, this.options)),\n          type);\n\n    if ((this._$committedValue as TemplateInstance)?._$template === template) {\n      debugLogEvent?.({\n        kind: 'template updating',\n        template,\n        instance: this._$committedValue as TemplateInstance,\n        parts: (this._$committedValue as TemplateInstance)._parts,\n        options: this.options,\n        values,\n      });\n      (this._$committedValue as TemplateInstance)._update(values);\n    } else {\n      const instance = new TemplateInstance(template as Template, this);\n      const fragment = instance._clone(this.options);\n      debugLogEvent?.({\n        kind: 'template instantiated',\n        template,\n        instance,\n        parts: instance._parts,\n        options: this.options,\n        fragment,\n        values,\n      });\n      instance._update(values);\n      debugLogEvent?.({\n        kind: 'template instantiated and updated',\n        template,\n        instance,\n        parts: instance._parts,\n        options: this.options,\n        fragment,\n        values,\n      });\n      this._commitNode(fragment);\n      this._$committedValue = instance;\n    }\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @internal */\n  _$getTemplate(result: TemplateResult) {\n    let template = templateCache.get(result.strings);\n    if (template === undefined) {\n      templateCache.set(result.strings, (template = new Template(result)));\n    }\n    return template;\n  }\n\n  private _commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If value is an array, then the previous render was of an\n    // iterable and value will contain the ChildParts from the previous\n    // render. If value is not an array, clear this part and make a new\n    // array for ChildParts.\n    if (!isArray(this._$committedValue)) {\n      this._$committedValue = [];\n      this._$clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this._$committedValue as ChildPart[];\n    let partIndex = 0;\n    let itemPart: ChildPart | undefined;\n\n    for (const item of value) {\n      if (partIndex === itemParts.length) {\n        // If no existing part, create a new one\n        // TODO (justinfagnani): test perf impact of always creating two parts\n        // instead of sharing parts between nodes\n        // https://github.com/lit/lit/issues/1266\n        itemParts.push(\n          (itemPart = new ChildPart(\n            this._insert(createMarker()),\n            this._insert(createMarker()),\n            this,\n            this.options\n          ))\n        );\n      } else {\n        // Reuse an existing part\n        itemPart = itemParts[partIndex];\n      }\n      itemPart._$setValue(item);\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // itemParts always have end nodes\n      this._$clear(\n        itemPart && wrap(itemPart._$endNode!).nextSibling,\n        partIndex\n      );\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n    }\n  }\n\n  /**\n   * Removes the nodes contained within this Part from the DOM.\n   *\n   * @param start Start node to clear from, for clearing a subset of the part's\n   *     DOM (used when truncating iterables)\n   * @param from  When `start` is specified, the index within the iterable from\n   *     which ChildParts are being removed, used for disconnecting directives in\n   *     those Parts.\n   *\n   * @internal\n   */\n  _$clear(\n    start: ChildNode | null = wrap(this._$startNode).nextSibling,\n    from?: number\n  ) {\n    this._$notifyConnectionChanged?.(false, true, from);\n    while (start && start !== this._$endNode) {\n      const n = wrap(start!).nextSibling;\n      (wrap(start!) as Element).remove();\n      start = n;\n    }\n  }\n  /**\n   * Implementation of RootPart's `isConnected`. Note that this metod\n   * should only be called on `RootPart`s (the `ChildPart` returned from a\n   * top-level `render()` call). It has no effect on non-root ChildParts.\n   * @param isConnected Whether to set\n   * @internal\n   */\n  setConnected(isConnected: boolean) {\n    if (this._$parent === undefined) {\n      this.__isConnected = isConnected;\n      this._$notifyConnectionChanged?.(isConnected);\n    } else if (DEV_MODE) {\n      throw new Error(\n        'part.setConnected() may only be called on a ' +\n          'RootPart returned from render().'\n      );\n    }\n  }\n}\n\n/**\n * A top-level `ChildPart` returned from `render` that manages the connected\n * state of `AsyncDirective`s created throughout the tree below it.\n */\nexport interface RootPart extends ChildPart {\n  /**\n   * Sets the connection state for `AsyncDirective`s contained within this root\n   * ChildPart.\n   *\n   * lit-html does not automatically monitor the connectedness of DOM rendered;\n   * as such, it is the responsibility of the caller to `render` to ensure that\n   * `part.setConnected(false)` is called before the part object is potentially\n   * discarded, to ensure that `AsyncDirective`s have a chance to dispose of\n   * any resources being held. If a `RootPart` that was prevously\n   * disconnected is subsequently re-connected (and its `AsyncDirective`s should\n   * re-connect), `setConnected(true)` should be called.\n   *\n   * @param isConnected Whether directives within this tree should be connected\n   * or not\n   */\n  setConnected(isConnected: boolean): void;\n}\n\nexport type {AttributePart};\nclass AttributePart implements Disconnectable {\n  readonly type = ATTRIBUTE_PART as\n    | typeof ATTRIBUTE_PART\n    | typeof PROPERTY_PART\n    | typeof BOOLEAN_ATTRIBUTE_PART\n    | typeof EVENT_PART;\n  readonly element: HTMLElement;\n  readonly name: string;\n  readonly options: RenderOptions | undefined;\n\n  /**\n   * If this attribute part represents an interpolation, this contains the\n   * static strings of the interpolation. For single-value, complete bindings,\n   * this is undefined.\n   */\n  readonly strings?: ReadonlyArray<string>;\n  /** @internal */\n  _$committedValue: unknown | Array<unknown> = nothing;\n  /** @internal */\n  __directives?: Array<Directive | undefined>;\n  /** @internal */\n  _$parent: Disconnectable;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  protected _sanitizer: ValueSanitizer | undefined;\n\n  get tagName() {\n    return this.element.tagName;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this.element = element;\n    this.name = name;\n    this._$parent = parent;\n    this.options = options;\n    if (strings.length > 2 || strings[0] !== '' || strings[1] !== '') {\n      this._$committedValue = new Array(strings.length - 1).fill(new String());\n      this.strings = strings;\n    } else {\n      this._$committedValue = nothing;\n    }\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      this._sanitizer = undefined;\n    }\n  }\n\n  /**\n   * Sets the value of this part by resolving the value from possibly multiple\n   * values and static strings and committing it to the DOM.\n   * If this part is single-valued, `this._strings` will be undefined, and the\n   * method will be called with a single value argument. If this part is\n   * multi-value, `this._strings` will be defined, and the method is called\n   * with the value array of the part's owning TemplateInstance, and an offset\n   * into the value array from which the values should be read.\n   * This method is overloaded this way to eliminate short-lived array slices\n   * of the template instance values, and allow a fast-path for single-valued\n   * parts.\n   *\n   * @param value The part value, or an array of values for multi-valued parts\n   * @param valueIndex the index to start reading values from. `undefined` for\n   *   single-valued parts\n   * @param noCommit causes the part to not commit its value to the DOM. Used\n   *   in hydration to prime attribute parts with their first-rendered value,\n   *   but not set the attribute, and in SSR to no-op the DOM operation and\n   *   capture the value for serialization.\n   *\n   * @internal\n   */\n  _$setValue(\n    value: unknown | Array<unknown>,\n    directiveParent: DirectiveParent = this,\n    valueIndex?: number,\n    noCommit?: boolean\n  ) {\n    const strings = this.strings;\n\n    // Whether any of the values has changed, for dirty-checking\n    let change = false;\n\n    if (strings === undefined) {\n      // Single-value binding case\n      value = resolveDirective(this, value, directiveParent, 0);\n      change =\n        !isPrimitive(value) ||\n        (value !== this._$committedValue && value !== noChange);\n      if (change) {\n        this._$committedValue = value;\n      }\n    } else {\n      // Interpolation case\n      const values = value as Array<unknown>;\n      value = strings[0];\n\n      let i, v;\n      for (i = 0; i < strings.length - 1; i++) {\n        v = resolveDirective(this, values[valueIndex! + i], directiveParent, i);\n\n        if (v === noChange) {\n          // If the user-provided value is `noChange`, use the previous value\n          v = (this._$committedValue as Array<unknown>)[i];\n        }\n        change ||=\n          !isPrimitive(v) || v !== (this._$committedValue as Array<unknown>)[i];\n        if (v === nothing) {\n          value = nothing;\n        } else if (value !== nothing) {\n          value += (v ?? '') + strings[i + 1];\n        }\n        // We always record each value, even if one is `nothing`, for future\n        // change detection.\n        (this._$committedValue as Array<unknown>)[i] = v;\n      }\n    }\n    if (change && !noCommit) {\n      this._commitValue(value);\n    }\n  }\n\n  /** @internal */\n  _commitValue(value: unknown) {\n    if (value === nothing) {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._sanitizer === undefined) {\n          this._sanitizer = sanitizerFactoryInternal(\n            this.element,\n            this.name,\n            'attribute'\n          );\n        }\n        value = this._sanitizer(value ?? '');\n      }\n      debugLogEvent?.({\n        kind: 'commit attribute',\n        element: this.element,\n        name: this.name,\n        value,\n        options: this.options,\n      });\n      (wrap(this.element) as Element).setAttribute(\n        this.name,\n        (value ?? '') as string\n      );\n    }\n  }\n}\n\nexport type {PropertyPart};\nclass PropertyPart extends AttributePart {\n  override readonly type = PROPERTY_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      if (this._sanitizer === undefined) {\n        this._sanitizer = sanitizerFactoryInternal(\n          this.element,\n          this.name,\n          'property'\n        );\n      }\n      value = this._sanitizer(value);\n    }\n    debugLogEvent?.({\n      kind: 'commit property',\n      element: this.element,\n      name: this.name,\n      value,\n      options: this.options,\n    });\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (this.element as any)[this.name] = value === nothing ? undefined : value;\n  }\n}\n\n// Temporary workaround for https://crbug.com/993268\n// Currently, any attribute starting with \"on\" is considered to be a\n// TrustedScript source. Such boolean attributes must be set to the equivalent\n// trusted emptyScript value.\nconst emptyStringForBooleanAttribute = trustedTypes\n  ? (trustedTypes.emptyScript as unknown as '')\n  : '';\n\nexport type {BooleanAttributePart};\nclass BooleanAttributePart extends AttributePart {\n  override readonly type = BOOLEAN_ATTRIBUTE_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    debugLogEvent?.({\n      kind: 'commit boolean attribute',\n      element: this.element,\n      name: this.name,\n      value: !!(value && value !== nothing),\n      options: this.options,\n    });\n    if (value && value !== nothing) {\n      (wrap(this.element) as Element).setAttribute(\n        this.name,\n        emptyStringForBooleanAttribute\n      );\n    } else {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    }\n  }\n}\n\ntype EventListenerWithOptions = EventListenerOrEventListenerObject &\n  Partial<AddEventListenerOptions>;\n\n/**\n * An AttributePart that manages an event listener via add/removeEventListener.\n *\n * This part works by adding itself as the event listener on an element, then\n * delegating to the value passed to it. This reduces the number of calls to\n * add/removeEventListener if the listener changes frequently, such as when an\n * inline function is used as a listener.\n *\n * Because event options are passed when adding listeners, we must take case\n * to add and remove the part as a listener when the event options change.\n */\nexport type {EventPart};\nclass EventPart extends AttributePart {\n  override readonly type = EVENT_PART;\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    super(element, name, strings, parent, options);\n\n    if (DEV_MODE && this.strings !== undefined) {\n      throw new Error(\n        `A \\`<${element.localName}>\\` has a \\`@${name}=...\\` listener with ` +\n          'invalid content. Event listeners in templates must have exactly ' +\n          'one expression and no surrounding text.'\n      );\n    }\n  }\n\n  // EventPart does not use the base _$setValue/_resolveValue implementation\n  // since the dirty checking is more complex\n  /** @internal */\n  override _$setValue(\n    newListener: unknown,\n    directiveParent: DirectiveParent = this\n  ) {\n    newListener =\n      resolveDirective(this, newListener, directiveParent, 0) ?? nothing;\n    if (newListener === noChange) {\n      return;\n    }\n    const oldListener = this._$committedValue;\n\n    // If the new value is nothing or any options change we have to remove the\n    // part as a listener.\n    const shouldRemoveListener =\n      (newListener === nothing && oldListener !== nothing) ||\n      (newListener as EventListenerWithOptions).capture !==\n        (oldListener as EventListenerWithOptions).capture ||\n      (newListener as EventListenerWithOptions).once !==\n        (oldListener as EventListenerWithOptions).once ||\n      (newListener as EventListenerWithOptions).passive !==\n        (oldListener as EventListenerWithOptions).passive;\n\n    // If the new value is not nothing and we removed the listener, we have\n    // to add the part as a listener.\n    const shouldAddListener =\n      newListener !== nothing &&\n      (oldListener === nothing || shouldRemoveListener);\n\n    debugLogEvent?.({\n      kind: 'commit event listener',\n      element: this.element,\n      name: this.name,\n      value: newListener,\n      options: this.options,\n      removeListener: shouldRemoveListener,\n      addListener: shouldAddListener,\n      oldListener,\n    });\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n        this.name,\n        this,\n        oldListener as EventListenerWithOptions\n      );\n    }\n    if (shouldAddListener) {\n      // Beware: IE11 and Chrome 41 don't like using the listener as the\n      // options object. Figure out how to deal w/ this in IE11 - maybe\n      // patch addEventListener?\n      this.element.addEventListener(\n        this.name,\n        this,\n        newListener as EventListenerWithOptions\n      );\n    }\n    this._$committedValue = newListener;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this._$committedValue === 'function') {\n      this._$committedValue.call(this.options?.host ?? this.element, event);\n    } else {\n      (this._$committedValue as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\nexport type {ElementPart};\nclass ElementPart implements Disconnectable {\n  readonly type = ELEMENT_PART;\n\n  /** @internal */\n  __directive?: Directive;\n\n  // This is to ensure that every Part has a _$committedValue\n  _$committedValue: undefined;\n\n  /** @internal */\n  _$parent!: Disconnectable;\n\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  options: RenderOptions | undefined;\n\n  constructor(\n    public element: Element,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this._$parent = parent;\n    this.options = options;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  _$setValue(value: unknown): void {\n    debugLogEvent?.({\n      kind: 'commit to element binding',\n      element: this.element,\n      value,\n      options: this.options,\n    });\n    resolveDirective(this, value);\n  }\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LH object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-element, which re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LH = {\n  // Used in lit-ssr\n  _boundAttributeSuffix: boundAttributeSuffix,\n  _marker: marker,\n  _markerMatch: markerMatch,\n  _HTML_RESULT: HTML_RESULT,\n  _getTemplateHtml: getTemplateHtml,\n  // Used in hydrate\n  _TemplateInstance: TemplateInstance,\n  _isIterable: isIterable,\n  _resolveDirective: resolveDirective,\n  // Used in tests and private-ssr-support\n  _ChildPart: ChildPart,\n  _AttributePart: AttributePart,\n  _BooleanAttributePart: BooleanAttributePart,\n  _EventPart: EventPart,\n  _PropertyPart: PropertyPart,\n  _ElementPart: ElementPart,\n};\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? window.litHtmlPolyfillSupportDevMode\n  : window.litHtmlPolyfillSupport;\npolyfillSupport?.(Template, ChildPart);\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n(globalThis.litHtmlVersions ??= []).push('2.2.7');\nif (DEV_MODE && globalThis.litHtmlVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. ` +\n      `Loading multiple versions is not recommended.`\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * The main LitElement module, which defines the {@linkcode LitElement} base\n * class and related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import {@linkcode LitElement} and {@linkcode html} from this module to\n * create a component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends {@linkcode ReactiveElement} and adds lit-html\n * templating. The `ReactiveElement` class is provided for users that want to\n * build their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport {PropertyValues, ReactiveElement} from '@lit/reactive-element';\nimport {render, RenderOptions, noChange, RootPart} from 'lit-html';\nexport * from '@lit/reactive-element';\nexport * from 'lit-html';\n\nimport {LitUnstable} from 'lit-html';\nimport {ReactiveUnstable} from '@lit/reactive-element';\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Unstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | LitUnstable.DebugLog.Entry\n      | ReactiveUnstable.DebugLog.Entry;\n  }\n}\n\n// For backwards compatibility export ReactiveElement as UpdatingElement. Note,\n// IE transpilation requires exporting like this.\nexport const UpdatingElement = ReactiveElement;\n\nconst DEV_MODE = true;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> =\n    (globalThis.litIssuedWarnings ??= new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n}\n\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the {@linkcode LitElement.properties properties} property or the\n * {@linkcode property} decorator.\n */\nexport class LitElement extends ReactiveElement {\n  /**\n   * Ensure this class is marked as `finalized` as an optimization ensuring\n   * it will not needlessly try to `finalize`.\n   *\n   * Note this property name is a string to prevent breaking Closure JS Compiler\n   * optimizations. See @lit/reactive-element for more information.\n   */\n  protected static override ['finalized'] = true;\n\n  // This property needs to remain unminified.\n  static ['_$litElement$'] = true;\n\n  /**\n   * @category rendering\n   */\n  readonly renderOptions: RenderOptions = {host: this};\n\n  private __childPart: RootPart | undefined = undefined;\n\n  /**\n   * @category rendering\n   */\n  protected override createRenderRoot() {\n    const renderRoot = super.createRenderRoot();\n    // When adoptedStyleSheets are shimmed, they are inserted into the\n    // shadowRoot by createRenderRoot. Adjust the renderBefore node so that\n    // any styles in Lit content render before adoptedStyleSheets. This is\n    // important so that adoptedStyleSheets have precedence over styles in\n    // the shadowRoot.\n    this.renderOptions.renderBefore ??= renderRoot!.firstChild as ChildNode;\n    return renderRoot;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * @param changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected override update(changedProperties: PropertyValues) {\n    // Setting properties in `render` should not trigger an update. Since\n    // updates are allowed after super.update, it's important to call `render`\n    // before that.\n    const value = this.render();\n    if (!this.hasUpdated) {\n      this.renderOptions.isConnected = this.isConnected;\n    }\n    super.update(changedProperties);\n    this.__childPart = render(value, this.renderRoot, this.renderOptions);\n  }\n\n  /**\n   * Invoked when the component is added to the document's DOM.\n   *\n   * In `connectedCallback()` you should setup tasks that should only occur when\n   * the element is connected to the document. The most common of these is\n   * adding event listeners to nodes external to the element, like a keydown\n   * event handler added to the window.\n   *\n   * ```ts\n   * connectedCallback() {\n   *   super.connectedCallback();\n   *   addEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * Typically, anything done in `connectedCallback()` should be undone when the\n   * element is disconnected, in `disconnectedCallback()`.\n   *\n   * @category lifecycle\n   */\n  override connectedCallback() {\n    super.connectedCallback();\n    this.__childPart?.setConnected(true);\n  }\n\n  /**\n   * Invoked when the component is removed from the document's DOM.\n   *\n   * This callback is the main signal to the element that it may no longer be\n   * used. `disconnectedCallback()` should ensure that nothing is holding a\n   * reference to the element (such as event listeners added to nodes external\n   * to the element), so that it is free to be garbage collected.\n   *\n   * ```ts\n   * disconnectedCallback() {\n   *   super.disconnectedCallback();\n   *   window.removeEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * An element may be re-connected after being disconnected.\n   *\n   * @category lifecycle\n   */\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__childPart?.setConnected(false);\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method may return\n   * any value renderable by lit-html's `ChildPart` - typically a\n   * `TemplateResult`. Setting properties inside this method will *not* trigger\n   * the element to update.\n   * @category rendering\n   */\n  protected render(): unknown {\n    return noChange;\n  }\n}\n\n// Install hydration if available\nglobalThis.litElementHydrateSupport?.({LitElement});\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? globalThis.litElementPolyfillSupportDevMode\n  : globalThis.litElementPolyfillSupport;\npolyfillSupport?.({LitElement});\n\n// DEV mode warnings\nif (DEV_MODE) {\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  // Note, for compatibility with closure compilation, this access\n  // needs to be as a string property index.\n  (LitElement as any)['finalize'] = function (this: typeof LitElement) {\n    const finalized = (ReactiveElement as any).finalize.call(this);\n    if (!finalized) {\n      return false;\n    }\n    const warnRemovedOrRenamed = (obj: any, name: string, renamed = false) => {\n      if (obj.hasOwnProperty(name)) {\n        const ctorName = (typeof obj === 'function' ? obj : obj.constructor)\n          .name;\n        issueWarning(\n          renamed ? 'renamed-api' : 'removed-api',\n          `\\`${name}\\` is implemented on class ${ctorName}. It ` +\n            `has been ${renamed ? 'renamed' : 'removed'} ` +\n            `in this version of LitElement.`\n        );\n      }\n    };\n    warnRemovedOrRenamed(this, 'render');\n    warnRemovedOrRenamed(this, 'getStyles', true);\n    warnRemovedOrRenamed((this as typeof LitElement).prototype, 'adoptStyles');\n    return true;\n  };\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LE object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-html, since this module re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LE = {\n  _$attributeToProperty: (\n    el: LitElement,\n    name: string,\n    value: string | null\n  ) => {\n    // eslint-disable-next-line\n    (el as any)._$attributeToProperty(name, value);\n  },\n  // eslint-disable-next-line\n  _$changedProperties: (el: LitElement) => (el as any)._$changedProperties,\n};\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n(globalThis.litElementVersions ??= []).push('3.2.2');\nif (DEV_MODE && globalThis.litElementVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. Loading multiple versions ` +\n      `is not recommended.`\n  );\n}\n","const methods = {}\r\nconst names = []\r\n\r\nexport function registerMethods (name, m) {\r\n  if (Array.isArray(name)) {\r\n    for (const _name of name) {\r\n      registerMethods(_name, m)\r\n    }\r\n    return\r\n  }\r\n\r\n  if (typeof name === 'object') {\r\n    for (const _name in name) {\r\n      registerMethods(_name, name[_name])\r\n    }\r\n    return\r\n  }\r\n\r\n  addMethodNames(Object.getOwnPropertyNames(m))\r\n  methods[name] = Object.assign(methods[name] || {}, m)\r\n}\r\n\r\nexport function getMethodsFor (name) {\r\n  return methods[name] || {}\r\n}\r\n\r\nexport function getMethodNames () {\r\n  return [ ...new Set(names) ]\r\n}\r\n\r\nexport function addMethodNames (_names) {\r\n  names.push(..._names)\r\n}\r\n","// Map function\r\nexport function map (array, block) {\r\n  let i\r\n  const il = array.length\r\n  const result = []\r\n\r\n  for (i = 0; i < il; i++) {\r\n    result.push(block(array[i]))\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n// Filter function\r\nexport function filter (array, block) {\r\n  let i\r\n  const il = array.length\r\n  const result = []\r\n\r\n  for (i = 0; i < il; i++) {\r\n    if (block(array[i])) {\r\n      result.push(array[i])\r\n    }\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n// Degrees to radians\r\nexport function radians (d) {\r\n  return d % 360 * Math.PI / 180\r\n}\r\n\r\n// Radians to degrees\r\nexport function degrees (r) {\r\n  return r * 180 / Math.PI % 360\r\n}\r\n\r\n// Convert dash-separated-string to camelCase\r\nexport function camelCase (s) {\r\n  return s.toLowerCase().replace(/-(.)/g, function (m, g) {\r\n    return g.toUpperCase()\r\n  })\r\n}\r\n\r\n// Convert camel cased string to dash separated\r\nexport function unCamelCase (s) {\r\n  return s.replace(/([A-Z])/g, function (m, g) {\r\n    return '-' + g.toLowerCase()\r\n  })\r\n}\r\n\r\n// Capitalize first letter of a string\r\nexport function capitalize (s) {\r\n  return s.charAt(0).toUpperCase() + s.slice(1)\r\n}\r\n\r\n// Calculate proportional width and height values when necessary\r\nexport function proportionalSize (element, width, height, box) {\r\n  if (width == null || height == null) {\r\n    box = box || element.bbox()\r\n\r\n    if (width == null) {\r\n      width = box.width / box.height * height\r\n    } else if (height == null) {\r\n      height = box.height / box.width * width\r\n    }\r\n  }\r\n\r\n  return {\r\n    width: width,\r\n    height: height\r\n  }\r\n}\r\n\r\n/**\r\n * This function adds support for string origins.\r\n * It searches for an origin in o.origin o.ox and o.originX.\r\n * This way, origin: {x: 'center', y: 50} can be passed as well as ox: 'center', oy: 50\r\n**/\r\nexport function getOrigin (o, element) {\r\n  const origin = o.origin\r\n  // First check if origin is in ox or originX\r\n  let ox = o.ox != null\n    ? o.ox\r\n    : o.originX != null\n      ? o.originX\r\n      : 'center'\r\n  let oy = o.oy != null\n    ? o.oy\r\n    : o.originY != null\n      ? o.originY\r\n      : 'center'\r\n\r\n  // Then check if origin was used and overwrite in that case\r\n  if (origin != null) {\r\n    [ ox, oy ] = Array.isArray(origin)\n      ? origin\r\n      : typeof origin === 'object'\n        ? [ origin.x, origin.y ]\r\n        : [ origin, origin ]\r\n  }\r\n\r\n  // Make sure to only call bbox when actually needed\r\n  const condX = typeof ox === 'string'\r\n  const condY = typeof oy === 'string'\r\n  if (condX || condY) {\r\n    const { height, width, x, y } = element.bbox()\r\n\r\n    // And only overwrite if string was passed for this specific axis\r\n    if (condX) {\r\n      ox = ox.includes('left')\n        ? x\r\n        : ox.includes('right')\n          ? x + width\r\n          : x + width / 2\r\n    }\r\n\r\n    if (condY) {\r\n      oy = oy.includes('top')\n        ? y\r\n        : oy.includes('bottom')\n          ? y + height\r\n          : y + height / 2\r\n    }\r\n  }\r\n\r\n  // Return the origin as it is if it wasn't a string\r\n  return [ ox, oy ]\r\n}\r\n","export const globals = {\r\n  window: typeof window === 'undefined' ? null : window,\r\n  document: typeof document === 'undefined' ? null : document\r\n}\r\n\r\nexport function registerWindow (win = null, doc = null) {\r\n  globals.window = win\r\n  globals.document = doc\r\n}\r\n\r\nconst save = {}\r\n\r\nexport function saveWindow () {\r\n  save.window = globals.window\r\n  save.document = globals.document\r\n}\r\n\r\nexport function restoreWindow () {\r\n  globals.window = save.window\r\n  globals.document = save.document\r\n}\r\n\r\nexport function withWindow (win, fn) {\r\n  saveWindow()\r\n  registerWindow(win, win.document)\r\n  fn(win, win.document)\r\n  restoreWindow()\r\n}\r\n\r\nexport function getWindow () {\r\n  return globals.window\r\n}\r\n","import { addMethodNames } from './methods.js'\nimport { capitalize } from './utils.js'\nimport { svg } from '../modules/core/namespaces.js'\nimport { globals } from '../utils/window.js'\nimport Base from '../types/Base.js'\n\nconst elements = {}\nexport const root = '___SYMBOL___ROOT___'\n\n// Method for element creation\nexport function create (name, ns = svg) {\n  // create element\n  return globals.document.createElementNS(ns, name)\n}\n\nexport function makeInstance (element, isHTML = false) {\n  if (element instanceof Base) return element\n\n  if (typeof element === 'object') {\n    return adopter(element)\n  }\n\n  if (element == null) {\n    return new elements[root]()\n  }\n\n  if (typeof element === 'string' && element.charAt(0) !== '<') {\n    return adopter(globals.document.querySelector(element))\n  }\n\n  // Make sure, that HTML elements are created with the correct namespace\n  const wrapper = isHTML ? globals.document.createElement('div') : create('svg')\n  wrapper.innerHTML = element\n\n  // We can use firstChild here because we know,\n  // that the first char is < and thus an element\n  element = adopter(wrapper.firstChild)\n\n  // make sure, that element doesnt have its wrapper attached\n  wrapper.removeChild(wrapper.firstChild)\n  return element\n}\n\nexport function nodeOrNew (name, node) {\n  return (node && node.ownerDocument && node instanceof node.ownerDocument.defaultView.Node) ? node : create(name)\n}\n\n// Adopt existing svg elements\nexport function adopt (node) {\n  // check for presence of node\n  if (!node) return null\n\n  // make sure a node isn't already adopted\n  if (node.instance instanceof Base) return node.instance\n\n  if (node.nodeName === '#document-fragment') {\n    return new elements.Fragment(node)\n  }\n\n  // initialize variables\n  let className = capitalize(node.nodeName || 'Dom')\n\n  // Make sure that gradients are adopted correctly\n  if (className === 'LinearGradient' || className === 'RadialGradient') {\n    className = 'Gradient'\n\n  // Fallback to Dom if element is not known\n  } else if (!elements[className]) {\n    className = 'Dom'\n  }\n\n  return new elements[className](node)\n}\n\nlet adopter = adopt\n\nexport function mockAdopt (mock = adopt) {\n  adopter = mock\n}\n\nexport function register (element, name = element.name, asRoot = false) {\n  elements[name] = element\n  if (asRoot) elements[root] = element\n\n  addMethodNames(Object.getOwnPropertyNames(element.prototype))\n\n  return element\n}\n\nexport function getClass (name) {\n  return elements[name]\n}\n\n// Element id sequence\nlet did = 1000\n\n// Get next named element id\nexport function eid (name) {\n  return 'Svgjs' + capitalize(name) + (did++)\n}\n\n// Deep new id assignment\nexport function assignNewId (node) {\n  // do the same for SVG child nodes as well\n  for (let i = node.children.length - 1; i >= 0; i--) {\n    assignNewId(node.children[i])\n  }\n\n  if (node.id) {\n    node.id = eid(node.nodeName)\n    return node\n  }\n\n  return node\n}\n\n// Method for extending objects\nexport function extend (modules, methods) {\n  let key, i\n\n  modules = Array.isArray(modules) ? modules : [ modules ]\n\n  for (i = modules.length - 1; i >= 0; i--) {\n    for (key in methods) {\n      modules[i].prototype[key] = methods[key]\n    }\n  }\n}\n\nexport function wrapWithAttrCheck (fn) {\n  return function (...args) {\n    const o = args[args.length - 1]\n\n    if (o && o.constructor === Object && !(o instanceof Array)) {\n      return fn.apply(this, args.slice(0, -1)).attr(o)\n    } else {\n      return fn.apply(this, args)\n    }\n  }\n}\n","// Default namespaces\nexport const svg = 'http://www.w3.org/2000/svg'\nexport const html = 'http://www.w3.org/1999/xhtml'\nexport const xmlns = 'http://www.w3.org/2000/xmlns/'\nexport const xlink = 'http://www.w3.org/1999/xlink'\nexport const svgjs = 'http://svgjs.dev/svgjs'\n","import { makeInstance } from '../../utils/adopter.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\n\r\n// Get all siblings, including myself\r\nexport function siblings () {\r\n  return this.parent().children()\r\n}\r\n\r\n// Get the current position siblings\r\nexport function position () {\r\n  return this.parent().index(this)\r\n}\r\n\r\n// Get the next element (will return null if there is none)\r\nexport function next () {\r\n  return this.siblings()[this.position() + 1]\r\n}\r\n\r\n// Get the next element (will return null if there is none)\r\nexport function prev () {\r\n  return this.siblings()[this.position() - 1]\r\n}\r\n\r\n// Send given element one step forward\r\nexport function forward () {\r\n  const i = this.position()\r\n  const p = this.parent()\r\n\r\n  // move node one step forward\r\n  p.add(this.remove(), i + 1)\r\n\r\n  return this\r\n}\r\n\r\n// Send given element one step backward\r\nexport function backward () {\r\n  const i = this.position()\r\n  const p = this.parent()\r\n\r\n  p.add(this.remove(), i ? i - 1 : 0)\r\n\r\n  return this\r\n}\r\n\r\n// Send given element all the way to the front\r\nexport function front () {\r\n  const p = this.parent()\r\n\r\n  // Move node forward\r\n  p.add(this.remove())\r\n\r\n  return this\r\n}\r\n\r\n// Send given element all the way to the back\r\nexport function back () {\r\n  const p = this.parent()\r\n\r\n  // Move node back\r\n  p.add(this.remove(), 0)\r\n\r\n  return this\r\n}\r\n\r\n// Inserts a given element before the targeted element\r\nexport function before (element) {\r\n  element = makeInstance(element)\r\n  element.remove()\r\n\r\n  const i = this.position()\r\n\r\n  this.parent().add(element, i)\r\n\r\n  return this\r\n}\r\n\r\n// Inserts a given element after the targeted element\r\nexport function after (element) {\r\n  element = makeInstance(element)\r\n  element.remove()\r\n\r\n  const i = this.position()\r\n\r\n  this.parent().add(element, i + 1)\r\n\r\n  return this\r\n}\r\n\r\nexport function insertBefore (element) {\r\n  element = makeInstance(element)\r\n  element.before(this)\r\n  return this\r\n}\r\n\r\nexport function insertAfter (element) {\r\n  element = makeInstance(element)\r\n  element.after(this)\r\n  return this\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  siblings,\r\n  position,\r\n  next,\r\n  prev,\r\n  forward,\r\n  backward,\r\n  front,\r\n  back,\r\n  before,\r\n  after,\r\n  insertBefore,\r\n  insertAfter\r\n})\r\n","// Parse unit value\r\nexport const numberAndUnit = /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i\r\n\r\n// Parse hex value\r\nexport const hex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\r\n\r\n// Parse rgb value\r\nexport const rgb = /rgb\\((\\d+),(\\d+),(\\d+)\\)/\r\n\r\n// Parse reference id\r\nexport const reference = /(#[a-z_][a-z0-9\\-_]*)/i\r\n\r\n// splits a transformation chain\r\nexport const transforms = /\\)\\s*,?\\s*/\r\n\r\n// Whitespace\r\nexport const whitespace = /\\s/g\r\n\r\n// Test hex value\r\nexport const isHex = /^#[a-f0-9]{3}$|^#[a-f0-9]{6}$/i\r\n\r\n// Test rgb value\r\nexport const isRgb = /^rgb\\(/\r\n\r\n// Test for blank string\r\nexport const isBlank = /^(\\s+)?$/\r\n\r\n// Test for numeric string\r\nexport const isNumber = /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i\r\n\r\n// Test for image url\r\nexport const isImage = /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i\r\n\r\n// split at whitespace and comma\r\nexport const delimiter = /[\\s,]+/\r\n\r\n// Test for path letter\r\nexport const isPathLetter = /[MLHVCSQTAZ]/i\r\n","\r\nimport { hex, isHex, isRgb, rgb, whitespace } from '../modules/core/regex.js'\r\n\r\nfunction sixDigitHex (hex) {\r\n  return hex.length === 4\r\n    ? [ '#',\r\n      hex.substring(1, 2), hex.substring(1, 2),\r\n      hex.substring(2, 3), hex.substring(2, 3),\r\n      hex.substring(3, 4), hex.substring(3, 4)\r\n    ].join('')\r\n    : hex\r\n}\r\n\r\nfunction componentHex (component) {\r\n  const integer = Math.round(component)\r\n  const bounded = Math.max(0, Math.min(255, integer))\r\n  const hex = bounded.toString(16)\r\n  return hex.length === 1 ? '0' + hex : hex\r\n}\r\n\r\nfunction is (object, space) {\r\n  for (let i = space.length; i--;) {\r\n    if (object[space[i]] == null) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nfunction getParameters (a, b) {\r\n  const params = is(a, 'rgb')\n    ? { _a: a.r, _b: a.g, _c: a.b, _d: 0, space: 'rgb' }\r\n    : is(a, 'xyz')\n      ? { _a: a.x, _b: a.y, _c: a.z, _d: 0, space: 'xyz' }\r\n      : is(a, 'hsl')\n        ? { _a: a.h, _b: a.s, _c: a.l, _d: 0, space: 'hsl' }\r\n        : is(a, 'lab')\n          ? { _a: a.l, _b: a.a, _c: a.b, _d: 0, space: 'lab' }\r\n          : is(a, 'lch')\n            ? { _a: a.l, _b: a.c, _c: a.h, _d: 0, space: 'lch' }\r\n            : is(a, 'cmyk')\n              ? { _a: a.c, _b: a.m, _c: a.y, _d: a.k, space: 'cmyk' }\r\n              : { _a: 0, _b: 0, _c: 0, space: 'rgb' }\r\n\r\n  params.space = b || params.space\r\n  return params\r\n}\r\n\r\nfunction cieSpace (space) {\r\n  if (space === 'lab' || space === 'xyz' || space === 'lch') {\r\n    return true\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nfunction hueToRgb (p, q, t) {\r\n  if (t < 0) t += 1\r\n  if (t > 1) t -= 1\r\n  if (t < 1 / 6) return p + (q - p) * 6 * t\r\n  if (t < 1 / 2) return q\r\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\r\n  return p\r\n}\r\n\r\nexport default class Color {\r\n  constructor (...inputs) {\r\n    this.init(...inputs)\r\n  }\r\n\r\n  // Test if given value is a color\n  static isColor (color) {\r\n    return color && (\r\n      color instanceof Color\r\n      || this.isRgb(color)\r\n      || this.test(color)\r\n    )\r\n  }\n\n  // Test if given value is an rgb object\n  static isRgb (color) {\r\n    return color && typeof color.r === 'number'\r\n      && typeof color.g === 'number'\r\n      && typeof color.b === 'number'\r\n  }\n\n  /*\r\n  Generating random colors\r\n  */\n  static random (mode = 'vibrant', t, u) {\r\n\r\n    // Get the math modules\r\n    const { random, round, sin, PI: pi } = Math\r\n\r\n    // Run the correct generator\r\n    if (mode === 'vibrant') {\r\n\r\n      const l = (81 - 57) * random() + 57\r\n      const c = (83 - 45) * random() + 45\r\n      const h = 360 * random()\r\n      const color = new Color(l, c, h, 'lch')\r\n      return color\r\n\r\n    } else if (mode === 'sine') {\r\n\r\n      t = t == null ? random() : t\r\n      const r = round(80 * sin(2 * pi * t / 0.5 + 0.01) + 150)\r\n      const g = round(50 * sin(2 * pi * t / 0.5 + 4.6) + 200)\r\n      const b = round(100 * sin(2 * pi * t / 0.5 + 2.3) + 150)\r\n      const color = new Color(r, g, b)\r\n      return color\r\n\r\n    } else if (mode === 'pastel') {\r\n\r\n      const l = (94 - 86) * random() + 86\r\n      const c = (26 - 9) * random() + 9\r\n      const h = 360 * random()\r\n      const color = new Color(l, c, h, 'lch')\r\n      return color\r\n\r\n    } else if (mode === 'dark') {\r\n\r\n      const l = 10 + 10 * random()\r\n      const c = (125 - 75) * random() + 86\r\n      const h = 360 * random()\r\n      const color = new Color(l, c, h, 'lch')\r\n      return color\r\n\r\n    } else if (mode === 'rgb') {\r\n\r\n      const r = 255 * random()\r\n      const g = 255 * random()\r\n      const b = 255 * random()\r\n      const color = new Color(r, g, b)\r\n      return color\r\n\r\n    } else if (mode === 'lab') {\r\n\r\n      const l = 100 * random()\r\n      const a = 256 * random() - 128\r\n      const b = 256 * random() - 128\r\n      const color = new Color(l, a, b, 'lab')\r\n      return color\r\n\r\n    } else if (mode === 'grey') {\r\n\r\n      const grey = 255 * random()\r\n      const color = new Color(grey, grey, grey)\r\n      return color\r\n\r\n    } else {\r\n\r\n      throw new Error('Unsupported random color mode')\r\n\r\n    }\r\n  }\n\n  // Test if given value is a color string\n  static test (color) {\r\n    return (typeof color === 'string')\r\n      && (isHex.test(color) || isRgb.test(color))\r\n  }\n\n  cmyk () {\r\n\r\n    // Get the rgb values for the current color\r\n    const { _a, _b, _c } = this.rgb()\r\n    const [ r, g, b ] = [ _a, _b, _c ].map(v => v / 255)\r\n\r\n    // Get the cmyk values in an unbounded format\r\n    const k = Math.min(1 - r, 1 - g, 1 - b)\r\n\r\n    if (k === 1) {\r\n      // Catch the black case\r\n      return new Color(0, 0, 0, 1, 'cmyk')\r\n    }\r\n\r\n    const c = (1 - r - k) / (1 - k)\r\n    const m = (1 - g - k) / (1 - k)\r\n    const y = (1 - b - k) / (1 - k)\r\n\r\n    // Construct the new color\r\n    const color = new Color(c, m, y, k, 'cmyk')\r\n    return color\r\n  }\n\n  hsl () {\r\n\r\n    // Get the rgb values\r\n    const { _a, _b, _c } = this.rgb()\r\n    const [ r, g, b ] = [ _a, _b, _c ].map(v => v / 255)\r\n\r\n    // Find the maximum and minimum values to get the lightness\r\n    const max = Math.max(r, g, b)\r\n    const min = Math.min(r, g, b)\r\n    const l = (max + min) / 2\r\n\r\n    // If the r, g, v values are identical then we are grey\r\n    const isGrey = max === min\r\n\r\n    // Calculate the hue and saturation\r\n    const delta = max - min\r\n    const s = isGrey\n      ? 0\r\n      : l > 0.5\n        ? delta / (2 - max - min)\r\n        : delta / (max + min)\r\n    const h = isGrey\n      ? 0\r\n      : max === r\n        ? ((g - b) / delta + (g < b ? 6 : 0)) / 6\r\n        : max === g\n          ? ((b - r) / delta + 2) / 6\r\n          : max === b\n            ? ((r - g) / delta + 4) / 6\r\n            : 0\r\n\r\n    // Construct and return the new color\r\n    const color = new Color(360 * h, 100 * s, 100 * l, 'hsl')\r\n    return color\r\n  }\n\n  init (a = 0, b = 0, c = 0, d = 0, space = 'rgb') {\r\n    // This catches the case when a falsy value is passed like ''\r\n    a = !a ? 0 : a\r\n\r\n    // Reset all values in case the init function is rerun with new color space\r\n    if (this.space) {\r\n      for (const component in this.space) {\r\n        delete this[this.space[component]]\r\n      }\r\n    }\r\n\r\n    if (typeof a === 'number') {\r\n      // Allow for the case that we don't need d...\r\n      space = typeof d === 'string' ? d : space\r\n      d = typeof d === 'string' ? 0 : d\r\n\r\n      // Assign the values straight to the color\r\n      Object.assign(this, { _a: a, _b: b, _c: c, _d: d, space })\r\n    // If the user gave us an array, make the color from it\r\n    } else if (a instanceof Array) {\r\n      this.space = b || (typeof a[3] === 'string' ? a[3] : a[4]) || 'rgb'\r\n      Object.assign(this, { _a: a[0], _b: a[1], _c: a[2], _d: a[3] || 0 })\r\n    } else if (a instanceof Object) {\r\n      // Set the object up and assign its values directly\r\n      const values = getParameters(a, b)\r\n      Object.assign(this, values)\r\n    } else if (typeof a === 'string') {\r\n      if (isRgb.test(a)) {\r\n        const noWhitespace = a.replace(whitespace, '')\r\n        const [ _a, _b, _c ] = rgb.exec(noWhitespace)\r\n          .slice(1, 4).map(v => parseInt(v))\r\n        Object.assign(this, { _a, _b, _c, _d: 0, space: 'rgb' })\r\n      } else if (isHex.test(a)) {\r\n        const hexParse = v => parseInt(v, 16)\r\n        const [ , _a, _b, _c ] = hex.exec(sixDigitHex(a)).map(hexParse)\r\n        Object.assign(this, { _a, _b, _c, _d: 0, space: 'rgb' })\r\n      } else throw Error('Unsupported string format, can\\'t construct Color')\r\n    }\r\n\r\n    // Now add the components as a convenience\r\n    const { _a, _b, _c, _d } = this\r\n    const components = this.space === 'rgb'\n      ? { r: _a, g: _b, b: _c }\r\n      : this.space === 'xyz'\n        ? { x: _a, y: _b, z: _c }\r\n        : this.space === 'hsl'\n          ? { h: _a, s: _b, l: _c }\r\n          : this.space === 'lab'\n            ? { l: _a, a: _b, b: _c }\r\n            : this.space === 'lch'\n              ? { l: _a, c: _b, h: _c }\r\n              : this.space === 'cmyk'\n                ? { c: _a, m: _b, y: _c, k: _d }\r\n                : {}\r\n    Object.assign(this, components)\r\n  }\r\n\r\n  lab () {\r\n    // Get the xyz color\r\n    const { x, y, z } = this.xyz()\r\n\r\n    // Get the lab components\r\n    const l = (116 * y) - 16\r\n    const a = 500 * (x - y)\r\n    const b = 200 * (y - z)\r\n\r\n    // Construct and return a new color\r\n    const color = new Color(l, a, b, 'lab')\r\n    return color\r\n  }\n\n  lch () {\r\n\r\n    // Get the lab color directly\r\n    const { l, a, b } = this.lab()\r\n\r\n    // Get the chromaticity and the hue using polar coordinates\r\n    const c = Math.sqrt(a ** 2 + b ** 2)\r\n    let h = 180 * Math.atan2(b, a) / Math.PI\r\n    if (h < 0) {\r\n      h *= -1\r\n      h = 360 - h\r\n    }\r\n\r\n    // Make a new color and return it\r\n    const color = new Color(l, c, h, 'lch')\r\n    return color\r\n  }\n  /*\r\n  Conversion Methods\r\n  */\r\n\r\n  rgb () {\r\n    if (this.space === 'rgb') {\r\n      return this\r\n    } else if (cieSpace(this.space)) {\r\n      // Convert to the xyz color space\r\n      let { x, y, z } = this\r\n      if (this.space === 'lab' || this.space === 'lch') {\r\n        // Get the values in the lab space\r\n        let { l, a, b } = this\r\n        if (this.space === 'lch') {\r\n          const { c, h } = this\r\n          const dToR = Math.PI / 180\r\n          a = c * Math.cos(dToR * h)\r\n          b = c * Math.sin(dToR * h)\r\n        }\r\n\r\n        // Undo the nonlinear function\r\n        const yL = (l + 16) / 116\r\n        const xL = a / 500 + yL\r\n        const zL = yL - b / 200\r\n\r\n        // Get the xyz values\r\n        const ct = 16 / 116\r\n        const mx = 0.008856\r\n        const nm = 7.787\r\n        x = 0.95047 * ((xL ** 3 > mx) ? xL ** 3 : (xL - ct) / nm)\r\n        y = 1.00000 * ((yL ** 3 > mx) ? yL ** 3 : (yL - ct) / nm)\r\n        z = 1.08883 * ((zL ** 3 > mx) ? zL ** 3 : (zL - ct) / nm)\r\n      }\r\n\r\n      // Convert xyz to unbounded rgb values\r\n      const rU = x * 3.2406 + y * -1.5372 + z * -0.4986\r\n      const gU = x * -0.9689 + y * 1.8758 + z * 0.0415\r\n      const bU = x * 0.0557 + y * -0.2040 + z * 1.0570\r\n\r\n      // Convert the values to true rgb values\r\n      const pow = Math.pow\r\n      const bd = 0.0031308\r\n      const r = (rU > bd) ? (1.055 * pow(rU, 1 / 2.4) - 0.055) : 12.92 * rU\r\n      const g = (gU > bd) ? (1.055 * pow(gU, 1 / 2.4) - 0.055) : 12.92 * gU\r\n      const b = (bU > bd) ? (1.055 * pow(bU, 1 / 2.4) - 0.055) : 12.92 * bU\r\n\r\n      // Make and return the color\r\n      const color = new Color(255 * r, 255 * g, 255 * b)\r\n      return color\r\n    } else if (this.space === 'hsl') {\r\n      // https://bgrins.github.io/TinyColor/docs/tinycolor.html\r\n      // Get the current hsl values\r\n      let { h, s, l } = this\r\n      h /= 360\r\n      s /= 100\r\n      l /= 100\r\n\r\n      // If we are grey, then just make the color directly\r\n      if (s === 0) {\r\n        l *= 255\r\n        const color = new Color(l, l, l)\r\n        return color\r\n      }\r\n\r\n      // TODO I have no idea what this does :D If you figure it out, tell me!\r\n      const q = l < 0.5 ? l * (1 + s) : l + s - l * s\r\n      const p = 2 * l - q\r\n\r\n      // Get the rgb values\r\n      const r = 255 * hueToRgb(p, q, h + 1 / 3)\r\n      const g = 255 * hueToRgb(p, q, h)\r\n      const b = 255 * hueToRgb(p, q, h - 1 / 3)\r\n\r\n      // Make a new color\r\n      const color = new Color(r, g, b)\r\n      return color\r\n    } else if (this.space === 'cmyk') {\r\n      // https://gist.github.com/felipesabino/5066336\r\n      // Get the normalised cmyk values\r\n      const { c, m, y, k } = this\r\n\r\n      // Get the rgb values\r\n      const r = 255 * (1 - Math.min(1, c * (1 - k) + k))\r\n      const g = 255 * (1 - Math.min(1, m * (1 - k) + k))\r\n      const b = 255 * (1 - Math.min(1, y * (1 - k) + k))\r\n\r\n      // Form the color and return it\r\n      const color = new Color(r, g, b)\r\n      return color\r\n    } else {\r\n      return this\r\n    }\r\n  }\r\n\n  toArray () {\r\n    const { _a, _b, _c, _d, space } = this\r\n    return [ _a, _b, _c, _d, space ]\r\n  }\n\n  toHex () {\r\n    const [ r, g, b ] = this._clamped().map(componentHex)\r\n    return `#${r}${g}${b}`\r\n  }\n\n  toRgb () {\r\n    const [ rV, gV, bV ] = this._clamped()\r\n    const string = `rgb(${rV},${gV},${bV})`\r\n    return string\r\n  }\n\n  toString () {\r\n    return this.toHex()\r\n  }\n\n  xyz () {\r\n\r\n    // Normalise the red, green and blue values\r\n    const { _a: r255, _b: g255, _c: b255 } = this.rgb()\r\n    const [ r, g, b ] = [ r255, g255, b255 ].map(v => v / 255)\r\n\r\n    // Convert to the lab rgb space\r\n    const rL = (r > 0.04045) ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92\r\n    const gL = (g > 0.04045) ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92\r\n    const bL = (b > 0.04045) ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92\r\n\r\n    // Convert to the xyz color space without bounding the values\r\n    const xU = (rL * 0.4124 + gL * 0.3576 + bL * 0.1805) / 0.95047\r\n    const yU = (rL * 0.2126 + gL * 0.7152 + bL * 0.0722) / 1.00000\r\n    const zU = (rL * 0.0193 + gL * 0.1192 + bL * 0.9505) / 1.08883\r\n\r\n    // Get the proper xyz values by applying the bounding\r\n    const x = (xU > 0.008856) ? Math.pow(xU, 1 / 3) : (7.787 * xU) + 16 / 116\r\n    const y = (yU > 0.008856) ? Math.pow(yU, 1 / 3) : (7.787 * yU) + 16 / 116\r\n    const z = (zU > 0.008856) ? Math.pow(zU, 1 / 3) : (7.787 * zU) + 16 / 116\r\n\r\n    // Make and return the color\r\n    const color = new Color(x, y, z, 'xyz')\r\n    return color\r\n  }\r\n\n  /*\r\n  Input and Output methods\r\n  */\r\n\r\n  _clamped () {\r\n    const { _a, _b, _c } = this.rgb()\r\n    const { max, min, round } = Math\r\n    const format = v => max(0, min(round(v), 255))\r\n    return [ _a, _b, _c ].map(format)\r\n  }\r\n\r\n  /*\r\n  Constructing colors\r\n  */\r\n\r\n}\r\n","import { delimiter } from '../core/regex.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\n\r\n// Return array of classes on the node\r\nexport function classes () {\r\n  const attr = this.attr('class')\r\n  return attr == null ? [] : attr.trim().split(delimiter)\r\n}\r\n\r\n// Return true if class exists on the node, false otherwise\r\nexport function hasClass (name) {\r\n  return this.classes().indexOf(name) !== -1\r\n}\r\n\r\n// Add class to the node\r\nexport function addClass (name) {\r\n  if (!this.hasClass(name)) {\r\n    const array = this.classes()\r\n    array.push(name)\r\n    this.attr('class', array.join(' '))\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Remove class from the node\r\nexport function removeClass (name) {\r\n  if (this.hasClass(name)) {\r\n    this.attr('class', this.classes().filter(function (c) {\r\n      return c !== name\r\n    }).join(' '))\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Toggle the presence of a class on the node\r\nexport function toggleClass (name) {\r\n  return this.hasClass(name) ? this.removeClass(name) : this.addClass(name)\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  classes, hasClass, addClass, removeClass, toggleClass\r\n})\r\n","import { camelCase } from '../../utils/utils.js'\r\nimport { isBlank } from '../core/regex.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\n\r\n// Dynamic style generator\r\nexport function css (style, val) {\r\n  const ret = {}\r\n  if (arguments.length === 0) {\r\n    // get full style as object\r\n    this.node.style.cssText.split(/\\s*;\\s*/)\r\n      .filter(function (el) {\r\n        return !!el.length\r\n      })\r\n      .forEach(function (el) {\r\n        const t = el.split(/\\s*:\\s*/)\r\n        ret[t[0]] = t[1]\r\n      })\r\n    return ret\r\n  }\r\n\r\n  if (arguments.length < 2) {\r\n    // get style properties as array\r\n    if (Array.isArray(style)) {\r\n      for (const name of style) {\r\n        const cased = camelCase(name)\r\n        ret[name] = this.node.style[cased]\r\n      }\r\n      return ret\r\n    }\r\n\r\n    // get style for property\r\n    if (typeof style === 'string') {\r\n      return this.node.style[camelCase(style)]\r\n    }\r\n\r\n    // set styles in object\r\n    if (typeof style === 'object') {\r\n      for (const name in style) {\r\n        // set empty string if null/undefined/'' was given\r\n        this.node.style[camelCase(name)]\r\n          = (style[name] == null || isBlank.test(style[name])) ? '' : style[name]\r\n      }\r\n    }\r\n  }\r\n\r\n  // set style for property\r\n  if (arguments.length === 2) {\r\n    this.node.style[camelCase(style)]\r\n      = (val == null || isBlank.test(val)) ? '' : val\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Show element\r\nexport function show () {\r\n  return this.css('display', '')\r\n}\r\n\r\n// Hide element\r\nexport function hide () {\r\n  return this.css('display', 'none')\r\n}\r\n\r\n// Is element visible?\r\nexport function visible () {\r\n  return this.css('display') !== 'none'\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  css, show, hide, visible\r\n})\r\n","import { registerMethods } from '../../utils/methods.js'\r\nimport { filter, map } from '../../utils/utils.js'\r\n\r\n// Store data values on svg nodes\r\nexport function data (a, v, r) {\r\n  if (a == null) {\r\n    // get an object of attributes\r\n    return this.data(map(filter(this.node.attributes, (el) => el.nodeName.indexOf('data-') === 0), (el) => el.nodeName.slice(5)))\r\n  } else if (a instanceof Array) {\r\n    const data = {}\r\n    for (const key of a) {\r\n      data[key] = this.data(key)\r\n    }\r\n    return data\r\n  } else if (typeof a === 'object') {\r\n    for (v in a) {\r\n      this.data(v, a[v])\r\n    }\r\n  } else if (arguments.length < 2) {\r\n    try {\r\n      return JSON.parse(this.attr('data-' + a))\r\n    } catch (e) {\r\n      return this.attr('data-' + a)\r\n    }\r\n  } else {\r\n    this.attr('data-' + a,\r\n      v === null\n        ? null\r\n        : r === true || typeof v === 'string' || typeof v === 'number'\n          ? v\r\n          : JSON.stringify(v)\r\n    )\r\n  }\r\n\r\n  return this\r\n}\r\n\r\nregisterMethods('Dom', { data })\r\n","import { registerMethods } from '../../utils/methods.js'\r\n\r\n// Remember arbitrary data\r\nexport function remember (k, v) {\r\n  // remember every item in an object individually\r\n  if (typeof arguments[0] === 'object') {\r\n    for (const key in k) {\r\n      this.remember(key, k[key])\r\n    }\r\n  } else if (arguments.length === 1) {\r\n    // retrieve memory\r\n    return this.memory()[k]\r\n  } else {\r\n    // store memory\r\n    this.memory()[k] = v\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Erase a given memory\r\nexport function forget () {\r\n  if (arguments.length === 0) {\r\n    this._memory = {}\r\n  } else {\r\n    for (let i = arguments.length - 1; i >= 0; i--) {\r\n      delete this.memory()[arguments[i]]\r\n    }\r\n  }\r\n  return this\r\n}\r\n\r\n// This triggers creation of a new hidden class which is not performant\r\n// However, this function is not rarely used so it will not happen frequently\r\n// Return local memory object\r\nexport function memory () {\r\n  return (this._memory = this._memory || {})\r\n}\r\n\r\nregisterMethods('Dom', { remember, forget, memory })\r\n","import Matrix from './Matrix.js'\r\n\r\nexport default class Point {\r\n  // Initialize\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  // Clone point\n  clone () {\r\n    return new Point(this)\r\n  }\n\n  init (x, y) {\r\n    const base = { x: 0, y: 0 }\r\n\r\n    // ensure source as object\r\n    const source = Array.isArray(x)\n      ? { x: x[0], y: x[1] }\r\n      : typeof x === 'object'\n        ? { x: x.x, y: x.y }\r\n        : { x: x, y: y }\r\n\r\n    // merge source\r\n    this.x = source.x == null ? base.x : source.x\r\n    this.y = source.y == null ? base.y : source.y\r\n\r\n    return this\r\n  }\r\n\r\n  toArray () {\r\n    return [ this.x, this.y ]\r\n  }\n\n  transform (m) {\r\n    return this.clone().transformO(m)\r\n  }\r\n\r\n  // Transform point with matrix\r\n  transformO (m) {\r\n    if (!Matrix.isMatrixLike(m)) {\r\n      m = new Matrix(m)\r\n    }\r\n\r\n    const { x, y } = this\r\n\r\n    // Perform the matrix multiplication\r\n    this.x = m.a * x + m.c * y + m.e\r\n    this.y = m.b * x + m.d * y + m.f\r\n\r\n    return this\r\n  }\r\n\r\n}\r\n\r\nexport function point (x, y) {\r\n  return new Point(x, y).transform(this.screenCTM().inverse())\r\n}\r\n","import { delimiter } from '../modules/core/regex.js'\r\nimport { radians } from '../utils/utils.js'\r\nimport { register } from '../utils/adopter.js'\r\nimport Element from '../elements/Element.js'\r\nimport Point from './Point.js'\r\n\r\nfunction closeEnough (a, b, threshold) {\r\n  return Math.abs(b - a) < (threshold || 1e-6)\r\n}\r\n\r\nexport default class Matrix {\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  static formatTransforms (o) {\r\n    // Get all of the parameters required to form the matrix\r\n    const flipBoth = o.flip === 'both' || o.flip === true\r\n    const flipX = o.flip && (flipBoth || o.flip === 'x') ? -1 : 1\r\n    const flipY = o.flip && (flipBoth || o.flip === 'y') ? -1 : 1\r\n    const skewX = o.skew && o.skew.length\n      ? o.skew[0]\r\n      : isFinite(o.skew)\n        ? o.skew\r\n        : isFinite(o.skewX)\n          ? o.skewX\r\n          : 0\r\n    const skewY = o.skew && o.skew.length\n      ? o.skew[1]\r\n      : isFinite(o.skew)\n        ? o.skew\r\n        : isFinite(o.skewY)\n          ? o.skewY\r\n          : 0\r\n    const scaleX = o.scale && o.scale.length\n      ? o.scale[0] * flipX\r\n      : isFinite(o.scale)\n        ? o.scale * flipX\r\n        : isFinite(o.scaleX)\n          ? o.scaleX * flipX\r\n          : flipX\r\n    const scaleY = o.scale && o.scale.length\n      ? o.scale[1] * flipY\r\n      : isFinite(o.scale)\n        ? o.scale * flipY\r\n        : isFinite(o.scaleY)\n          ? o.scaleY * flipY\r\n          : flipY\r\n    const shear = o.shear || 0\r\n    const theta = o.rotate || o.theta || 0\r\n    const origin = new Point(o.origin || o.around || o.ox || o.originX, o.oy || o.originY)\r\n    const ox = origin.x\r\n    const oy = origin.y\r\n    // We need Point to be invalid if nothing was passed because we cannot default to 0 here. Thats why NaN\r\n    const position = new Point(o.position || o.px || o.positionX || NaN, o.py || o.positionY || NaN)\r\n    const px = position.x\r\n    const py = position.y\r\n    const translate = new Point(o.translate || o.tx || o.translateX, o.ty || o.translateY)\r\n    const tx = translate.x\r\n    const ty = translate.y\r\n    const relative = new Point(o.relative || o.rx || o.relativeX, o.ry || o.relativeY)\r\n    const rx = relative.x\r\n    const ry = relative.y\r\n\r\n    // Populate all of the values\r\n    return {\r\n      scaleX, scaleY, skewX, skewY, shear, theta, rx, ry, tx, ty, ox, oy, px, py\r\n    }\r\n  }\n\n  static fromArray (a) {\r\n    return { a: a[0], b: a[1], c: a[2], d: a[3], e: a[4], f: a[5] }\r\n  }\n\n  static isMatrixLike (o) {\r\n    return (\r\n      o.a != null\r\n      || o.b != null\r\n      || o.c != null\r\n      || o.d != null\r\n      || o.e != null\r\n      || o.f != null\r\n    )\r\n  }\n\n  // left matrix, right matrix, target matrix which is overwritten\n  static matrixMultiply (l, r, o) {\r\n    // Work out the product directly\r\n    const a = l.a * r.a + l.c * r.b\r\n    const b = l.b * r.a + l.d * r.b\r\n    const c = l.a * r.c + l.c * r.d\r\n    const d = l.b * r.c + l.d * r.d\r\n    const e = l.e + l.a * r.e + l.c * r.f\r\n    const f = l.f + l.b * r.e + l.d * r.f\r\n\r\n    // make sure to use local variables because l/r and o could be the same\r\n    o.a = a\r\n    o.b = b\r\n    o.c = c\r\n    o.d = d\r\n    o.e = e\r\n    o.f = f\r\n\r\n    return o\r\n  }\n\n  around (cx, cy, matrix) {\r\n    return this.clone().aroundO(cx, cy, matrix)\r\n  }\n\n  // Transform around a center point\n  aroundO (cx, cy, matrix) {\r\n    const dx = cx || 0\r\n    const dy = cy || 0\r\n    return this.translateO(-dx, -dy).lmultiplyO(matrix).translateO(dx, dy)\r\n  }\n\n  // Clones this matrix\n  clone () {\r\n    return new Matrix(this)\r\n  }\n\n  // Decomposes this matrix into its affine parameters\n  decompose (cx = 0, cy = 0) {\r\n    // Get the parameters from the matrix\r\n    const a = this.a\r\n    const b = this.b\r\n    const c = this.c\r\n    const d = this.d\r\n    const e = this.e\r\n    const f = this.f\r\n\r\n    // Figure out if the winding direction is clockwise or counterclockwise\r\n    const determinant = a * d - b * c\r\n    const ccw = determinant > 0 ? 1 : -1\r\n\r\n    // Since we only shear in x, we can use the x basis to get the x scale\r\n    // and the rotation of the resulting matrix\r\n    const sx = ccw * Math.sqrt(a * a + b * b)\r\n    const thetaRad = Math.atan2(ccw * b, ccw * a)\r\n    const theta = 180 / Math.PI * thetaRad\r\n    const ct = Math.cos(thetaRad)\r\n    const st = Math.sin(thetaRad)\r\n\r\n    // We can then solve the y basis vector simultaneously to get the other\r\n    // two affine parameters directly from these parameters\r\n    const lam = (a * c + b * d) / determinant\r\n    const sy = ((c * sx) / (lam * a - b)) || ((d * sx) / (lam * b + a))\r\n\r\n    // Use the translations\r\n    const tx = e - cx + cx * ct * sx + cy * (lam * ct * sx - st * sy)\r\n    const ty = f - cy + cx * st * sx + cy * (lam * st * sx + ct * sy)\r\n\r\n    // Construct the decomposition and return it\r\n    return {\r\n      // Return the affine parameters\r\n      scaleX: sx,\r\n      scaleY: sy,\r\n      shear: lam,\r\n      rotate: theta,\r\n      translateX: tx,\r\n      translateY: ty,\r\n      originX: cx,\r\n      originY: cy,\r\n\r\n      // Return the matrix parameters\r\n      a: this.a,\r\n      b: this.b,\r\n      c: this.c,\r\n      d: this.d,\r\n      e: this.e,\r\n      f: this.f\r\n    }\r\n  }\n\n  // Check if two matrices are equal\n  equals (other) {\r\n    if (other === this) return true\r\n    const comp = new Matrix(other)\r\n    return closeEnough(this.a, comp.a) && closeEnough(this.b, comp.b)\r\n      && closeEnough(this.c, comp.c) && closeEnough(this.d, comp.d)\r\n      && closeEnough(this.e, comp.e) && closeEnough(this.f, comp.f)\r\n  }\n\n  // Flip matrix on x or y, at a given offset\n  flip (axis, around) {\r\n    return this.clone().flipO(axis, around)\r\n  }\n\n  flipO (axis, around) {\r\n    return axis === 'x'\n      ? this.scaleO(-1, 1, around, 0)\r\n      : axis === 'y'\n        ? this.scaleO(1, -1, 0, around)\r\n        : this.scaleO(-1, -1, axis, around || axis) // Define an x, y flip point\r\n  }\n\n  // Initialize\r\n  init (source) {\r\n    const base = Matrix.fromArray([ 1, 0, 0, 1, 0, 0 ])\r\n\r\n    // ensure source as object\r\n    source = source instanceof Element\n      ? source.matrixify()\r\n      : typeof source === 'string'\n        ? Matrix.fromArray(source.split(delimiter).map(parseFloat))\r\n        : Array.isArray(source)\n          ? Matrix.fromArray(source)\r\n          : (typeof source === 'object' && Matrix.isMatrixLike(source))\n            ? source\r\n            : (typeof source === 'object')\n              ? new Matrix().transform(source)\r\n              : arguments.length === 6\n                ? Matrix.fromArray([].slice.call(arguments))\r\n                : base\r\n\r\n    // Merge the source matrix with the base matrix\r\n    this.a = source.a != null ? source.a : base.a\r\n    this.b = source.b != null ? source.b : base.b\r\n    this.c = source.c != null ? source.c : base.c\r\n    this.d = source.d != null ? source.d : base.d\r\n    this.e = source.e != null ? source.e : base.e\r\n    this.f = source.f != null ? source.f : base.f\r\n\r\n    return this\r\n  }\r\n\n  inverse () {\r\n    return this.clone().inverseO()\r\n  }\n\n  // Inverses matrix\n  inverseO () {\r\n    // Get the current parameters out of the matrix\r\n    const a = this.a\r\n    const b = this.b\r\n    const c = this.c\r\n    const d = this.d\r\n    const e = this.e\r\n    const f = this.f\r\n\r\n    // Invert the 2x2 matrix in the top left\r\n    const det = a * d - b * c\r\n    if (!det) throw new Error('Cannot invert ' + this)\r\n\r\n    // Calculate the top 2x2 matrix\r\n    const na = d / det\r\n    const nb = -b / det\r\n    const nc = -c / det\r\n    const nd = a / det\r\n\r\n    // Apply the inverted matrix to the top right\r\n    const ne = -(na * e + nc * f)\r\n    const nf = -(nb * e + nd * f)\r\n\r\n    // Construct the inverted matrix\r\n    this.a = na\r\n    this.b = nb\r\n    this.c = nc\r\n    this.d = nd\r\n    this.e = ne\r\n    this.f = nf\r\n\r\n    return this\r\n  }\n\n  lmultiply (matrix) {\r\n    return this.clone().lmultiplyO(matrix)\r\n  }\n\n  lmultiplyO (matrix) {\r\n    const r = this\r\n    const l = matrix instanceof Matrix\r\n      ? matrix\r\n      : new Matrix(matrix)\r\n\r\n    return Matrix.matrixMultiply(l, r, this)\r\n  }\n\n  // Left multiplies by the given matrix\n  multiply (matrix) {\r\n    return this.clone().multiplyO(matrix)\r\n  }\n\n  multiplyO (matrix) {\r\n    // Get the matrices\r\n    const l = this\r\n    const r = matrix instanceof Matrix\r\n      ? matrix\r\n      : new Matrix(matrix)\r\n\r\n    return Matrix.matrixMultiply(l, r, this)\r\n  }\n\n  // Rotate matrix\n  rotate (r, cx, cy) {\r\n    return this.clone().rotateO(r, cx, cy)\r\n  }\n\n  rotateO (r, cx = 0, cy = 0) {\r\n    // Convert degrees to radians\r\n    r = radians(r)\r\n\r\n    const cos = Math.cos(r)\r\n    const sin = Math.sin(r)\r\n\r\n    const { a, b, c, d, e, f } = this\r\n\r\n    this.a = a * cos - b * sin\r\n    this.b = b * cos + a * sin\r\n    this.c = c * cos - d * sin\r\n    this.d = d * cos + c * sin\r\n    this.e = e * cos - f * sin + cy * sin - cx * cos + cx\r\n    this.f = f * cos + e * sin - cx * sin - cy * cos + cy\r\n\r\n    return this\r\n  }\n\n  // Scale matrix\n  scale (x, y, cx, cy) {\r\n    return this.clone().scaleO(...arguments)\r\n  }\n\n  scaleO (x, y = x, cx = 0, cy = 0) {\r\n    // Support uniform scaling\r\n    if (arguments.length === 3) {\r\n      cy = cx\r\n      cx = y\r\n      y = x\r\n    }\r\n\r\n    const { a, b, c, d, e, f } = this\r\n\r\n    this.a = a * x\r\n    this.b = b * y\r\n    this.c = c * x\r\n    this.d = d * y\r\n    this.e = e * x - cx * x + cx\r\n    this.f = f * y - cy * y + cy\r\n\r\n    return this\r\n  }\n\n  // Shear matrix\n  shear (a, cx, cy) {\r\n    return this.clone().shearO(a, cx, cy)\r\n  }\n\n  shearO (lx, cx = 0, cy = 0) {\r\n    const { a, b, c, d, e, f } = this\r\n\r\n    this.a = a + b * lx\r\n    this.c = c + d * lx\r\n    this.e = e + f * lx - cy * lx\r\n\r\n    return this\r\n  }\n\n  // Skew Matrix\n  skew (x, y, cx, cy) {\r\n    return this.clone().skewO(...arguments)\r\n  }\n\n  skewO (x, y = x, cx = 0, cy = 0) {\r\n    // support uniformal skew\r\n    if (arguments.length === 3) {\r\n      cy = cx\r\n      cx = y\r\n      y = x\r\n    }\r\n\r\n    // Convert degrees to radians\r\n    x = radians(x)\r\n    y = radians(y)\r\n\r\n    const lx = Math.tan(x)\r\n    const ly = Math.tan(y)\r\n\r\n    const { a, b, c, d, e, f } = this\r\n\r\n    this.a = a + b * lx\r\n    this.b = b + a * ly\r\n    this.c = c + d * lx\r\n    this.d = d + c * ly\r\n    this.e = e + f * lx - cy * lx\r\n    this.f = f + e * ly - cx * ly\r\n\r\n    return this\r\n  }\n\n  // SkewX\n  skewX (x, cx, cy) {\r\n    return this.skew(x, 0, cx, cy)\r\n  }\n\n  // SkewY\n  skewY (y, cx, cy) {\r\n    return this.skew(0, y, cx, cy)\r\n  }\n\n  toArray () {\r\n    return [ this.a, this.b, this.c, this.d, this.e, this.f ]\r\n  }\n\n  // Convert matrix to string\n  toString () {\r\n    return 'matrix(' + this.a + ',' + this.b + ',' + this.c + ',' + this.d + ',' + this.e + ',' + this.f + ')'\r\n  }\n\n  // Transform a matrix into another matrix by manipulating the space\r\n  transform (o) {\r\n    // Check if o is a matrix and then left multiply it directly\r\n    if (Matrix.isMatrixLike(o)) {\r\n      const matrix = new Matrix(o)\r\n      return matrix.multiplyO(this)\r\n    }\r\n\r\n    // Get the proposed transformations and the current transformations\r\n    const t = Matrix.formatTransforms(o)\r\n    const current = this\r\n    const { x: ox, y: oy } = new Point(t.ox, t.oy).transform(current)\r\n\r\n    // Construct the resulting matrix\r\n    const transformer = new Matrix()\r\n      .translateO(t.rx, t.ry)\r\n      .lmultiplyO(current)\r\n      .translateO(-ox, -oy)\r\n      .scaleO(t.scaleX, t.scaleY)\r\n      .skewO(t.skewX, t.skewY)\r\n      .shearO(t.shear)\r\n      .rotateO(t.theta)\r\n      .translateO(ox, oy)\r\n\r\n    // If we want the origin at a particular place, we force it there\r\n    if (isFinite(t.px) || isFinite(t.py)) {\r\n      const origin = new Point(ox, oy).transform(transformer)\r\n      // TODO: Replace t.px with isFinite(t.px)\r\n      // Doesnt work because t.px is also 0 if it wasnt passed\r\n      const dx = isFinite(t.px) ? t.px - origin.x : 0\r\n      const dy = isFinite(t.py) ? t.py - origin.y : 0\r\n      transformer.translateO(dx, dy)\r\n    }\r\n\r\n    // Translate now after positioning\r\n    transformer.translateO(t.tx, t.ty)\r\n    return transformer\r\n  }\r\n\n  // Translate matrix\r\n  translate (x, y) {\r\n    return this.clone().translateO(x, y)\r\n  }\r\n\n  translateO (x, y) {\r\n    this.e += x || 0\r\n    this.f += y || 0\r\n    return this\r\n  }\r\n\n  valueOf () {\r\n    return {\r\n      a: this.a,\r\n      b: this.b,\r\n      c: this.c,\r\n      d: this.d,\r\n      e: this.e,\r\n      f: this.f\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport function ctm () {\r\n  return new Matrix(this.node.getCTM())\r\n}\r\n\r\nexport function screenCTM () {\r\n  /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\r\n     This is needed because FF does not return the transformation matrix\r\n     for the inner coordinate system when getScreenCTM() is called on nested svgs.\r\n     However all other Browsers do that */\r\n  if (typeof this.isRoot === 'function' && !this.isRoot()) {\r\n    const rect = this.rect(1, 1)\r\n    const m = rect.node.getScreenCTM()\r\n    rect.remove()\r\n    return new Matrix(m)\r\n  }\r\n  return new Matrix(this.node.getScreenCTM())\r\n}\r\n\r\nregister(Matrix, 'Matrix')\r\n","import { globals } from '../../utils/window.js'\r\nimport { makeInstance } from '../../utils/adopter.js'\r\n\r\nexport default function parser () {\r\n  // Reuse cached element if possible\r\n  if (!parser.nodes) {\r\n    const svg = makeInstance().size(2, 0)\r\n    svg.node.style.cssText = [\r\n      'opacity: 0',\r\n      'position: absolute',\r\n      'left: -100%',\r\n      'top: -100%',\r\n      'overflow: hidden'\r\n    ].join(';')\r\n\r\n    svg.attr('focusable', 'false')\r\n    svg.attr('aria-hidden', 'true')\r\n\r\n    const path = svg.path().node\r\n\r\n    parser.nodes = { svg, path }\r\n  }\r\n\r\n  if (!parser.nodes.svg.node.parentNode) {\r\n    const b = globals.document.body || globals.document.documentElement\r\n    parser.nodes.svg.addTo(b)\r\n  }\r\n\r\n  return parser.nodes\r\n}\r\n","import { delimiter } from '../modules/core/regex.js'\r\nimport { globals } from '../utils/window.js'\r\nimport { register } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Matrix from './Matrix.js'\r\nimport Point from './Point.js'\r\nimport parser from '../modules/core/parser.js'\r\n\r\nexport function isNulledBox (box) {\r\n  return !box.width && !box.height && !box.x && !box.y\r\n}\r\n\r\nexport function domContains (node) {\r\n  return node === globals.document\r\n    || (globals.document.documentElement.contains || function (node) {\r\n      // This is IE - it does not support contains() for top-level SVGs\r\n      while (node.parentNode) {\r\n        node = node.parentNode\r\n      }\r\n      return node === globals.document\r\n    }).call(globals.document.documentElement, node)\r\n}\r\n\r\nexport default class Box {\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  addOffset () {\r\n    // offset by window scroll position, because getBoundingClientRect changes when window is scrolled\r\n    this.x += globals.window.pageXOffset\r\n    this.y += globals.window.pageYOffset\r\n    return new Box(this)\r\n  }\r\n\r\n  init (source) {\r\n    const base = [ 0, 0, 0, 0 ]\r\n    source = typeof source === 'string'\n      ? source.split(delimiter).map(parseFloat)\r\n      : Array.isArray(source)\n        ? source\r\n        : typeof source === 'object'\n          ? [ source.left != null\n            ? source.left\r\n            : source.x, source.top != null ? source.top : source.y, source.width, source.height ]\r\n          : arguments.length === 4\n            ? [].slice.call(arguments)\r\n            : base\r\n\r\n    this.x = source[0] || 0\r\n    this.y = source[1] || 0\r\n    this.width = this.w = source[2] || 0\r\n    this.height = this.h = source[3] || 0\r\n\r\n    // Add more bounding box properties\r\n    this.x2 = this.x + this.w\r\n    this.y2 = this.y + this.h\r\n    this.cx = this.x + this.w / 2\r\n    this.cy = this.y + this.h / 2\r\n\r\n    return this\r\n  }\r\n\r\n  isNulled () {\r\n    return isNulledBox(this)\r\n  }\r\n\r\n  // Merge rect box with another, return a new instance\r\n  merge (box) {\r\n    const x = Math.min(this.x, box.x)\r\n    const y = Math.min(this.y, box.y)\r\n    const width = Math.max(this.x + this.width, box.x + box.width) - x\r\n    const height = Math.max(this.y + this.height, box.y + box.height) - y\r\n\r\n    return new Box(x, y, width, height)\r\n  }\r\n\r\n  toArray () {\r\n    return [ this.x, this.y, this.width, this.height ]\r\n  }\r\n\r\n  toString () {\r\n    return this.x + ' ' + this.y + ' ' + this.width + ' ' + this.height\r\n  }\r\n\r\n  transform (m) {\r\n    if (!(m instanceof Matrix)) {\r\n      m = new Matrix(m)\r\n    }\r\n\r\n    let xMin = Infinity\r\n    let xMax = -Infinity\r\n    let yMin = Infinity\r\n    let yMax = -Infinity\r\n\r\n    const pts = [\r\n      new Point(this.x, this.y),\r\n      new Point(this.x2, this.y),\r\n      new Point(this.x, this.y2),\r\n      new Point(this.x2, this.y2)\r\n    ]\r\n\r\n    pts.forEach(function (p) {\r\n      p = p.transform(m)\r\n      xMin = Math.min(xMin, p.x)\r\n      xMax = Math.max(xMax, p.x)\r\n      yMin = Math.min(yMin, p.y)\r\n      yMax = Math.max(yMax, p.y)\r\n    })\r\n\r\n    return new Box(\r\n      xMin, yMin,\r\n      xMax - xMin,\r\n      yMax - yMin\r\n    )\r\n  }\r\n\r\n}\r\n\r\nfunction getBox (el, getBBoxFn, retry) {\r\n  let box\r\n\r\n  try {\r\n    // Try to get the box with the provided function\r\n    box = getBBoxFn(el.node)\r\n\r\n    // If the box is worthless and not even in the dom, retry\r\n    // by throwing an error here...\r\n    if (isNulledBox(box) && !domContains(el.node)) {\r\n      throw new Error('Element not in the dom')\r\n    }\r\n  } catch (e) {\r\n    // ... and calling the retry handler here\r\n    box = retry(el)\r\n  }\r\n\r\n  return box\r\n}\r\n\r\nexport function bbox () {\r\n  // Function to get bbox is getBBox()\r\n  const getBBox = (node) => node.getBBox()\r\n\r\n  // Take all measures so that a stupid browser renders the element\r\n  // so we can get the bbox from it when we try again\r\n  const retry = (el) => {\r\n    try {\r\n      const clone = el.clone().addTo(parser().svg).show()\r\n      const box = clone.node.getBBox()\r\n      clone.remove()\r\n      return box\r\n    } catch (e) {\r\n      // We give up...\r\n      throw new Error(`Getting bbox of element \"${el.node.nodeName}\" is not possible: ${e.toString()}`)\r\n    }\r\n  }\r\n\r\n  const box = getBox(this, getBBox, retry)\r\n  const bbox = new Box(box)\r\n\r\n  return bbox\r\n}\r\n\r\nexport function rbox (el) {\r\n  const getRBox = (node) => node.getBoundingClientRect()\r\n  const retry = (el) => {\r\n    // There is no point in trying tricks here because if we insert the element into the dom ourselves\r\n    // it obviously will be at the wrong position\r\n    throw new Error(`Getting rbox of element \"${el.node.nodeName}\" is not possible`)\r\n  }\r\n\r\n  const box = getBox(this, getRBox, retry)\r\n  const rbox = new Box(box)\r\n\r\n  // If an element was passed, we want the bbox in the coordinate system of that element\r\n  if (el) {\r\n    return rbox.transform(el.screenCTM().inverseO())\r\n  }\r\n\r\n  // Else we want it in absolute screen coordinates\r\n  // Therefore we need to add the scrollOffset\r\n  return rbox.addOffset()\r\n}\r\n\r\n// Checks whether the given point is inside the bounding box\r\nexport function inside (x, y) {\r\n  const box = this.bbox()\r\n\r\n  return x > box.x\r\n    && y > box.y\r\n    && x < box.x + box.width\r\n    && y < box.y + box.height\r\n}\r\n\r\nregisterMethods({\r\n  viewbox: {\r\n    viewbox (x, y, width, height) {\r\n      // act as getter\r\n      if (x == null) return new Box(this.attr('viewBox'))\r\n\r\n      // act as setter\r\n      return this.attr('viewBox', new Box(x, y, width, height))\r\n    },\r\n\r\n    zoom (level, point) {\r\n      // Its best to rely on the attributes here and here is why:\r\n      // clientXYZ: Doesn't work on non-root svgs because they dont have a CSSBox (silly!)\r\n      // getBoundingClientRect: Doesn't work because Chrome just ignores width and height of nested svgs completely\r\n      //                        that means, their clientRect is always as big as the content.\r\n      //                        Furthermore this size is incorrect if the element is further transformed by its parents\r\n      // computedStyle: Only returns meaningful values if css was used with px. We dont go this route here!\r\n      // getBBox: returns the bounding box of its content - that doesnt help!\r\n      let { width, height } = this.attr([ 'width', 'height' ])\r\n\r\n      // Width and height is a string when a number with a unit is present which we can't use\r\n      // So we try clientXYZ\r\n      if ((!width && !height) || (typeof width === 'string' || typeof height === 'string')) {\r\n        width = this.node.clientWidth\r\n        height = this.node.clientHeight\r\n      }\r\n\r\n      // Giving up...\r\n      if (!width || !height) {\r\n        throw new Error('Impossible to get absolute width and height. Please provide an absolute width and height attribute on the zooming element')\r\n      }\r\n\r\n      const v = this.viewbox()\r\n\r\n      const zoomX = width / v.width\r\n      const zoomY = height / v.height\r\n      const zoom = Math.min(zoomX, zoomY)\r\n\r\n      if (level == null) {\r\n        return zoom\r\n      }\r\n\r\n      let zoomAmount = zoom / level\r\n\r\n      // Set the zoomAmount to the highest value which is safe to process and recover from\r\n      // The * 100 is a bit of wiggle room for the matrix transformation\r\n      if (zoomAmount === Infinity) zoomAmount = Number.MAX_SAFE_INTEGER / 100\r\n\r\n      point = point || new Point(width / 2 / zoomX + v.x, height / 2 / zoomY + v.y)\r\n\r\n      const box = new Box(v).transform(\r\n        new Matrix({ scale: zoomAmount, origin: point })\r\n      )\r\n\r\n      return this.viewbox(box)\r\n    }\r\n  }\r\n})\r\n\r\nregister(Box, 'Box')\r\n","import { extend } from '../utils/adopter.js'\r\n// import { subClassArray } from './ArrayPolyfill.js'\r\n\r\nclass List extends Array {\r\n  constructor (arr = [], ...args) {\r\n    super(arr, ...args)\r\n    if (typeof arr === 'number') return this\r\n    this.length = 0\r\n    this.push(...arr)\r\n  }\r\n}\r\n\r\n/* = subClassArray('List', Array, function (arr = []) {\r\n  // This catches the case, that native map tries to create an array with new Array(1)\r\n  if (typeof arr === 'number') return this\r\n  this.length = 0\r\n  this.push(...arr)\r\n}) */\r\n\r\nexport default List\r\n\r\nextend([ List ], {\r\n  each (fnOrMethodName, ...args) {\r\n    if (typeof fnOrMethodName === 'function') {\r\n      return this.map((el, i, arr) => {\r\n        return fnOrMethodName.call(el, el, i, arr)\r\n      })\r\n    } else {\r\n      return this.map(el => {\r\n        return el[fnOrMethodName](...args)\r\n      })\r\n    }\r\n  },\r\n\r\n  toArray () {\r\n    return Array.prototype.concat.apply([], this)\r\n  }\r\n})\r\n\r\nconst reserved = [ 'toArray', 'constructor', 'each' ]\r\n\r\nList.extend = function (methods) {\r\n  methods = methods.reduce((obj, name) => {\r\n    // Don't overwrite own methods\r\n    if (reserved.includes(name)) return obj\r\n\r\n    // Don't add private methods\r\n    if (name[0] === '_') return obj\r\n\r\n    // Relay every call to each()\r\n    obj[name] = function (...attrs) {\r\n      return this.each(name, ...attrs)\r\n    }\r\n    return obj\r\n  }, {})\r\n\r\n  extend([ List ], methods)\r\n}\r\n","import { delimiter } from './regex.js'\r\nimport { makeInstance } from '../../utils/adopter.js'\r\nimport { globals } from '../../utils/window.js'\r\n\r\nlet listenerId = 0\r\nexport const windowEvents = {}\r\n\r\nexport function getEvents (instance) {\r\n  let n = instance.getEventHolder()\r\n\r\n  // We dont want to save events in global space\r\n  if (n === globals.window) n = windowEvents\r\n  if (!n.events) n.events = {}\r\n  return n.events\r\n}\r\n\r\nexport function getEventTarget (instance) {\r\n  return instance.getEventTarget()\r\n}\r\n\r\nexport function clearEvents (instance) {\r\n  let n = instance.getEventHolder()\r\n  if (n === globals.window) n = windowEvents\r\n  if (n.events) n.events = {}\r\n}\r\n\r\n// Add event binder in the SVG namespace\r\nexport function on (node, events, listener, binding, options) {\r\n  const l = listener.bind(binding || node)\r\n  const instance = makeInstance(node)\r\n  const bag = getEvents(instance)\r\n  const n = getEventTarget(instance)\r\n\r\n  // events can be an array of events or a string of events\r\n  events = Array.isArray(events) ? events : events.split(delimiter)\r\n\r\n  // add id to listener\r\n  if (!listener._svgjsListenerId) {\r\n    listener._svgjsListenerId = ++listenerId\r\n  }\r\n\r\n  events.forEach(function (event) {\r\n    const ev = event.split('.')[0]\r\n    const ns = event.split('.')[1] || '*'\r\n\r\n    // ensure valid object\r\n    bag[ev] = bag[ev] || {}\r\n    bag[ev][ns] = bag[ev][ns] || {}\r\n\r\n    // reference listener\r\n    bag[ev][ns][listener._svgjsListenerId] = l\r\n\r\n    // add listener\r\n    n.addEventListener(ev, l, options || false)\r\n  })\r\n}\r\n\r\n// Add event unbinder in the SVG namespace\r\nexport function off (node, events, listener, options) {\r\n  const instance = makeInstance(node)\r\n  const bag = getEvents(instance)\r\n  const n = getEventTarget(instance)\r\n\r\n  // listener can be a function or a number\r\n  if (typeof listener === 'function') {\r\n    listener = listener._svgjsListenerId\r\n    if (!listener) return\r\n  }\r\n\r\n  // events can be an array of events or a string or undefined\r\n  events = Array.isArray(events) ? events : (events || '').split(delimiter)\r\n\r\n  events.forEach(function (event) {\r\n    const ev = event && event.split('.')[0]\r\n    const ns = event && event.split('.')[1]\r\n    let namespace, l\r\n\r\n    if (listener) {\r\n      // remove listener reference\r\n      if (bag[ev] && bag[ev][ns || '*']) {\r\n        // removeListener\r\n        n.removeEventListener(ev, bag[ev][ns || '*'][listener], options || false)\r\n\r\n        delete bag[ev][ns || '*'][listener]\r\n      }\r\n    } else if (ev && ns) {\r\n      // remove all listeners for a namespaced event\r\n      if (bag[ev] && bag[ev][ns]) {\r\n        for (l in bag[ev][ns]) {\r\n          off(n, [ ev, ns ].join('.'), l)\r\n        }\r\n\r\n        delete bag[ev][ns]\r\n      }\r\n    } else if (ns) {\r\n      // remove all listeners for a specific namespace\r\n      for (event in bag) {\r\n        for (namespace in bag[event]) {\r\n          if (ns === namespace) {\r\n            off(n, [ event, ns ].join('.'))\r\n          }\r\n        }\r\n      }\r\n    } else if (ev) {\r\n      // remove all listeners for the event\r\n      if (bag[ev]) {\r\n        for (namespace in bag[ev]) {\r\n          off(n, [ ev, namespace ].join('.'))\r\n        }\r\n\r\n        delete bag[ev]\r\n      }\r\n    } else {\r\n      // remove all listeners on a given node\r\n      for (event in bag) {\r\n        off(n, event)\r\n      }\r\n\r\n      clearEvents(instance)\r\n    }\r\n  })\r\n}\r\n\r\nexport function dispatch (node, event, data, options) {\r\n  const n = getEventTarget(node)\r\n\r\n  // Dispatch event\r\n  if (event instanceof globals.window.Event) {\r\n    n.dispatchEvent(event)\r\n  } else {\r\n    event = new globals.window.CustomEvent(event, { detail: data, cancelable: true, ...options })\r\n    n.dispatchEvent(event)\r\n  }\r\n  return event\r\n}\r\n","import { adopt } from '../../utils/adopter.js'\r\nimport { globals } from '../../utils/window.js'\r\nimport { map } from '../../utils/utils.js'\r\nimport List from '../../types/List.js'\r\n\r\nexport default function baseFind (query, parent) {\r\n  return new List(map((parent || globals.document).querySelectorAll(query), function (node) {\r\n    return adopt(node)\r\n  }))\r\n}\r\n\r\n// Scoped find method\r\nexport function find (query) {\r\n  return baseFind(query, this.node)\r\n}\r\n\r\nexport function findOne (query) {\r\n  return adopt(this.node.querySelector(query))\r\n}\r\n","import { dispatch, off, on } from '../modules/core/event.js'\nimport { register } from '../utils/adopter.js'\nimport Base from './Base.js'\n\nexport default class EventTarget extends Base {\n  addEventListener () {}\n\n  dispatch (event, data, options) {\n    return dispatch(this, event, data, options)\n  }\n\n  dispatchEvent (event) {\n    const bag = this.getEventHolder().events\n    if (!bag) return true\n\n    const events = bag[event.type]\n\n    for (const i in events) {\n      for (const j in events[i]) {\n        events[i][j](event)\n      }\n    }\n\n    return !event.defaultPrevented\n  }\n\n  // Fire given event\n  fire (event, data, options) {\n    this.dispatch(event, data, options)\n    return this\n  }\n\n  getEventHolder () {\n    return this\n  }\n\n  getEventTarget () {\n    return this\n  }\n\n  // Unbind event from listener\n  off (event, listener, options) {\n    off(this, event, listener, options)\n    return this\n  }\n\n  // Bind given event to listener\n  on (event, listener, binding, options) {\n    on(this, event, listener, binding, options)\n    return this\n  }\n\n  removeEventListener () {}\n}\n\nregister(EventTarget, 'EventTarget')\n","\r\nexport function noop () {}\r\n\r\n// Default animation values\r\nexport const timeline = {\r\n  duration: 400,\r\n  ease: '>',\r\n  delay: 0\r\n}\r\n\r\n// Default attribute values\r\nexport const attrs = {\r\n\r\n  // fill and stroke\r\n  'fill-opacity': 1,\r\n  'stroke-opacity': 1,\r\n  'stroke-width': 0,\r\n  'stroke-linejoin': 'miter',\r\n  'stroke-linecap': 'butt',\r\n  fill: '#000000',\r\n  stroke: '#000000',\r\n  opacity: 1,\r\n\r\n  // position\r\n  x: 0,\r\n  y: 0,\r\n  cx: 0,\r\n  cy: 0,\r\n\r\n  // size\r\n  width: 0,\r\n  height: 0,\r\n\r\n  // radius\r\n  r: 0,\r\n  rx: 0,\r\n  ry: 0,\r\n\r\n  // gradient\r\n  offset: 0,\r\n  'stop-opacity': 1,\r\n  'stop-color': '#000000',\r\n\r\n  // text\r\n  'text-anchor': 'start'\r\n}\r\n","import { delimiter } from '../modules/core/regex.js'\r\n\r\nexport default class SVGArray extends Array {\r\n  constructor (...args) {\r\n    super(...args)\r\n    this.init(...args)\r\n  }\r\n\r\n  clone () {\r\n    return new this.constructor(this)\r\n  }\n\n  init (arr) {\r\n    // This catches the case, that native map tries to create an array with new Array(1)\r\n    if (typeof arr === 'number') return this\r\n    this.length = 0\r\n    this.push(...this.parse(arr))\r\n    return this\r\n  }\r\n\r\n  // Parse whitespace separated string\n  parse (array = []) {\r\n    // If already is an array, no need to parse it\r\n    if (array instanceof Array) return array\r\n\r\n    return array.trim().split(delimiter).map(parseFloat)\r\n  }\n\n  toArray () {\r\n    return Array.prototype.concat.apply([], this)\r\n  }\r\n\r\n  toSet () {\r\n    return new Set(this)\r\n  }\n\n  toString () {\r\n    return this.join(' ')\r\n  }\r\n\r\n  // Flattens the array if needed\r\n  valueOf () {\r\n    const ret = []\r\n    ret.push(...this)\r\n    return ret\r\n  }\r\n\r\n}\r\n","import { numberAndUnit } from '../modules/core/regex.js'\r\n\r\n// Module for unit conversions\r\nexport default class SVGNumber {\r\n  // Initialize\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  convert (unit) {\r\n    return new SVGNumber(this.value, unit)\r\n  }\r\n\r\n  // Divide number\r\n  divide (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this / number, this.unit || number.unit)\r\n  }\r\n\r\n  init (value, unit) {\r\n    unit = Array.isArray(value) ? value[1] : unit\r\n    value = Array.isArray(value) ? value[0] : value\r\n\r\n    // initialize defaults\r\n    this.value = 0\r\n    this.unit = unit || ''\r\n\r\n    // parse value\r\n    if (typeof value === 'number') {\r\n      // ensure a valid numeric value\r\n      this.value = isNaN(value) ? 0 : !isFinite(value) ? (value < 0 ? -3.4e+38 : +3.4e+38) : value\r\n    } else if (typeof value === 'string') {\r\n      unit = value.match(numberAndUnit)\r\n\r\n      if (unit) {\r\n        // make value numeric\r\n        this.value = parseFloat(unit[1])\r\n\r\n        // normalize\r\n        if (unit[5] === '%') {\r\n          this.value /= 100\r\n        } else if (unit[5] === 's') {\r\n          this.value *= 1000\r\n        }\r\n\r\n        // store unit\r\n        this.unit = unit[5]\r\n      }\r\n    } else {\r\n      if (value instanceof SVGNumber) {\r\n        this.value = value.valueOf()\r\n        this.unit = value.unit\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Subtract number\r\n  minus (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this - number, this.unit || number.unit)\r\n  }\r\n\r\n  // Add number\r\n  plus (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this + number, this.unit || number.unit)\r\n  }\r\n\r\n  // Multiply number\r\n  times (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this * number, this.unit || number.unit)\r\n  }\r\n\r\n  toArray () {\r\n    return [ this.value, this.unit ]\r\n  }\r\n\r\n  toJSON () {\r\n    return this.toString()\r\n  }\r\n\r\n  toString () {\r\n    return (this.unit === '%'\n      ? ~~(this.value * 1e8) / 1e6\r\n      : this.unit === 's'\n        ? this.value / 1e3\r\n        : this.value\r\n    ) + this.unit\r\n  }\r\n\r\n  valueOf () {\r\n    return this.value\r\n  }\r\n\r\n}\r\n","import { attrs as defaults } from './defaults.js'\r\nimport { isNumber } from './regex.js'\r\nimport Color from '../../types/Color.js'\r\nimport SVGArray from '../../types/SVGArray.js'\r\nimport SVGNumber from '../../types/SVGNumber.js'\r\n\r\nconst hooks = []\r\nexport function registerAttrHook (fn) {\r\n  hooks.push(fn)\r\n}\r\n\r\n// Set svg element attribute\r\nexport default function attr (attr, val, ns) {\r\n  // act as full getter\r\n  if (attr == null) {\r\n    // get an object of attributes\r\n    attr = {}\r\n    val = this.node.attributes\r\n\r\n    for (const node of val) {\r\n      attr[node.nodeName] = isNumber.test(node.nodeValue)\r\n        ? parseFloat(node.nodeValue)\r\n        : node.nodeValue\r\n    }\r\n\r\n    return attr\r\n  } else if (attr instanceof Array) {\r\n    // loop through array and get all values\r\n    return attr.reduce((last, curr) => {\r\n      last[curr] = this.attr(curr)\r\n      return last\r\n    }, {})\r\n  } else if (typeof attr === 'object' && attr.constructor === Object) {\r\n    // apply every attribute individually if an object is passed\r\n    for (val in attr) this.attr(val, attr[val])\r\n  } else if (val === null) {\r\n    // remove value\r\n    this.node.removeAttribute(attr)\r\n  } else if (val == null) {\r\n    // act as a getter if the first and only argument is not an object\r\n    val = this.node.getAttribute(attr)\r\n    return val == null\n      ? defaults[attr]\r\n      : isNumber.test(val)\n        ? parseFloat(val)\r\n        : val\r\n  } else {\r\n    // Loop through hooks and execute them to convert value\r\n    val = hooks.reduce((_val, hook) => {\r\n      return hook(attr, _val, this)\r\n    }, val)\r\n\r\n    // ensure correct numeric values (also accepts NaN and Infinity)\r\n    if (typeof val === 'number') {\r\n      val = new SVGNumber(val)\r\n    } else if (Color.isColor(val)) {\r\n      // ensure full hex color\r\n      val = new Color(val)\r\n    } else if (val.constructor === Array) {\r\n      // Check for plain arrays and parse array values\r\n      val = new SVGArray(val)\r\n    }\r\n\r\n    // if the passed attribute is leading...\r\n    if (attr === 'leading') {\r\n      // ... call the leading method instead\r\n      if (this.leading) {\r\n        this.leading(val)\r\n      }\r\n    } else {\r\n      // set given attribute on node\r\n      typeof ns === 'string'\n        ? this.node.setAttributeNS(ns, attr, val.toString())\r\n        : this.node.setAttribute(attr, val.toString())\r\n    }\r\n\r\n    // rebuild if required\r\n    if (this.rebuild && (attr === 'font-size' || attr === 'x')) {\r\n      this.rebuild()\r\n    }\r\n  }\r\n\r\n  return this\r\n}\r\n","import {\r\n  adopt,\r\n  assignNewId,\r\n  eid,\r\n  extend,\r\n  makeInstance,\r\n  create,\r\n  register\r\n} from '../utils/adopter.js'\r\nimport { find, findOne } from '../modules/core/selector.js'\r\nimport { globals } from '../utils/window.js'\r\nimport { map } from '../utils/utils.js'\r\nimport { svg, html } from '../modules/core/namespaces.js'\r\nimport EventTarget from '../types/EventTarget.js'\r\nimport List from '../types/List.js'\r\nimport attr from '../modules/core/attr.js'\r\n\r\nexport default class Dom extends EventTarget {\r\n  constructor (node, attrs) {\r\n    super()\r\n    this.node = node\r\n    this.type = node.nodeName\r\n\r\n    if (attrs && node !== attrs) {\r\n      this.attr(attrs)\r\n    }\r\n  }\r\n\r\n  // Add given element at a position\r\n  add (element, i) {\r\n    element = makeInstance(element)\r\n\r\n    // If non-root svg nodes are added we have to remove their namespaces\r\n    if (element.removeNamespace && this.node instanceof globals.window.SVGElement) {\r\n      element.removeNamespace()\r\n    }\r\n\r\n    if (i == null) {\r\n      this.node.appendChild(element.node)\r\n    } else if (element.node !== this.node.childNodes[i]) {\r\n      this.node.insertBefore(element.node, this.node.childNodes[i])\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Add element to given container and return self\r\n  addTo (parent, i) {\r\n    return makeInstance(parent).put(this, i)\r\n  }\r\n\r\n  // Returns all child elements\r\n  children () {\r\n    return new List(map(this.node.children, function (node) {\r\n      return adopt(node)\r\n    }))\r\n  }\r\n\r\n  // Remove all elements in this container\r\n  clear () {\r\n    // remove children\r\n    while (this.node.hasChildNodes()) {\r\n      this.node.removeChild(this.node.lastChild)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Clone element\r\n  clone (deep = true) {\r\n    // write dom data to the dom so the clone can pickup the data\r\n    this.writeDataToDom()\r\n\r\n    // clone element and assign new id\r\n    return new this.constructor(assignNewId(this.node.cloneNode(deep)))\r\n  }\r\n\r\n  // Iterates over all children and invokes a given block\r\n  each (block, deep) {\r\n    const children = this.children()\r\n    let i, il\r\n\r\n    for (i = 0, il = children.length; i < il; i++) {\r\n      block.apply(children[i], [ i, children ])\r\n\r\n      if (deep) {\r\n        children[i].each(block, deep)\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  element (nodeName, attrs) {\r\n    return this.put(new Dom(create(nodeName), attrs))\r\n  }\r\n\r\n  // Get first child\r\n  first () {\r\n    return adopt(this.node.firstChild)\r\n  }\r\n\r\n  // Get a element at the given index\r\n  get (i) {\r\n    return adopt(this.node.childNodes[i])\r\n  }\r\n\r\n  getEventHolder () {\r\n    return this.node\r\n  }\r\n\r\n  getEventTarget () {\r\n    return this.node\r\n  }\r\n\r\n  // Checks if the given element is a child\r\n  has (element) {\r\n    return this.index(element) >= 0\r\n  }\r\n\r\n  html (htmlOrFn, outerHTML) {\r\n    return this.xml(htmlOrFn, outerHTML, html)\r\n  }\r\n\r\n  // Get / set id\r\n  id (id) {\r\n    // generate new id if no id set\r\n    if (typeof id === 'undefined' && !this.node.id) {\r\n      this.node.id = eid(this.type)\r\n    }\r\n\r\n    // don't set directly with this.node.id to make `null` work correctly\r\n    return this.attr('id', id)\r\n  }\r\n\r\n  // Gets index of given element\r\n  index (element) {\r\n    return [].slice.call(this.node.childNodes).indexOf(element.node)\r\n  }\r\n\r\n  // Get the last child\r\n  last () {\r\n    return adopt(this.node.lastChild)\r\n  }\r\n\r\n  // matches the element vs a css selector\r\n  matches (selector) {\r\n    const el = this.node\r\n    const matcher = el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector || null\r\n    return matcher && matcher.call(el, selector)\r\n  }\r\n\r\n  // Returns the parent element instance\r\n  parent (type) {\r\n    let parent = this\r\n\r\n    // check for parent\r\n    if (!parent.node.parentNode) return null\r\n\r\n    // get parent element\r\n    parent = adopt(parent.node.parentNode)\r\n\r\n    if (!type) return parent\r\n\r\n    // loop trough ancestors if type is given\r\n    do {\r\n      if (typeof type === 'string' ? parent.matches(type) : parent instanceof type) return parent\r\n    } while ((parent = adopt(parent.node.parentNode)))\r\n\r\n    return parent\r\n  }\r\n\r\n  // Basically does the same as `add()` but returns the added element instead\r\n  put (element, i) {\r\n    element = makeInstance(element)\r\n    this.add(element, i)\r\n    return element\r\n  }\r\n\r\n  // Add element to given container and return container\r\n  putIn (parent, i) {\r\n    return makeInstance(parent).add(this, i)\r\n  }\r\n\r\n  // Remove element\r\n  remove () {\r\n    if (this.parent()) {\r\n      this.parent().removeElement(this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Remove a given child\r\n  removeElement (element) {\r\n    this.node.removeChild(element.node)\r\n\r\n    return this\r\n  }\r\n\r\n  // Replace this with element\r\n  replace (element) {\r\n    element = makeInstance(element)\r\n\r\n    if (this.node.parentNode) {\r\n      this.node.parentNode.replaceChild(element.node, this.node)\r\n    }\r\n\r\n    return element\r\n  }\r\n\r\n  round (precision = 2, map = null) {\r\n    const factor = 10 ** precision\r\n    const attrs = this.attr(map)\r\n\r\n    for (const i in attrs) {\r\n      if (typeof attrs[i] === 'number') {\r\n        attrs[i] = Math.round(attrs[i] * factor) / factor\r\n      }\r\n    }\r\n\r\n    this.attr(attrs)\r\n    return this\r\n  }\r\n\r\n  // Import / Export raw svg\r\n  svg (svgOrFn, outerSVG) {\r\n    return this.xml(svgOrFn, outerSVG, svg)\r\n  }\r\n\r\n  // Return id on string conversion\r\n  toString () {\r\n    return this.id()\r\n  }\r\n\r\n  words (text) {\r\n    // This is faster than removing all children and adding a new one\r\n    this.node.textContent = text\r\n    return this\r\n  }\r\n\r\n  wrap (node) {\r\n    const parent = this.parent()\r\n\r\n    if (!parent) {\r\n      return this.addTo(node)\r\n    }\r\n\r\n    const position = parent.index(this)\r\n    return parent.put(node, position).put(this)\r\n  }\r\n\r\n  // write svgjs data to the dom\r\n  writeDataToDom () {\r\n    // dump variables recursively\r\n    this.each(function () {\r\n      this.writeDataToDom()\r\n    })\r\n\r\n    return this\r\n  }\r\n\r\n  // Import / Export raw svg\r\n  xml (xmlOrFn, outerXML, ns) {\r\n    if (typeof xmlOrFn === 'boolean') {\r\n      ns = outerXML\r\n      outerXML = xmlOrFn\r\n      xmlOrFn = null\r\n    }\r\n\r\n    // act as getter if no svg string is given\r\n    if (xmlOrFn == null || typeof xmlOrFn === 'function') {\r\n      // The default for exports is, that the outerNode is included\r\n      outerXML = outerXML == null ? true : outerXML\r\n\r\n      // write svgjs data to the dom\r\n      this.writeDataToDom()\r\n      let current = this\r\n\r\n      // An export modifier was passed\r\n      if (xmlOrFn != null) {\r\n        current = adopt(current.node.cloneNode(true))\r\n\r\n        // If the user wants outerHTML we need to process this node, too\r\n        if (outerXML) {\r\n          const result = xmlOrFn(current)\r\n          current = result || current\r\n\r\n          // The user does not want this node? Well, then he gets nothing\r\n          if (result === false) return ''\r\n        }\r\n\r\n        // Deep loop through all children and apply modifier\r\n        current.each(function () {\r\n          const result = xmlOrFn(this)\r\n          const _this = result || this\r\n\r\n          // If modifier returns false, discard node\r\n          if (result === false) {\r\n            this.remove()\r\n\r\n            // If modifier returns new node, use it\r\n          } else if (result && this !== _this) {\r\n            this.replace(_this)\r\n          }\r\n        }, true)\r\n      }\r\n\r\n      // Return outer or inner content\r\n      return outerXML\r\n        ? current.node.outerHTML\r\n        : current.node.innerHTML\r\n    }\r\n\r\n    // Act as setter if we got a string\r\n\r\n    // The default for import is, that the current node is not replaced\r\n    outerXML = outerXML == null ? false : outerXML\r\n\r\n    // Create temporary holder\r\n    const well = create('wrapper', ns)\r\n    const fragment = globals.document.createDocumentFragment()\r\n\r\n    // Dump raw svg\r\n    well.innerHTML = xmlOrFn\r\n\r\n    // Transplant nodes into the fragment\r\n    for (let len = well.children.length; len--;) {\r\n      fragment.appendChild(well.firstElementChild)\r\n    }\r\n\r\n    const parent = this.parent()\r\n\r\n    // Add the whole fragment at once\r\n    return outerXML\r\n      ? this.replace(fragment) && parent\r\n      : this.add(fragment)\r\n  }\r\n}\r\n\r\nextend(Dom, { attr, find, findOne })\r\nregister(Dom, 'Dom')\r\n","import { bbox, rbox, inside } from '../types/Box.js'\nimport { ctm, screenCTM } from '../types/Matrix.js'\nimport {\n  extend,\n  getClass,\n  makeInstance,\n  register,\n  root\n} from '../utils/adopter.js'\nimport { globals } from '../utils/window.js'\nimport { point } from '../types/Point.js'\nimport { proportionalSize } from '../utils/utils.js'\nimport { reference } from '../modules/core/regex.js'\nimport Dom from './Dom.js'\nimport List from '../types/List.js'\nimport SVGNumber from '../types/SVGNumber.js'\n\nexport default class Element extends Dom {\n  constructor (node, attrs) {\n    super(node, attrs)\n\n    // initialize data object\n    this.dom = {}\n\n    // create circular reference\n    this.node.instance = this\n\n    if (node.hasAttribute('svgjs:data')) {\n      // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\n      this.setData(JSON.parse(node.getAttribute('svgjs:data')) || {})\n    }\n  }\n\n  // Move element by its center\n  center (x, y) {\n    return this.cx(x).cy(y)\n  }\n\n  // Move by center over x-axis\n  cx (x) {\n    return x == null\n      ? this.x() + this.width() / 2\n      : this.x(x - this.width() / 2)\n  }\n\n  // Move by center over y-axis\n  cy (y) {\n    return y == null\n      ? this.y() + this.height() / 2\n      : this.y(y - this.height() / 2)\n  }\n\n  // Get defs\n  defs () {\n    const root = this.root()\n    return root && root.defs()\n  }\n\n  // Relative move over x and y axes\n  dmove (x, y) {\n    return this.dx(x).dy(y)\n  }\n\n  // Relative move over x axis\n  dx (x = 0) {\n    return this.x(new SVGNumber(x).plus(this.x()))\n  }\n\n  // Relative move over y axis\n  dy (y = 0) {\n    return this.y(new SVGNumber(y).plus(this.y()))\n  }\n\n  getEventHolder () {\n    return this\n  }\n\n  // Set height of element\n  height (height) {\n    return this.attr('height', height)\n  }\n\n  // Move element to given x and y values\n  move (x, y) {\n    return this.x(x).y(y)\n  }\n\n  // return array of all ancestors of given type up to the root svg\n  parents (until = this.root()) {\n    const isSelector = typeof until === 'string'\n    if (!isSelector) {\n      until = makeInstance(until)\n    }\n    const parents = new List()\n    let parent = this\n\n    while (\n      (parent = parent.parent())\n      && parent.node !== globals.document\n      && parent.nodeName !== '#document-fragment') {\n\n      parents.push(parent)\n\n      if (!isSelector && (parent.node === until.node)) {\n        break\n      }\n      if (isSelector && parent.matches(until)) {\n        break\n      }\n      if (parent.node === this.root().node) {\n        // We worked our way to the root and didn't match `until`\n        return null\n      }\n    }\n\n    return parents\n  }\n\n  // Get referenced element form attribute value\n  reference (attr) {\n    attr = this.attr(attr)\n    if (!attr) return null\n\n    const m = (attr + '').match(reference)\n    return m ? makeInstance(m[1]) : null\n  }\n\n  // Get parent document\n  root () {\n    const p = this.parent(getClass(root))\n    return p && p.root()\n  }\n\n  // set given data to the elements data property\n  setData (o) {\n    this.dom = o\n    return this\n  }\n\n  // Set element size to given width and height\n  size (width, height) {\n    const p = proportionalSize(this, width, height)\n\n    return this\n      .width(new SVGNumber(p.width))\n      .height(new SVGNumber(p.height))\n  }\n\n  // Set width of element\n  width (width) {\n    return this.attr('width', width)\n  }\n\n  // write svgjs data to the dom\n  writeDataToDom () {\n    // remove previously set data\n    this.node.removeAttribute('svgjs:data')\n\n    if (Object.keys(this.dom).length) {\n      this.node.setAttribute('svgjs:data', JSON.stringify(this.dom)) // see #428\n    }\n\n    return super.writeDataToDom()\n  }\n\n  // Move over x-axis\n  x (x) {\n    return this.attr('x', x)\n  }\n\n  // Move over y-axis\n  y (y) {\n    return this.attr('y', y)\n  }\n}\n\nextend(Element, {\n  bbox, rbox, inside, point, ctm, screenCTM\n})\n\nregister(Element, 'Element')\n","import { registerMethods } from '../../utils/methods.js'\r\nimport Color from '../../types/Color.js'\r\nimport Element from '../../elements/Element.js'\r\nimport Matrix from '../../types/Matrix.js'\r\nimport Point from '../../types/Point.js'\r\nimport SVGNumber from '../../types/SVGNumber.js'\r\n\r\n// Define list of available attributes for stroke and fill\r\nconst sugar = {\r\n  stroke: [ 'color', 'width', 'opacity', 'linecap', 'linejoin', 'miterlimit', 'dasharray', 'dashoffset' ],\r\n  fill: [ 'color', 'opacity', 'rule' ],\r\n  prefix: function (t, a) {\r\n    return a === 'color' ? t : t + '-' + a\r\n  }\r\n}\r\n\r\n// Add sugar for fill and stroke\r\n;[ 'fill', 'stroke' ].forEach(function (m) {\r\n  const extension = {}\r\n  let i\r\n\r\n  extension[m] = function (o) {\r\n    if (typeof o === 'undefined') {\r\n      return this.attr(m)\r\n    }\r\n    if (typeof o === 'string' || o instanceof Color || Color.isRgb(o) || (o instanceof Element)) {\r\n      this.attr(m, o)\r\n    } else {\r\n      // set all attributes from sugar.fill and sugar.stroke list\r\n      for (i = sugar[m].length - 1; i >= 0; i--) {\r\n        if (o[sugar[m][i]] != null) {\r\n          this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]])\r\n        }\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  registerMethods([ 'Element', 'Runner' ], extension)\r\n})\r\n\r\nregisterMethods([ 'Element', 'Runner' ], {\r\n  // Let the user set the matrix directly\r\n  matrix: function (mat, b, c, d, e, f) {\r\n    // Act as a getter\r\n    if (mat == null) {\r\n      return new Matrix(this)\r\n    }\r\n\r\n    // Act as a setter, the user can pass a matrix or a set of numbers\r\n    return this.attr('transform', new Matrix(mat, b, c, d, e, f))\r\n  },\r\n\r\n  // Map rotation to transform\r\n  rotate: function (angle, cx, cy) {\r\n    return this.transform({ rotate: angle, ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  // Map skew to transform\r\n  skew: function (x, y, cx, cy) {\r\n    return arguments.length === 1 || arguments.length === 3\r\n      ? this.transform({ skew: x, ox: y, oy: cx }, true)\r\n      : this.transform({ skew: [ x, y ], ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  shear: function (lam, cx, cy) {\r\n    return this.transform({ shear: lam, ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  // Map scale to transform\r\n  scale: function (x, y, cx, cy) {\r\n    return arguments.length === 1 || arguments.length === 3\r\n      ? this.transform({ scale: x, ox: y, oy: cx }, true)\r\n      : this.transform({ scale: [ x, y ], ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  // Map translate to transform\r\n  translate: function (x, y) {\r\n    return this.transform({ translate: [ x, y ] }, true)\r\n  },\r\n\r\n  // Map relative translations to transform\r\n  relative: function (x, y) {\r\n    return this.transform({ relative: [ x, y ] }, true)\r\n  },\r\n\r\n  // Map flip to transform\r\n  flip: function (direction = 'both', origin = 'center') {\r\n    if ('xybothtrue'.indexOf(direction) === -1) {\r\n      origin = direction\r\n      direction = 'both'\r\n    }\r\n\r\n    return this.transform({ flip: direction, origin: origin }, true)\r\n  },\r\n\r\n  // Opacity\r\n  opacity: function (value) {\r\n    return this.attr('opacity', value)\r\n  }\r\n})\r\n\r\nregisterMethods('radius', {\r\n  // Add x and y radius\r\n  radius: function (x, y = x) {\r\n    const type = (this._element || this).type\r\n    return type === 'radialGradient'\r\n      ? this.attr('r', new SVGNumber(x))\r\n      : this.rx(x).ry(y)\r\n  }\r\n})\r\n\r\nregisterMethods('Path', {\r\n  // Get path length\r\n  length: function () {\r\n    return this.node.getTotalLength()\r\n  },\r\n  // Get point at length\r\n  pointAt: function (length) {\r\n    return new Point(this.node.getPointAtLength(length))\r\n  }\r\n})\r\n\r\nregisterMethods([ 'Element', 'Runner' ], {\r\n  // Set font\r\n  font: function (a, v) {\r\n    if (typeof a === 'object') {\r\n      for (v in a) this.font(v, a[v])\r\n      return this\r\n    }\r\n\r\n    return a === 'leading'\r\n      ? this.leading(v)\r\n      : a === 'anchor'\r\n        ? this.attr('text-anchor', v)\r\n        : a === 'size' || a === 'family' || a === 'weight' || a === 'stretch' || a === 'variant' || a === 'style'\r\n          ? this.attr('font-' + a, v)\r\n          : this.attr(a, v)\r\n  }\r\n})\r\n\r\n// Add events to elements\r\nconst methods = [ 'click',\r\n  'dblclick',\r\n  'mousedown',\r\n  'mouseup',\r\n  'mouseover',\r\n  'mouseout',\r\n  'mousemove',\r\n  'mouseenter',\r\n  'mouseleave',\r\n  'touchstart',\r\n  'touchmove',\r\n  'touchleave',\r\n  'touchend',\r\n  'touchcancel' ].reduce(function (last, event) {\r\n  // add event to Element\r\n  const fn = function (f) {\r\n    if (f === null) {\r\n      this.off(event)\r\n    } else {\r\n      this.on(event, f)\r\n    }\r\n    return this\r\n  }\r\n\r\n  last[event] = fn\r\n  return last\r\n}, {})\r\n\r\nregisterMethods('Element', methods)\r\n","import { getOrigin } from '../../utils/utils.js'\r\nimport { delimiter, transforms } from '../core/regex.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\nimport Matrix from '../../types/Matrix.js'\r\n\r\n// Reset all transformations\r\nexport function untransform () {\r\n  return this.attr('transform', null)\r\n}\r\n\r\n// merge the whole transformation chain into one matrix and returns it\r\nexport function matrixify () {\r\n  const matrix = (this.attr('transform') || '')\r\n    // split transformations\r\n    .split(transforms).slice(0, -1).map(function (str) {\r\n      // generate key => value pairs\r\n      const kv = str.trim().split('(')\r\n      return [ kv[0],\r\n        kv[1].split(delimiter)\r\n          .map(function (str) {\r\n            return parseFloat(str)\r\n          })\r\n      ]\r\n    })\r\n    .reverse()\r\n    // merge every transformation into one matrix\r\n    .reduce(function (matrix, transform) {\r\n      if (transform[0] === 'matrix') {\r\n        return matrix.lmultiply(Matrix.fromArray(transform[1]))\r\n      }\r\n      return matrix[transform[0]].apply(matrix, transform[1])\r\n    }, new Matrix())\r\n\r\n  return matrix\r\n}\r\n\r\n// add an element to another parent without changing the visual representation on the screen\r\nexport function toParent (parent, i) {\r\n  if (this === parent) return this\r\n  const ctm = this.screenCTM()\r\n  const pCtm = parent.screenCTM().inverse()\r\n\r\n  this.addTo(parent, i).untransform().transform(pCtm.multiply(ctm))\r\n\r\n  return this\r\n}\r\n\r\n// same as above with parent equals root-svg\r\nexport function toRoot (i) {\r\n  return this.toParent(this.root(), i)\r\n}\r\n\r\n// Add transformations\r\nexport function transform (o, relative) {\r\n  // Act as a getter if no object was passed\r\n  if (o == null || typeof o === 'string') {\r\n    const decomposed = new Matrix(this).decompose()\r\n    return o == null ? decomposed : decomposed[o]\r\n  }\r\n\r\n  if (!Matrix.isMatrixLike(o)) {\r\n    // Set the origin according to the defined transform\r\n    o = { ...o, origin: getOrigin(o, this) }\r\n  }\r\n\r\n  // The user can pass a boolean, an Element or an Matrix or nothing\r\n  const cleanRelative = relative === true ? this : (relative || false)\r\n  const result = new Matrix(cleanRelative).transform(o)\r\n  return this.attr('transform', result)\r\n}\r\n\r\nregisterMethods('Element', {\r\n  untransform, matrixify, toParent, toRoot, transform\r\n})\r\n","import { register } from '../utils/adopter.js'\r\nimport Element from './Element.js'\r\n\r\nexport default class Container extends Element {\r\n  flatten (parent = this, index) {\r\n    this.each(function () {\r\n      if (this instanceof Container) {\r\n        return this.flatten().ungroup()\r\n      }\r\n    })\r\n\r\n    return this\r\n  }\r\n\r\n  ungroup (parent = this.parent(), index = parent.index(this)) {\r\n    // when parent != this, we want append all elements to the end\r\n    index = index === -1 ? parent.children().length : index\r\n\r\n    this.each(function (i, children) {\r\n      // reverse each\r\n      return children[children.length - i - 1].toParent(parent, index)\r\n    })\r\n\r\n    return this.remove()\r\n  }\r\n}\r\n\r\nregister(Container, 'Container')\r\n","import { nodeOrNew, register } from '../utils/adopter.js'\r\nimport Container from './Container.js'\r\n\r\nexport default class Defs extends Container {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('defs', node), attrs)\r\n  }\r\n\r\n  flatten () {\r\n    return this\r\n  }\r\n\r\n  ungroup () {\r\n    return this\r\n  }\r\n}\r\n\r\nregister(Defs, 'Defs')\r\n","import { register } from '../utils/adopter.js'\r\nimport Element from './Element.js'\r\n\r\nexport default class Shape extends Element {}\r\n\r\nregister(Shape, 'Shape')\r\n","import SVGNumber from '../../types/SVGNumber.js'\r\n\r\n// Radius x value\r\nexport function rx (rx) {\r\n  return this.attr('rx', rx)\r\n}\r\n\r\n// Radius y value\r\nexport function ry (ry) {\r\n  return this.attr('ry', ry)\r\n}\r\n\r\n// Move over x-axis\r\nexport function x (x) {\r\n  return x == null\r\n    ? this.cx() - this.rx()\r\n    : this.cx(x + this.rx())\r\n}\r\n\r\n// Move over y-axis\r\nexport function y (y) {\r\n  return y == null\r\n    ? this.cy() - this.ry()\r\n    : this.cy(y + this.ry())\r\n}\r\n\r\n// Move by center over x-axis\r\nexport function cx (x) {\r\n  return this.attr('cx', x)\r\n}\r\n\r\n// Move by center over y-axis\r\nexport function cy (y) {\r\n  return this.attr('cy', y)\r\n}\r\n\r\n// Set width of element\r\nexport function width (width) {\r\n  return width == null\r\n    ? this.rx() * 2\r\n    : this.rx(new SVGNumber(width).divide(2))\r\n}\r\n\r\n// Set height of element\r\nexport function height (height) {\r\n  return height == null\r\n    ? this.ry() * 2\r\n    : this.ry(new SVGNumber(height).divide(2))\r\n}\r\n","import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { proportionalSize } from '../utils/utils.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Shape from './Shape.js'\r\nimport * as circled from '../modules/core/circled.js'\r\n\r\nexport default class Ellipse extends Shape {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('ellipse', node), attrs)\r\n  }\r\n\r\n  size (width, height) {\r\n    const p = proportionalSize(this, width, height)\r\n\r\n    return this\r\n      .rx(new SVGNumber(p.width).divide(2))\r\n      .ry(new SVGNumber(p.height).divide(2))\r\n  }\r\n}\r\n\r\nextend(Ellipse, circled)\r\n\r\nregisterMethods('Container', {\r\n  // Create an ellipse\r\n  ellipse: wrapWithAttrCheck(function (width = 0, height = width) {\r\n    return this.put(new Ellipse()).size(width, height).move(0, 0)\r\n  })\r\n})\r\n\r\nregister(Ellipse, 'Ellipse')\r\n","import Dom from './Dom.js'\nimport { globals } from '../utils/window.js'\nimport { register, create } from '../utils/adopter.js'\n\nclass Fragment extends Dom {\n  constructor (node = globals.document.createDocumentFragment()) {\n    super(node)\n  }\n\n  // Import / Export raw xml\n  xml (xmlOrFn, outerXML, ns) {\n    if (typeof xmlOrFn === 'boolean') {\n      ns = outerXML\n      outerXML = xmlOrFn\n      xmlOrFn = null\n    }\n\n    // because this is a fragment we have to put all elements into a wrapper first\n    // before we can get the innerXML from it\n    if (xmlOrFn == null || typeof xmlOrFn === 'function') {\n      const wrapper = new Dom(create('wrapper', ns))\n      wrapper.add(this.node.cloneNode(true))\n\n      return wrapper.xml(false, ns)\n    }\n\n    // Act as setter if we got a string\n    return super.xml(xmlOrFn, false, ns)\n  }\n\n}\n\nregister(Fragment, 'Fragment')\n\nexport default Fragment\n","import SVGNumber from '../../types/SVGNumber.js'\r\n\r\nexport function from (x, y) {\r\n  return (this._element || this).type === 'radialGradient'\r\n    ? this.attr({ fx: new SVGNumber(x), fy: new SVGNumber(y) })\r\n    : this.attr({ x1: new SVGNumber(x), y1: new SVGNumber(y) })\r\n}\r\n\r\nexport function to (x, y) {\r\n  return (this._element || this).type === 'radialGradient'\r\n    ? this.attr({ cx: new SVGNumber(x), cy: new SVGNumber(y) })\r\n    : this.attr({ x2: new SVGNumber(x), y2: new SVGNumber(y) })\r\n}\r\n","import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Box from '../types/Box.js'\r\nimport Container from './Container.js'\r\nimport baseFind from '../modules/core/selector.js'\r\nimport * as gradiented from '../modules/core/gradiented.js'\r\n\r\nexport default class Gradient extends Container {\r\n  constructor (type, attrs) {\r\n    super(\r\n      nodeOrNew(type + 'Gradient', typeof type === 'string' ? null : type),\r\n      attrs\r\n    )\r\n  }\r\n\r\n  // custom attr to handle transform\r\n  attr (a, b, c) {\r\n    if (a === 'transform') a = 'gradientTransform'\r\n    return super.attr(a, b, c)\r\n  }\r\n\r\n  bbox () {\r\n    return new Box()\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [fill*=\"' + this.id() + '\"]')\r\n  }\r\n\r\n  // Alias string conversion to fill\r\n  toString () {\r\n    return this.url()\r\n  }\r\n\r\n  // Update gradient\r\n  update (block) {\r\n    // remove all stops\r\n    this.clear()\r\n\r\n    // invoke passed block\r\n    if (typeof block === 'function') {\r\n      block.call(this, this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Return the fill id\r\n  url () {\r\n    return 'url(\"#' + this.id() + '\")'\r\n  }\r\n}\r\n\r\nextend(Gradient, gradiented)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create gradient element in defs\r\n    gradient (...args) {\r\n      return this.defs().gradient(...args)\r\n    }\r\n  },\r\n  // define gradient\r\n  Defs: {\r\n    gradient: wrapWithAttrCheck(function (type, block) {\r\n      return this.put(new Gradient(type)).update(block)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Gradient, 'Gradient')\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Box from '../types/Box.js'\r\nimport Container from './Container.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class Pattern extends Container {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('pattern', node), attrs)\r\n  }\r\n\r\n  // custom attr to handle transform\r\n  attr (a, b, c) {\r\n    if (a === 'transform') a = 'patternTransform'\r\n    return super.attr(a, b, c)\r\n  }\r\n\r\n  bbox () {\r\n    return new Box()\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [fill*=\"' + this.id() + '\"]')\r\n  }\r\n\r\n  // Alias string conversion to fill\r\n  toString () {\r\n    return this.url()\r\n  }\r\n\r\n  // Update pattern by rebuilding\r\n  update (block) {\r\n    // remove content\r\n    this.clear()\r\n\r\n    // invoke passed block\r\n    if (typeof block === 'function') {\r\n      block.call(this, this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Return the fill id\r\n  url () {\r\n    return 'url(\"#' + this.id() + '\")'\r\n  }\r\n\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create pattern element in defs\r\n    pattern (...args) {\r\n      return this.defs().pattern(...args)\r\n    }\r\n  },\r\n  Defs: {\r\n    pattern: wrapWithAttrCheck(function (width, height, block) {\r\n      return this.put(new Pattern()).update(block).attr({\r\n        x: 0,\r\n        y: 0,\r\n        width: width,\r\n        height: height,\r\n        patternUnits: 'userSpaceOnUse'\r\n      })\r\n    })\r\n  }\r\n})\r\n\r\nregister(Pattern, 'Pattern')\r\n","import { isImage } from '../modules/core/regex.js'\r\nimport { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { off, on } from '../modules/core/event.js'\r\nimport { registerAttrHook } from '../modules/core/attr.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Pattern from './Pattern.js'\r\nimport Shape from './Shape.js'\r\nimport { globals } from '../utils/window.js'\r\n\r\nexport default class Image extends Shape {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('image', node), attrs)\r\n  }\r\n\r\n  // (re)load image\r\n  load (url, callback) {\r\n    if (!url) return this\r\n\r\n    const img = new globals.window.Image()\r\n\r\n    on(img, 'load', function (e) {\r\n      const p = this.parent(Pattern)\r\n\r\n      // ensure image size\r\n      if (this.width() === 0 && this.height() === 0) {\r\n        this.size(img.width, img.height)\r\n      }\r\n\r\n      if (p instanceof Pattern) {\r\n        // ensure pattern size if not set\r\n        if (p.width() === 0 && p.height() === 0) {\r\n          p.size(this.width(), this.height())\r\n        }\r\n      }\r\n\r\n      if (typeof callback === 'function') {\r\n        callback.call(this, e)\r\n      }\r\n    }, this)\r\n\r\n    on(img, 'load error', function () {\r\n      // dont forget to unbind memory leaking events\r\n      off(img)\r\n    })\r\n\r\n    return this.attr('href', (img.src = url), xlink)\r\n  }\r\n}\r\n\r\nregisterAttrHook(function (attr, val, _this) {\r\n  // convert image fill and stroke to patterns\r\n  if (attr === 'fill' || attr === 'stroke') {\r\n    if (isImage.test(val)) {\r\n      val = _this.root().defs().image(val)\r\n    }\r\n  }\r\n\r\n  if (val instanceof Image) {\r\n    val = _this.root().defs().pattern(0, 0, (pattern) => {\r\n      pattern.add(val)\r\n    })\r\n  }\r\n\r\n  return val\r\n})\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // create image element, load image and set its size\r\n    image: wrapWithAttrCheck(function (source, callback) {\r\n      return this.put(new Image()).size(0, 0).load(source, callback)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Image, 'Image')\r\n","import { delimiter } from '../modules/core/regex.js'\r\nimport SVGArray from './SVGArray.js'\r\nimport Box from './Box.js'\r\nimport Matrix from './Matrix.js'\r\n\r\nexport default class PointArray extends SVGArray {\r\n  // Get bounding box of points\r\n  bbox () {\r\n    let maxX = -Infinity\r\n    let maxY = -Infinity\r\n    let minX = Infinity\r\n    let minY = Infinity\r\n    this.forEach(function (el) {\r\n      maxX = Math.max(el[0], maxX)\r\n      maxY = Math.max(el[1], maxY)\r\n      minX = Math.min(el[0], minX)\r\n      minY = Math.min(el[1], minY)\r\n    })\r\n    return new Box(minX, minY, maxX - minX, maxY - minY)\r\n  }\r\n\r\n  // Move point string\r\n  move (x, y) {\r\n    const box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    // move every point\r\n    if (!isNaN(x) && !isNaN(y)) {\r\n      for (let i = this.length - 1; i >= 0; i--) {\r\n        this[i] = [ this[i][0] + x, this[i][1] + y ]\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Parse point string and flat array\r\n  parse (array = [ 0, 0 ]) {\r\n    const points = []\r\n\r\n    // if it is an array, we flatten it and therefore clone it to 1 depths\r\n    if (array instanceof Array) {\r\n      array = Array.prototype.concat.apply([], array)\r\n    } else { // Else, it is considered as a string\r\n      // parse points\r\n      array = array.trim().split(delimiter).map(parseFloat)\r\n    }\r\n\r\n    // validate points - https://svgwg.org/svg2-draft/shapes.html#DataTypePoints\r\n    // Odd number of coordinates is an error. In such cases, drop the last odd coordinate.\r\n    if (array.length % 2 !== 0) array.pop()\r\n\r\n    // wrap points in two-tuples\r\n    for (let i = 0, len = array.length; i < len; i = i + 2) {\r\n      points.push([ array[i], array[i + 1] ])\r\n    }\r\n\r\n    return points\r\n  }\r\n\r\n  // Resize poly string\r\n  size (width, height) {\r\n    let i\r\n    const box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.length - 1; i >= 0; i--) {\r\n      if (box.width) this[i][0] = ((this[i][0] - box.x) * width) / box.width + box.x\r\n      if (box.height) this[i][1] = ((this[i][1] - box.y) * height) / box.height + box.y\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Convert array to line object\r\n  toLine () {\r\n    return {\r\n      x1: this[0][0],\r\n      y1: this[0][1],\r\n      x2: this[1][0],\r\n      y2: this[1][1]\r\n    }\r\n  }\r\n\r\n  // Convert array to string\r\n  toString () {\r\n    const array = []\r\n    // convert to a poly point string\r\n    for (let i = 0, il = this.length; i < il; i++) {\r\n      array.push(this[i].join(','))\r\n    }\r\n\r\n    return array.join(' ')\r\n  }\r\n\r\n  transform (m) {\r\n    return this.clone().transformO(m)\r\n  }\r\n\r\n  // transform points with matrix (similar to Point.transform)\r\n  transformO (m) {\r\n    if (!Matrix.isMatrixLike(m)) {\r\n      m = new Matrix(m)\r\n    }\r\n\r\n    for (let i = this.length; i--;) {\r\n      // Perform the matrix multiplication\r\n      const [ x, y ] = this[i]\r\n      this[i][0] = m.a * x + m.c * y + m.e\r\n      this[i][1] = m.b * x + m.d * y + m.f\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n}\r\n","import PointArray from '../../types/PointArray.js'\r\n\r\nexport const MorphArray = PointArray\r\n\r\n// Move by left top corner over x-axis\r\nexport function x (x) {\r\n  return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n}\r\n\r\n// Move by left top corner over y-axis\r\nexport function y (y) {\r\n  return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n}\r\n\r\n// Set width of element\r\nexport function width (width) {\r\n  const b = this.bbox()\r\n  return width == null ? b.width : this.size(width, b.height)\r\n}\r\n\r\n// Set height of element\r\nexport function height (height) {\r\n  const b = this.bbox()\r\n  return height == null ? b.height : this.size(b.width, height)\r\n}\r\n","import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { proportionalSize } from '../utils/utils.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PointArray from '../types/PointArray.js'\r\nimport Shape from './Shape.js'\r\nimport * as pointed from '../modules/core/pointed.js'\r\n\r\nexport default class Line extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('line', node), attrs)\r\n  }\r\n\r\n  // Get array\r\n  array () {\r\n    return new PointArray([\r\n      [ this.attr('x1'), this.attr('y1') ],\r\n      [ this.attr('x2'), this.attr('y2') ]\r\n    ])\r\n  }\r\n\r\n  // Move by left top corner\r\n  move (x, y) {\r\n    return this.attr(this.array().move(x, y).toLine())\r\n  }\r\n\r\n  // Overwrite native plot() method\r\n  plot (x1, y1, x2, y2) {\r\n    if (x1 == null) {\r\n      return this.array()\r\n    } else if (typeof y1 !== 'undefined') {\r\n      x1 = { x1, y1, x2, y2 }\r\n    } else {\r\n      x1 = new PointArray(x1).toLine()\r\n    }\r\n\r\n    return this.attr(x1)\r\n  }\r\n\r\n  // Set element size to given width and height\r\n  size (width, height) {\r\n    const p = proportionalSize(this, width, height)\r\n    return this.attr(this.array().size(p.width, p.height).toLine())\r\n  }\r\n}\r\n\r\nextend(Line, pointed)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a line element\r\n    line: wrapWithAttrCheck(function (...args) {\r\n      // make sure plot is called as a setter\r\n      // x1 is not necessarily a number, it can also be an array, a string and a PointArray\r\n      return Line.prototype.plot.apply(\r\n        this.put(new Line())\r\n        , args[0] != null ? args : [ 0, 0, 0, 0 ]\r\n      )\r\n    })\r\n  }\r\n})\r\n\r\nregister(Line, 'Line')\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\n\r\nexport default class Marker extends Container {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('marker', node), attrs)\r\n  }\r\n\r\n  // Set height of element\n  height (height) {\r\n    return this.attr('markerHeight', height)\r\n  }\n\n  orient (orient) {\r\n    return this.attr('orient', orient)\r\n  }\n\n  // Set marker refX and refY\n  ref (x, y) {\r\n    return this.attr('refX', x).attr('refY', y)\r\n  }\n\n  // Return the fill id\n  toString () {\r\n    return 'url(#' + this.id() + ')'\r\n  }\n\n  // Update marker\n  update (block) {\r\n    // remove all content\r\n    this.clear()\r\n\r\n    // invoke passed block\r\n    if (typeof block === 'function') {\r\n      block.call(this, this)\r\n    }\r\n\r\n    return this\r\n  }\n\n  // Set width of element\r\n  width (width) {\r\n    return this.attr('markerWidth', width)\r\n  }\r\n\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    marker (...args) {\r\n      // Create marker element in defs\r\n      return this.defs().marker(...args)\r\n    }\r\n  },\r\n  Defs: {\r\n    // Create marker\r\n    marker: wrapWithAttrCheck(function (width, height, block) {\r\n      // Set default viewbox to match the width and height, set ref to cx and cy and set orient to auto\r\n      return this.put(new Marker())\r\n        .size(width, height)\r\n        .ref(width / 2, height / 2)\r\n        .viewbox(0, 0, width, height)\r\n        .attr('orient', 'auto')\r\n        .update(block)\r\n    })\r\n  },\r\n  marker: {\r\n    // Create and attach markers\r\n    marker (marker, width, height, block) {\r\n      let attr = [ 'marker' ]\r\n\r\n      // Build attribute name\r\n      if (marker !== 'all') attr.push(marker)\r\n      attr = attr.join('-')\r\n\r\n      // Set marker attribute\r\n      marker = arguments[1] instanceof Marker\r\n        ? arguments[1]\r\n        : this.defs().marker(width, height, block)\r\n\r\n      return this.attr(attr, marker)\r\n    }\r\n  }\r\n})\r\n\r\nregister(Marker, 'Marker')\r\n","import { timeline } from '../modules/core/defaults.js'\r\nimport { extend } from '../utils/adopter.js'\r\n\r\n/***\r\nBase Class\r\n==========\r\nThe base stepper class that will be\r\n***/\r\n\r\nfunction makeSetterGetter (k, f) {\r\n  return function (v) {\r\n    if (v == null) return this[k]\r\n    this[k] = v\r\n    if (f) f.call(this)\r\n    return this\r\n  }\r\n}\r\n\r\nexport const easing = {\r\n  '-': function (pos) {\r\n    return pos\r\n  },\r\n  '<>': function (pos) {\r\n    return -Math.cos(pos * Math.PI) / 2 + 0.5\r\n  },\r\n  '>': function (pos) {\r\n    return Math.sin(pos * Math.PI / 2)\r\n  },\r\n  '<': function (pos) {\r\n    return -Math.cos(pos * Math.PI / 2) + 1\r\n  },\r\n  bezier: function (x1, y1, x2, y2) {\r\n    // see https://www.w3.org/TR/css-easing-1/#cubic-bezier-algo\r\n    return function (t) {\r\n      if (t < 0) {\r\n        if (x1 > 0) {\r\n          return y1 / x1 * t\r\n        } else if (x2 > 0) {\r\n          return y2 / x2 * t\r\n        } else {\r\n          return 0\r\n        }\r\n      } else if (t > 1) {\r\n        if (x2 < 1) {\r\n          return (1 - y2) / (1 - x2) * t + (y2 - x2) / (1 - x2)\r\n        } else if (x1 < 1) {\r\n          return (1 - y1) / (1 - x1) * t + (y1 - x1) / (1 - x1)\r\n        } else {\r\n          return 1\r\n        }\r\n      } else {\r\n        return 3 * t * (1 - t) ** 2 * y1 + 3 * t ** 2 * (1 - t) * y2 + t ** 3\r\n      }\r\n    }\r\n  },\r\n  // see https://www.w3.org/TR/css-easing-1/#step-timing-function-algo\r\n  steps: function (steps, stepPosition = 'end') {\r\n    // deal with \"jump-\" prefix\r\n    stepPosition = stepPosition.split('-').reverse()[0]\r\n\r\n    let jumps = steps\r\n    if (stepPosition === 'none') {\r\n      --jumps\r\n    } else if (stepPosition === 'both') {\r\n      ++jumps\r\n    }\r\n\r\n    // The beforeFlag is essentially useless\r\n    return (t, beforeFlag = false) => {\r\n      // Step is called currentStep in referenced url\r\n      let step = Math.floor(t * steps)\r\n      const jumping = (t * step) % 1 === 0\r\n\r\n      if (stepPosition === 'start' || stepPosition === 'both') {\r\n        ++step\r\n      }\r\n\r\n      if (beforeFlag && jumping) {\r\n        --step\r\n      }\r\n\r\n      if (t >= 0 && step < 0) {\r\n        step = 0\r\n      }\r\n\r\n      if (t <= 1 && step > jumps) {\r\n        step = jumps\r\n      }\r\n\r\n      return step / jumps\r\n    }\r\n  }\r\n}\r\n\r\nexport class Stepper {\r\n  done () {\r\n    return false\r\n  }\r\n}\r\n\r\n/***\r\nEasing Functions\r\n================\r\n***/\r\n\r\nexport class Ease extends Stepper {\r\n  constructor (fn = timeline.ease) {\r\n    super()\r\n    this.ease = easing[fn] || fn\r\n  }\r\n\r\n  step (from, to, pos) {\r\n    if (typeof from !== 'number') {\r\n      return pos < 1 ? from : to\r\n    }\r\n    return from + (to - from) * this.ease(pos)\r\n  }\r\n}\r\n\r\n/***\r\nController Types\r\n================\r\n***/\r\n\r\nexport class Controller extends Stepper {\r\n  constructor (fn) {\r\n    super()\r\n    this.stepper = fn\r\n  }\r\n\r\n  done (c) {\r\n    return c.done\r\n  }\n\n  step (current, target, dt, c) {\r\n    return this.stepper(current, target, dt, c)\r\n  }\r\n\r\n}\r\n\r\nfunction recalculate () {\r\n  // Apply the default parameters\r\n  const duration = (this._duration || 500) / 1000\r\n  const overshoot = this._overshoot || 0\r\n\r\n  // Calculate the PID natural response\r\n  const eps = 1e-10\r\n  const pi = Math.PI\r\n  const os = Math.log(overshoot / 100 + eps)\r\n  const zeta = -os / Math.sqrt(pi * pi + os * os)\r\n  const wn = 3.9 / (zeta * duration)\r\n\r\n  // Calculate the Spring values\r\n  this.d = 2 * zeta * wn\r\n  this.k = wn * wn\r\n}\r\n\r\nexport class Spring extends Controller {\r\n  constructor (duration = 500, overshoot = 0) {\r\n    super()\r\n    this.duration(duration)\r\n      .overshoot(overshoot)\r\n  }\r\n\r\n  step (current, target, dt, c) {\r\n    if (typeof current === 'string') return current\r\n    c.done = dt === Infinity\r\n    if (dt === Infinity) return target\r\n    if (dt === 0) return current\r\n\r\n    if (dt > 100) dt = 16\r\n\r\n    dt /= 1000\r\n\r\n    // Get the previous velocity\r\n    const velocity = c.velocity || 0\r\n\r\n    // Apply the control to get the new position and store it\r\n    const acceleration = -this.d * velocity - this.k * (current - target)\r\n    const newPosition = current\r\n      + velocity * dt\r\n      + acceleration * dt * dt / 2\r\n\r\n    // Store the velocity\r\n    c.velocity = velocity + acceleration * dt\r\n\r\n    // Figure out if we have converged, and if so, pass the value\r\n    c.done = Math.abs(target - newPosition) + Math.abs(velocity) < 0.002\r\n    return c.done ? target : newPosition\r\n  }\r\n}\r\n\r\nextend(Spring, {\r\n  duration: makeSetterGetter('_duration', recalculate),\r\n  overshoot: makeSetterGetter('_overshoot', recalculate)\r\n})\r\n\r\nexport class PID extends Controller {\r\n  constructor (p = 0.1, i = 0.01, d = 0, windup = 1000) {\r\n    super()\r\n    this.p(p).i(i).d(d).windup(windup)\r\n  }\r\n\r\n  step (current, target, dt, c) {\r\n    if (typeof current === 'string') return current\r\n    c.done = dt === Infinity\r\n\r\n    if (dt === Infinity) return target\r\n    if (dt === 0) return current\r\n\r\n    const p = target - current\r\n    let i = (c.integral || 0) + p * dt\r\n    const d = (p - (c.error || 0)) / dt\r\n    const windup = this._windup\r\n\r\n    // antiwindup\r\n    if (windup !== false) {\r\n      i = Math.max(-windup, Math.min(i, windup))\r\n    }\r\n\r\n    c.error = p\r\n    c.integral = i\r\n\r\n    c.done = Math.abs(p) < 0.001\r\n\r\n    return c.done ? target : current + (this.P * p + this.I * i + this.D * d)\r\n  }\r\n}\r\n\r\nextend(PID, {\r\n  windup: makeSetterGetter('_windup'),\r\n  p: makeSetterGetter('P'),\r\n  i: makeSetterGetter('I'),\r\n  d: makeSetterGetter('D')\r\n})\r\n","import { isPathLetter } from '../modules/core/regex.js'\r\nimport Point from '../types/Point.js'\r\n\r\nconst segmentParameters = { M: 2, L: 2, H: 1, V: 1, C: 6, S: 4, Q: 4, T: 2, A: 7, Z: 0 }\r\n\r\nconst pathHandlers = {\r\n  M: function (c, p, p0) {\r\n    p.x = p0.x = c[0]\r\n    p.y = p0.y = c[1]\r\n\r\n    return [ 'M', p.x, p.y ]\r\n  },\r\n  L: function (c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return [ 'L', c[0], c[1] ]\r\n  },\r\n  H: function (c, p) {\r\n    p.x = c[0]\r\n    return [ 'H', c[0] ]\r\n  },\r\n  V: function (c, p) {\r\n    p.y = c[0]\r\n    return [ 'V', c[0] ]\r\n  },\r\n  C: function (c, p) {\r\n    p.x = c[4]\r\n    p.y = c[5]\r\n    return [ 'C', c[0], c[1], c[2], c[3], c[4], c[5] ]\r\n  },\r\n  S: function (c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return [ 'S', c[0], c[1], c[2], c[3] ]\r\n  },\r\n  Q: function (c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return [ 'Q', c[0], c[1], c[2], c[3] ]\r\n  },\r\n  T: function (c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return [ 'T', c[0], c[1] ]\r\n  },\r\n  Z: function (c, p, p0) {\r\n    p.x = p0.x\r\n    p.y = p0.y\r\n    return [ 'Z' ]\r\n  },\r\n  A: function (c, p) {\r\n    p.x = c[5]\r\n    p.y = c[6]\r\n    return [ 'A', c[0], c[1], c[2], c[3], c[4], c[5], c[6] ]\r\n  }\r\n}\r\n\r\nconst mlhvqtcsaz = 'mlhvqtcsaz'.split('')\r\n\r\nfor (let i = 0, il = mlhvqtcsaz.length; i < il; ++i) {\r\n  pathHandlers[mlhvqtcsaz[i]] = (function (i) {\r\n    return function (c, p, p0) {\r\n      if (i === 'H') c[0] = c[0] + p.x\r\n      else if (i === 'V') c[0] = c[0] + p.y\r\n      else if (i === 'A') {\r\n        c[5] = c[5] + p.x\r\n        c[6] = c[6] + p.y\r\n      } else {\r\n        for (let j = 0, jl = c.length; j < jl; ++j) {\r\n          c[j] = c[j] + (j % 2 ? p.y : p.x)\r\n        }\r\n      }\r\n\r\n      return pathHandlers[i](c, p, p0)\r\n    }\r\n  })(mlhvqtcsaz[i].toUpperCase())\r\n}\r\n\r\nfunction makeAbsolut (parser) {\r\n  const command = parser.segment[0]\r\n  return pathHandlers[command](parser.segment.slice(1), parser.p, parser.p0)\r\n}\r\n\r\nfunction segmentComplete (parser) {\r\n  return parser.segment.length && parser.segment.length - 1 === segmentParameters[parser.segment[0].toUpperCase()]\r\n}\r\n\r\nfunction startNewSegment (parser, token) {\r\n  parser.inNumber && finalizeNumber(parser, false)\r\n  const pathLetter = isPathLetter.test(token)\r\n\r\n  if (pathLetter) {\r\n    parser.segment = [ token ]\r\n  } else {\r\n    const lastCommand = parser.lastCommand\r\n    const small = lastCommand.toLowerCase()\r\n    const isSmall = lastCommand === small\r\n    parser.segment = [ small === 'm' ? (isSmall ? 'l' : 'L') : lastCommand ]\r\n  }\r\n\r\n  parser.inSegment = true\r\n  parser.lastCommand = parser.segment[0]\r\n\r\n  return pathLetter\r\n}\r\n\r\nfunction finalizeNumber (parser, inNumber) {\r\n  if (!parser.inNumber) throw new Error('Parser Error')\r\n  parser.number && parser.segment.push(parseFloat(parser.number))\r\n  parser.inNumber = inNumber\r\n  parser.number = ''\r\n  parser.pointSeen = false\r\n  parser.hasExponent = false\r\n\r\n  if (segmentComplete(parser)) {\r\n    finalizeSegment(parser)\r\n  }\r\n}\r\n\r\nfunction finalizeSegment (parser) {\r\n  parser.inSegment = false\r\n  if (parser.absolute) {\r\n    parser.segment = makeAbsolut(parser)\r\n  }\r\n  parser.segments.push(parser.segment)\r\n}\r\n\r\nfunction isArcFlag (parser) {\r\n  if (!parser.segment.length) return false\r\n  const isArc = parser.segment[0].toUpperCase() === 'A'\r\n  const length = parser.segment.length\r\n\r\n  return isArc && (length === 4 || length === 5)\r\n}\r\n\r\nfunction isExponential (parser) {\r\n  return parser.lastToken.toUpperCase() === 'E'\r\n}\r\n\r\nexport function pathParser (d, toAbsolute = true) {\r\n\r\n  let index = 0\r\n  let token = ''\r\n  const parser = {\r\n    segment: [],\r\n    inNumber: false,\r\n    number: '',\r\n    lastToken: '',\r\n    inSegment: false,\r\n    segments: [],\r\n    pointSeen: false,\r\n    hasExponent: false,\r\n    absolute: toAbsolute,\r\n    p0: new Point(),\r\n    p: new Point()\r\n  }\r\n\r\n  while ((parser.lastToken = token, token = d.charAt(index++))) {\r\n    if (!parser.inSegment) {\r\n      if (startNewSegment(parser, token)) {\r\n        continue\r\n      }\r\n    }\r\n\r\n    if (token === '.') {\r\n      if (parser.pointSeen || parser.hasExponent) {\r\n        finalizeNumber(parser, false)\r\n        --index\r\n        continue\r\n      }\r\n      parser.inNumber = true\r\n      parser.pointSeen = true\r\n      parser.number += token\r\n      continue\r\n    }\r\n\r\n    if (!isNaN(parseInt(token))) {\r\n\r\n      if (parser.number === '0' || isArcFlag(parser)) {\r\n        parser.inNumber = true\r\n        parser.number = token\r\n        finalizeNumber(parser, true)\r\n        continue\r\n      }\r\n\r\n      parser.inNumber = true\r\n      parser.number += token\r\n      continue\r\n    }\r\n\r\n    if (token === ' ' || token === ',') {\r\n      if (parser.inNumber) {\r\n        finalizeNumber(parser, false)\r\n      }\r\n      continue\r\n    }\r\n\r\n    if (token === '-') {\r\n      if (parser.inNumber && !isExponential(parser)) {\r\n        finalizeNumber(parser, false)\r\n        --index\r\n        continue\r\n      }\r\n      parser.number += token\r\n      parser.inNumber = true\r\n      continue\r\n    }\r\n\r\n    if (token.toUpperCase() === 'E') {\r\n      parser.number += token\r\n      parser.hasExponent = true\r\n      continue\r\n    }\r\n\r\n    if (isPathLetter.test(token)) {\r\n      if (parser.inNumber) {\r\n        finalizeNumber(parser, false)\r\n      } else if (!segmentComplete(parser)) {\r\n        throw new Error('parser Error')\r\n      } else {\r\n        finalizeSegment(parser)\r\n      }\r\n      --index\r\n    }\r\n  }\r\n\r\n  if (parser.inNumber) {\r\n    finalizeNumber(parser, false)\r\n  }\r\n\r\n  if (parser.inSegment && segmentComplete(parser)) {\r\n    finalizeSegment(parser)\r\n  }\r\n\r\n  return parser.segments\r\n\r\n}\r\n","import SVGArray from './SVGArray.js'\r\nimport parser from '../modules/core/parser.js'\r\nimport Box from './Box.js'\r\nimport { pathParser } from '../utils/pathParser.js'\r\n\r\nfunction arrayToString (a) {\r\n  let s = ''\r\n  for (let i = 0, il = a.length; i < il; i++) {\r\n    s += a[i][0]\r\n\r\n    if (a[i][1] != null) {\r\n      s += a[i][1]\r\n\r\n      if (a[i][2] != null) {\r\n        s += ' '\r\n        s += a[i][2]\r\n\r\n        if (a[i][3] != null) {\r\n          s += ' '\r\n          s += a[i][3]\r\n          s += ' '\r\n          s += a[i][4]\r\n\r\n          if (a[i][5] != null) {\r\n            s += ' '\r\n            s += a[i][5]\r\n            s += ' '\r\n            s += a[i][6]\r\n\r\n            if (a[i][7] != null) {\r\n              s += ' '\r\n              s += a[i][7]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return s + ' '\r\n}\r\n\r\nexport default class PathArray extends SVGArray {\r\n  // Get bounding box of path\r\n  bbox () {\r\n    parser().path.setAttribute('d', this.toString())\r\n    return new Box(parser.nodes.path.getBBox())\r\n  }\r\n\r\n  // Move path string\r\n  move (x, y) {\r\n    // get bounding box of current situation\r\n    const box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    if (!isNaN(x) && !isNaN(y)) {\r\n      // move every point\r\n      for (let l, i = this.length - 1; i >= 0; i--) {\r\n        l = this[i][0]\r\n\r\n        if (l === 'M' || l === 'L' || l === 'T') {\r\n          this[i][1] += x\r\n          this[i][2] += y\r\n        } else if (l === 'H') {\r\n          this[i][1] += x\r\n        } else if (l === 'V') {\r\n          this[i][1] += y\r\n        } else if (l === 'C' || l === 'S' || l === 'Q') {\r\n          this[i][1] += x\r\n          this[i][2] += y\r\n          this[i][3] += x\r\n          this[i][4] += y\r\n\r\n          if (l === 'C') {\r\n            this[i][5] += x\r\n            this[i][6] += y\r\n          }\r\n        } else if (l === 'A') {\r\n          this[i][6] += x\r\n          this[i][7] += y\r\n        }\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Absolutize and parse path to array\r\n  parse (d = 'M0 0') {\r\n    if (Array.isArray(d)) {\r\n      d = Array.prototype.concat.apply([], d).toString()\r\n    }\r\n\r\n    return pathParser(d)\r\n  }\r\n\r\n  // Resize path string\r\n  size (width, height) {\r\n    // get bounding box of current situation\r\n    const box = this.bbox()\r\n    let i, l\r\n\r\n    // If the box width or height is 0 then we ignore\r\n    // transformations on the respective axis\r\n    box.width = box.width === 0 ? 1 : box.width\r\n    box.height = box.height === 0 ? 1 : box.height\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.length - 1; i >= 0; i--) {\r\n      l = this[i][0]\r\n\r\n      if (l === 'M' || l === 'L' || l === 'T') {\r\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\r\n        this[i][2] = ((this[i][2] - box.y) * height) / box.height + box.y\r\n      } else if (l === 'H') {\r\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\r\n      } else if (l === 'V') {\r\n        this[i][1] = ((this[i][1] - box.y) * height) / box.height + box.y\r\n      } else if (l === 'C' || l === 'S' || l === 'Q') {\r\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\r\n        this[i][2] = ((this[i][2] - box.y) * height) / box.height + box.y\r\n        this[i][3] = ((this[i][3] - box.x) * width) / box.width + box.x\r\n        this[i][4] = ((this[i][4] - box.y) * height) / box.height + box.y\r\n\r\n        if (l === 'C') {\r\n          this[i][5] = ((this[i][5] - box.x) * width) / box.width + box.x\r\n          this[i][6] = ((this[i][6] - box.y) * height) / box.height + box.y\r\n        }\r\n      } else if (l === 'A') {\r\n        // resize radii\r\n        this[i][1] = (this[i][1] * width) / box.width\r\n        this[i][2] = (this[i][2] * height) / box.height\r\n\r\n        // move position values\r\n        this[i][6] = ((this[i][6] - box.x) * width) / box.width + box.x\r\n        this[i][7] = ((this[i][7] - box.y) * height) / box.height + box.y\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Convert array to string\r\n  toString () {\r\n    return arrayToString(this)\r\n  }\r\n\r\n}\r\n","import { Ease } from './Controller.js'\nimport {\n  delimiter,\n  numberAndUnit,\n  isPathLetter\n} from '../modules/core/regex.js'\nimport { extend } from '../utils/adopter.js'\nimport Color from '../types/Color.js'\nimport PathArray from '../types/PathArray.js'\nimport SVGArray from '../types/SVGArray.js'\nimport SVGNumber from '../types/SVGNumber.js'\n\nconst getClassForType = (value) => {\n  const type = typeof value\n\n  if (type === 'number') {\n    return SVGNumber\n  } else if (type === 'string') {\n    if (Color.isColor(value)) {\n      return Color\n    } else if (delimiter.test(value)) {\n      return isPathLetter.test(value)\n        ? PathArray\n        : SVGArray\n    } else if (numberAndUnit.test(value)) {\n      return SVGNumber\n    } else {\n      return NonMorphable\n    }\n  } else if (morphableTypes.indexOf(value.constructor) > -1) {\n    return value.constructor\n  } else if (Array.isArray(value)) {\n    return SVGArray\n  } else if (type === 'object') {\n    return ObjectBag\n  } else {\n    return NonMorphable\n  }\n}\n\nexport default class Morphable {\n  constructor (stepper) {\n    this._stepper = stepper || new Ease('-')\n\n    this._from = null\n    this._to = null\n    this._type = null\n    this._context = null\n    this._morphObj = null\n  }\n\n  at (pos) {\n    return this._morphObj.morph(this._from, this._to, pos, this._stepper, this._context)\n\n  }\n\n  done () {\n    const complete = this._context\n      .map(this._stepper.done)\n      .reduce(function (last, curr) {\n        return last && curr\n      }, true)\n    return complete\n  }\n\n  from (val) {\n    if (val == null) {\n      return this._from\n    }\n\n    this._from = this._set(val)\n    return this\n  }\n\n  stepper (stepper) {\n    if (stepper == null) return this._stepper\n    this._stepper = stepper\n    return this\n  }\n\n  to (val) {\n    if (val == null) {\n      return this._to\n    }\n\n    this._to = this._set(val)\n    return this\n  }\n\n  type (type) {\n    // getter\n    if (type == null) {\n      return this._type\n    }\n\n    // setter\n    this._type = type\n    return this\n  }\n\n  _set (value) {\n    if (!this._type) {\n      this.type(getClassForType(value))\n    }\n\n    let result = (new this._type(value))\n    if (this._type === Color) {\n      result = this._to\n        ? result[this._to[4]]()\n        : this._from\n          ? result[this._from[4]]()\n          : result\n    }\n\n    if (this._type === ObjectBag) {\n      result = this._to\n        ? result.align(this._to)\n        : this._from\n          ? result.align(this._from)\n          : result\n    }\n\n    result = result.toConsumable()\n\n    this._morphObj = this._morphObj || new this._type()\n    this._context = this._context\n      || Array.apply(null, Array(result.length))\n        .map(Object)\n        .map(function (o) {\n          o.done = true\n          return o\n        })\n    return result\n  }\n\n}\n\nexport class NonMorphable {\n  constructor (...args) {\n    this.init(...args)\n  }\n\n  init (val) {\n    val = Array.isArray(val) ? val[0] : val\n    this.value = val\n    return this\n  }\n\n  toArray () {\n    return [ this.value ]\n  }\n\n  valueOf () {\n    return this.value\n  }\n\n}\n\nexport class TransformBag {\n  constructor (...args) {\n    this.init(...args)\n  }\n\n  init (obj) {\n    if (Array.isArray(obj)) {\n      obj = {\n        scaleX: obj[0],\n        scaleY: obj[1],\n        shear: obj[2],\n        rotate: obj[3],\n        translateX: obj[4],\n        translateY: obj[5],\n        originX: obj[6],\n        originY: obj[7]\n      }\n    }\n\n    Object.assign(this, TransformBag.defaults, obj)\n    return this\n  }\n\n  toArray () {\n    const v = this\n\n    return [\n      v.scaleX,\n      v.scaleY,\n      v.shear,\n      v.rotate,\n      v.translateX,\n      v.translateY,\n      v.originX,\n      v.originY\n    ]\n  }\n}\n\nTransformBag.defaults = {\n  scaleX: 1,\n  scaleY: 1,\n  shear: 0,\n  rotate: 0,\n  translateX: 0,\n  translateY: 0,\n  originX: 0,\n  originY: 0\n}\n\nconst sortByKey = (a, b) => {\n  return (a[0] < b[0] ? -1 : (a[0] > b[0] ? 1 : 0))\n}\n\nexport class ObjectBag {\n  constructor (...args) {\n    this.init(...args)\n  }\n\n  align (other) {\n    const values = this.values\n    for (let i = 0, il = values.length; i < il; ++i) {\n\n      // If the type is the same we only need to check if the color is in the correct format\n      if (values[i + 1] === other[i + 1]) {\n        if (values[i + 1] === Color && other[i + 7] !== values[i + 7]) {\n          const space = other[i + 7]\n          const color = new Color(this.values.splice(i + 3, 5))[space]().toArray()\n          this.values.splice(i + 3, 0, ...color)\n        }\n\n        i += values[i + 2] + 2\n        continue\n      }\n\n      if (!other[i + 1]) {\n        return this\n      }\n\n      // The types differ, so we overwrite the new type with the old one\n      // And initialize it with the types default (e.g. black for color or 0 for number)\n      const defaultObject = new (other[i + 1])().toArray()\n\n      // Than we fix the values array\n      const toDelete = (values[i + 2]) + 3\n\n      values.splice(i, toDelete, other[i], other[i + 1], other[i + 2], ...defaultObject)\n\n      i += values[i + 2] + 2\n    }\n    return this\n  }\n\n  init (objOrArr) {\n    this.values = []\n\n    if (Array.isArray(objOrArr)) {\n      this.values = objOrArr.slice()\n      return\n    }\n\n    objOrArr = objOrArr || {}\n    const entries = []\n\n    for (const i in objOrArr) {\n      const Type = getClassForType(objOrArr[i])\n      const val = new Type(objOrArr[i]).toArray()\n      entries.push([ i, Type, val.length, ...val ])\n    }\n\n    entries.sort(sortByKey)\n\n    this.values = entries.reduce((last, curr) => last.concat(curr), [])\n    return this\n  }\n\n  toArray () {\n    return this.values\n  }\n\n  valueOf () {\n    const obj = {}\n    const arr = this.values\n\n    // for (var i = 0, len = arr.length; i < len; i += 2) {\n    while (arr.length) {\n      const key = arr.shift()\n      const Type = arr.shift()\n      const num = arr.shift()\n      const values = arr.splice(0, num)\n      obj[key] = new Type(values)// .valueOf()\n    }\n\n    return obj\n  }\n\n}\n\nconst morphableTypes = [\n  NonMorphable,\n  TransformBag,\n  ObjectBag\n]\n\nexport function registerMorphableType (type = []) {\n  morphableTypes.push(...[].concat(type))\n}\n\nexport function makeMorphable () {\n  extend(morphableTypes, {\n    to (val) {\n      return new Morphable()\n        .type(this.constructor)\n        .from(this.toArray())// this.valueOf())\n        .to(val)\n    },\n    fromArray (arr) {\n      this.init(arr)\n      return this\n    },\n    toConsumable () {\n      return this.toArray()\n    },\n    morph (from, to, pos, stepper, context) {\n      const mapper = function (i, index) {\n        return stepper.step(i, to[index], pos, context[index], context)\n      }\n\n      return this.fromArray(from.map(mapper))\n    }\n  })\n}\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { proportionalSize } from '../utils/utils.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PathArray from '../types/PathArray.js'\r\nimport Shape from './Shape.js'\r\n\r\nexport default class Path extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('path', node), attrs)\r\n  }\r\n\r\n  // Get array\r\n  array () {\r\n    return this._array || (this._array = new PathArray(this.attr('d')))\r\n  }\r\n\r\n  // Clear array cache\r\n  clear () {\r\n    delete this._array\r\n    return this\r\n  }\r\n\r\n  // Set height of element\r\n  height (height) {\r\n    return height == null ? this.bbox().height : this.size(this.bbox().width, height)\r\n  }\r\n\r\n  // Move by left top corner\r\n  move (x, y) {\r\n    return this.attr('d', this.array().move(x, y))\r\n  }\r\n\r\n  // Plot new path\r\n  plot (d) {\r\n    return (d == null)\n      ? this.array()\r\n      : this.clear().attr('d', typeof d === 'string' ? d : (this._array = new PathArray(d)))\r\n  }\r\n\r\n  // Set element size to given width and height\r\n  size (width, height) {\r\n    const p = proportionalSize(this, width, height)\r\n    return this.attr('d', this.array().size(p.width, p.height))\r\n  }\r\n\r\n  // Set width of element\r\n  width (width) {\r\n    return width == null ? this.bbox().width : this.size(width, this.bbox().height)\r\n  }\r\n\r\n  // Move by left top corner over x-axis\r\n  x (x) {\r\n    return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n  }\r\n\r\n  // Move by left top corner over y-axis\r\n  y (y) {\r\n    return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n  }\r\n\r\n}\r\n\r\n// Define morphable array\r\nPath.prototype.MorphArray = PathArray\r\n\r\n// Add parent method\r\nregisterMethods({\r\n  Container: {\r\n    // Create a wrapped path element\r\n    path: wrapWithAttrCheck(function (d) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new Path()).plot(d || new PathArray())\r\n    })\r\n  }\r\n})\r\n\r\nregister(Path, 'Path')\r\n","import { proportionalSize } from '../../utils/utils.js'\r\nimport PointArray from '../../types/PointArray.js'\r\n\r\n// Get array\r\nexport function array () {\r\n  return this._array || (this._array = new PointArray(this.attr('points')))\r\n}\r\n\r\n// Clear array cache\r\nexport function clear () {\r\n  delete this._array\r\n  return this\r\n}\r\n\r\n// Move by left top corner\r\nexport function move (x, y) {\r\n  return this.attr('points', this.array().move(x, y))\r\n}\r\n\r\n// Plot new path\r\nexport function plot (p) {\r\n  return (p == null)\n    ? this.array()\r\n    : this.clear().attr('points', typeof p === 'string'\n      ? p\r\n      : (this._array = new PointArray(p)))\r\n}\r\n\r\n// Set element size to given width and height\r\nexport function size (width, height) {\r\n  const p = proportionalSize(this, width, height)\r\n  return this.attr('points', this.array().size(p.width, p.height))\r\n}\r\n","import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PointArray from '../types/PointArray.js'\r\nimport Shape from './Shape.js'\r\nimport * as pointed from '../modules/core/pointed.js'\r\nimport * as poly from '../modules/core/poly.js'\r\n\r\nexport default class Polygon extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('polygon', node), attrs)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a wrapped polygon element\r\n    polygon: wrapWithAttrCheck(function (p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new Polygon()).plot(p || new PointArray())\r\n    })\r\n  }\r\n})\r\n\r\nextend(Polygon, pointed)\r\nextend(Polygon, poly)\r\nregister(Polygon, 'Polygon')\r\n","import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PointArray from '../types/PointArray.js'\r\nimport Shape from './Shape.js'\r\nimport * as pointed from '../modules/core/pointed.js'\r\nimport * as poly from '../modules/core/poly.js'\r\n\r\nexport default class Polyline extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('polyline', node), attrs)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a wrapped polygon element\r\n    polyline: wrapWithAttrCheck(function (p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new Polyline()).plot(p || new PointArray())\r\n    })\r\n  }\r\n})\r\n\r\nextend(Polyline, pointed)\r\nextend(Polyline, poly)\r\nregister(Polyline, 'Polyline')\r\n","import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { rx, ry } from '../modules/core/circled.js'\r\nimport Shape from './Shape.js'\r\n\r\nexport default class Rect extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('rect', node), attrs)\r\n  }\r\n}\r\n\r\nextend(Rect, { rx, ry })\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a rect element\r\n    rect: wrapWithAttrCheck(function (width, height) {\r\n      return this.put(new Rect()).size(width, height)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Rect, 'Rect')\r\n","export default class Queue {\r\n  constructor () {\r\n    this._first = null\r\n    this._last = null\r\n  }\r\n\r\n  // Shows us the first item in the list\n  first () {\r\n    return this._first && this._first.value\r\n  }\n\n  // Shows us the last item in the list\n  last () {\r\n    return this._last && this._last.value\r\n  }\n\n  push (value) {\r\n    // An item stores an id and the provided value\r\n    const item = typeof value.next !== 'undefined' ? value : { value: value, next: null, prev: null }\r\n\r\n    // Deal with the queue being empty or populated\r\n    if (this._last) {\r\n      item.prev = this._last\r\n      this._last.next = item\r\n      this._last = item\r\n    } else {\r\n      this._last = item\r\n      this._first = item\r\n    }\r\n\r\n    // Return the current item\r\n    return item\r\n  }\r\n\n  // Removes the item that was returned from the push\n  remove (item) {\r\n    // Relink the previous item\r\n    if (item.prev) item.prev.next = item.next\r\n    if (item.next) item.next.prev = item.prev\r\n    if (item === this._last) this._last = item.prev\r\n    if (item === this._first) this._first = item.next\r\n\r\n    // Invalidate item\r\n    item.prev = null\r\n    item.next = null\r\n  }\n\n  shift () {\r\n    // Check if we have a value\r\n    const remove = this._first\r\n    if (!remove) return null\r\n\r\n    // If we do, remove it and relink things\r\n    this._first = remove.next\r\n    if (this._first) this._first.prev = null\r\n    this._last = this._first ? this._last : null\r\n    return remove.value\r\n  }\r\n\r\n}\r\n","import { globals } from '../utils/window.js'\r\nimport Queue from './Queue.js'\r\n\r\nconst Animator = {\r\n  nextDraw: null,\r\n  frames: new Queue(),\r\n  timeouts: new Queue(),\r\n  immediates: new Queue(),\r\n  timer: () => globals.window.performance || globals.window.Date,\r\n  transforms: [],\r\n\r\n  frame (fn) {\r\n    // Store the node\r\n    const node = Animator.frames.push({ run: fn })\r\n\r\n    // Request an animation frame if we don't have one\r\n    if (Animator.nextDraw === null) {\r\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\r\n    }\r\n\r\n    // Return the node so we can remove it easily\r\n    return node\r\n  },\r\n\r\n  timeout (fn, delay) {\r\n    delay = delay || 0\r\n\r\n    // Work out when the event should fire\r\n    const time = Animator.timer().now() + delay\r\n\r\n    // Add the timeout to the end of the queue\r\n    const node = Animator.timeouts.push({ run: fn, time: time })\r\n\r\n    // Request another animation frame if we need one\r\n    if (Animator.nextDraw === null) {\r\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\r\n    }\r\n\r\n    return node\r\n  },\r\n\r\n  immediate (fn) {\r\n    // Add the immediate fn to the end of the queue\r\n    const node = Animator.immediates.push(fn)\r\n    // Request another animation frame if we need one\r\n    if (Animator.nextDraw === null) {\r\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\r\n    }\r\n\r\n    return node\r\n  },\r\n\r\n  cancelFrame (node) {\r\n    node != null && Animator.frames.remove(node)\r\n  },\r\n\r\n  clearTimeout (node) {\r\n    node != null && Animator.timeouts.remove(node)\r\n  },\r\n\r\n  cancelImmediate (node) {\r\n    node != null && Animator.immediates.remove(node)\r\n  },\r\n\r\n  _draw (now) {\r\n    // Run all the timeouts we can run, if they are not ready yet, add them\r\n    // to the end of the queue immediately! (bad timeouts!!! [sarcasm])\r\n    let nextTimeout = null\r\n    const lastTimeout = Animator.timeouts.last()\r\n    while ((nextTimeout = Animator.timeouts.shift())) {\r\n      // Run the timeout if its time, or push it to the end\r\n      if (now >= nextTimeout.time) {\r\n        nextTimeout.run()\r\n      } else {\r\n        Animator.timeouts.push(nextTimeout)\r\n      }\r\n\r\n      // If we hit the last item, we should stop shifting out more items\r\n      if (nextTimeout === lastTimeout) break\r\n    }\r\n\r\n    // Run all of the animation frames\r\n    let nextFrame = null\r\n    const lastFrame = Animator.frames.last()\r\n    while ((nextFrame !== lastFrame) && (nextFrame = Animator.frames.shift())) {\r\n      nextFrame.run(now)\r\n    }\r\n\r\n    let nextImmediate = null\r\n    while ((nextImmediate = Animator.immediates.shift())) {\r\n      nextImmediate()\r\n    }\r\n\r\n    // If we have remaining timeouts or frames, draw until we don't anymore\r\n    Animator.nextDraw = Animator.timeouts.first() || Animator.frames.first()\r\n      ? globals.window.requestAnimationFrame(Animator._draw)\r\n      : null\r\n  }\r\n}\r\n\r\nexport default Animator\r\n","import { globals } from '../utils/window.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Animator from './Animator.js'\r\nimport EventTarget from '../types/EventTarget.js'\r\n\r\nconst makeSchedule = function (runnerInfo) {\r\n  const start = runnerInfo.start\r\n  const duration = runnerInfo.runner.duration()\r\n  const end = start + duration\r\n  return { start: start, duration: duration, end: end, runner: runnerInfo.runner }\r\n}\r\n\r\nconst defaultSource = function () {\r\n  const w = globals.window\r\n  return (w.performance || w.Date).now()\r\n}\r\n\r\nexport default class Timeline extends EventTarget {\r\n  // Construct a new timeline on the given element\r\n  constructor (timeSource = defaultSource) {\r\n    super()\r\n\r\n    this._timeSource = timeSource\r\n\r\n    // Store the timing variables\r\n    this._startTime = 0\r\n    this._speed = 1.0\r\n\r\n    // Determines how long a runner is hold in memory. Can be a dt or true/false\r\n    this._persist = 0\r\n\r\n    // Keep track of the running animations and their starting parameters\r\n    this._nextFrame = null\r\n    this._paused = true\r\n    this._runners = []\r\n    this._runnerIds = []\r\n    this._lastRunnerId = -1\r\n    this._time = 0\r\n    this._lastSourceTime = 0\r\n    this._lastStepTime = 0\r\n\r\n    // Make sure that step is always called in class context\r\n    this._step = this._stepFn.bind(this, false)\r\n    this._stepImmediate = this._stepFn.bind(this, true)\r\n  }\r\n\r\n  active () {\r\n    return !!this._nextFrame\r\n  }\r\n\r\n  finish () {\r\n    // Go to end and pause\r\n    this.time(this.getEndTimeOfTimeline() + 1)\r\n    return this.pause()\r\n  }\r\n\r\n  // Calculates the end of the timeline\r\n  getEndTime () {\r\n    const lastRunnerInfo = this.getLastRunnerInfo()\r\n    const lastDuration = lastRunnerInfo ? lastRunnerInfo.runner.duration() : 0\r\n    const lastStartTime = lastRunnerInfo ? lastRunnerInfo.start : this._time\r\n    return lastStartTime + lastDuration\r\n  }\r\n\r\n  getEndTimeOfTimeline () {\r\n    const endTimes = this._runners.map((i) => i.start + i.runner.duration())\r\n    return Math.max(0, ...endTimes)\r\n  }\r\n\r\n  getLastRunnerInfo () {\r\n    return this.getRunnerInfoById(this._lastRunnerId)\r\n  }\r\n\r\n  getRunnerInfoById (id) {\r\n    return this._runners[this._runnerIds.indexOf(id)] || null\r\n  }\r\n\r\n  pause () {\r\n    this._paused = true\r\n    return this._continue()\r\n  }\r\n\r\n  persist (dtOrForever) {\r\n    if (dtOrForever == null) return this._persist\r\n    this._persist = dtOrForever\r\n    return this\r\n  }\r\n\r\n  play () {\r\n    // Now make sure we are not paused and continue the animation\r\n    this._paused = false\r\n    return this.updateTime()._continue()\r\n  }\r\n\r\n  reverse (yes) {\r\n    const currentSpeed = this.speed()\r\n    if (yes == null) return this.speed(-currentSpeed)\r\n\r\n    const positive = Math.abs(currentSpeed)\r\n    return this.speed(yes ? -positive : positive)\r\n  }\r\n\r\n  // schedules a runner on the timeline\r\n  schedule (runner, delay, when) {\r\n    if (runner == null) {\r\n      return this._runners.map(makeSchedule)\r\n    }\r\n\r\n    // The start time for the next animation can either be given explicitly,\r\n    // derived from the current timeline time or it can be relative to the\r\n    // last start time to chain animations directly\r\n\r\n    let absoluteStartTime = 0\r\n    const endTime = this.getEndTime()\r\n    delay = delay || 0\r\n\r\n    // Work out when to start the animation\r\n    if (when == null || when === 'last' || when === 'after') {\r\n      // Take the last time and increment\r\n      absoluteStartTime = endTime\r\n    } else if (when === 'absolute' || when === 'start') {\r\n      absoluteStartTime = delay\r\n      delay = 0\r\n    } else if (when === 'now') {\r\n      absoluteStartTime = this._time\r\n    } else if (when === 'relative') {\r\n      const runnerInfo = this.getRunnerInfoById(runner.id)\r\n      if (runnerInfo) {\r\n        absoluteStartTime = runnerInfo.start + delay\r\n        delay = 0\r\n      }\r\n    } else if (when === 'with-last') {\r\n      const lastRunnerInfo = this.getLastRunnerInfo()\r\n      const lastStartTime = lastRunnerInfo ? lastRunnerInfo.start : this._time\r\n      absoluteStartTime = lastStartTime\r\n    } else {\r\n      throw new Error('Invalid value for the \"when\" parameter')\r\n    }\r\n\r\n    // Manage runner\r\n    runner.unschedule()\r\n    runner.timeline(this)\r\n\r\n    const persist = runner.persist()\r\n    const runnerInfo = {\r\n      persist: persist === null ? this._persist : persist,\r\n      start: absoluteStartTime + delay,\r\n      runner\r\n    }\r\n\r\n    this._lastRunnerId = runner.id\r\n\r\n    this._runners.push(runnerInfo)\r\n    this._runners.sort((a, b) => a.start - b.start)\r\n    this._runnerIds = this._runners.map(info => info.runner.id)\r\n\r\n    this.updateTime()._continue()\r\n    return this\r\n  }\r\n\r\n  seek (dt) {\r\n    return this.time(this._time + dt)\r\n  }\r\n\r\n  source (fn) {\r\n    if (fn == null) return this._timeSource\r\n    this._timeSource = fn\r\n    return this\r\n  }\r\n\r\n  speed (speed) {\r\n    if (speed == null) return this._speed\r\n    this._speed = speed\r\n    return this\r\n  }\r\n\r\n  stop () {\r\n    // Go to start and pause\r\n    this.time(0)\r\n    return this.pause()\r\n  }\r\n\r\n  time (time) {\r\n    if (time == null) return this._time\r\n    this._time = time\r\n    return this._continue(true)\r\n  }\r\n\r\n  // Remove the runner from this timeline\r\n  unschedule (runner) {\r\n    const index = this._runnerIds.indexOf(runner.id)\r\n    if (index < 0) return this\r\n\r\n    this._runners.splice(index, 1)\r\n    this._runnerIds.splice(index, 1)\r\n\r\n    runner.timeline(null)\r\n    return this\r\n  }\r\n\r\n  // Makes sure, that after pausing the time doesn't jump\r\n  updateTime () {\r\n    if (!this.active()) {\r\n      this._lastSourceTime = this._timeSource()\r\n    }\r\n    return this\r\n  }\r\n\r\n  // Checks if we are running and continues the animation\r\n  _continue (immediateStep = false) {\r\n    Animator.cancelFrame(this._nextFrame)\r\n    this._nextFrame = null\r\n\r\n    if (immediateStep) return this._stepImmediate()\r\n    if (this._paused) return this\r\n\r\n    this._nextFrame = Animator.frame(this._step)\r\n    return this\r\n  }\r\n\r\n  _stepFn (immediateStep = false) {\r\n    // Get the time delta from the last time and update the time\r\n    const time = this._timeSource()\r\n    let dtSource = time - this._lastSourceTime\r\n\r\n    if (immediateStep) dtSource = 0\r\n\r\n    const dtTime = this._speed * dtSource + (this._time - this._lastStepTime)\r\n    this._lastSourceTime = time\r\n\r\n    // Only update the time if we use the timeSource.\r\n    // Otherwise use the current time\r\n    if (!immediateStep) {\r\n      // Update the time\r\n      this._time += dtTime\r\n      this._time = this._time < 0 ? 0 : this._time\r\n    }\r\n    this._lastStepTime = this._time\r\n    this.fire('time', this._time)\r\n\r\n    // This is for the case that the timeline was seeked so that the time\r\n    // is now before the startTime of the runner. Thats why we need to set\r\n    // the runner to position 0\r\n\r\n    // FIXME:\r\n    // However, reseting in insertion order leads to bugs. Considering the case,\r\n    // where 2 runners change the same attribute but in different times,\r\n    // reseting both of them will lead to the case where the later defined\r\n    // runner always wins the reset even if the other runner started earlier\r\n    // and therefore should win the attribute battle\r\n    // this can be solved by reseting them backwards\r\n    for (let k = this._runners.length; k--;) {\r\n      // Get and run the current runner and ignore it if its inactive\r\n      const runnerInfo = this._runners[k]\r\n      const runner = runnerInfo.runner\r\n\r\n      // Make sure that we give the actual difference\r\n      // between runner start time and now\r\n      const dtToStart = this._time - runnerInfo.start\r\n\r\n      // Dont run runner if not started yet\r\n      // and try to reset it\r\n      if (dtToStart <= 0) {\r\n        runner.reset()\r\n      }\r\n    }\r\n\r\n    // Run all of the runners directly\r\n    let runnersLeft = false\r\n    for (let i = 0, len = this._runners.length; i < len; i++) {\r\n      // Get and run the current runner and ignore it if its inactive\r\n      const runnerInfo = this._runners[i]\r\n      const runner = runnerInfo.runner\r\n      let dt = dtTime\r\n\r\n      // Make sure that we give the actual difference\r\n      // between runner start time and now\r\n      const dtToStart = this._time - runnerInfo.start\r\n\r\n      // Dont run runner if not started yet\r\n      if (dtToStart <= 0) {\r\n        runnersLeft = true\r\n        continue\r\n      } else if (dtToStart < dt) {\r\n        // Adjust dt to make sure that animation is on point\r\n        dt = dtToStart\r\n      }\r\n\r\n      if (!runner.active()) continue\r\n\r\n      // If this runner is still going, signal that we need another animation\r\n      // frame, otherwise, remove the completed runner\r\n      const finished = runner.step(dt).done\r\n      if (!finished) {\r\n        runnersLeft = true\r\n        // continue\r\n      } else if (runnerInfo.persist !== true) {\r\n        // runner is finished. And runner might get removed\r\n        const endTime = runner.duration() - runner.time() + this._time\r\n\r\n        if (endTime + runnerInfo.persist < this._time) {\r\n          // Delete runner and correct index\r\n          runner.unschedule()\r\n          --i\r\n          --len\r\n        }\r\n      }\r\n    }\r\n\r\n    // Basically: we continue when there are runners right from us in time\r\n    // when -->, and when runners are left from us when <--\r\n    if ((runnersLeft && !(this._speed < 0 && this._time === 0)) || (this._runnerIds.length && this._speed < 0 && this._time > 0)) {\r\n      this._continue()\r\n    } else {\r\n      this.pause()\r\n      this.fire('finished')\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n}\r\n\r\nregisterMethods({\r\n  Element: {\r\n    timeline: function (timeline) {\r\n      if (timeline == null) {\r\n        this._timeline = (this._timeline || new Timeline())\r\n        return this._timeline\r\n      } else {\r\n        this._timeline = timeline\r\n        return this\r\n      }\r\n    }\r\n  }\r\n})\r\n","import { Controller, Ease, Stepper } from './Controller.js'\r\nimport { extend, register } from '../utils/adopter.js'\r\nimport { from, to } from '../modules/core/gradiented.js'\r\nimport { getOrigin } from '../utils/utils.js'\r\nimport { noop, timeline } from '../modules/core/defaults.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { rx, ry } from '../modules/core/circled.js'\r\nimport Animator from './Animator.js'\r\nimport Box from '../types/Box.js'\r\nimport EventTarget from '../types/EventTarget.js'\r\nimport Matrix from '../types/Matrix.js'\r\nimport Morphable, { TransformBag, ObjectBag } from './Morphable.js'\r\nimport Point from '../types/Point.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Timeline from './Timeline.js'\r\n\r\nexport default class Runner extends EventTarget {\r\n  constructor (options) {\r\n    super()\r\n\r\n    // Store a unique id on the runner, so that we can identify it later\r\n    this.id = Runner.id++\r\n\r\n    // Ensure a default value\r\n    options = options == null\r\n      ? timeline.duration\r\n      : options\r\n\r\n    // Ensure that we get a controller\r\n    options = typeof options === 'function'\r\n      ? new Controller(options)\r\n      : options\r\n\r\n    // Declare all of the variables\r\n    this._element = null\r\n    this._timeline = null\r\n    this.done = false\r\n    this._queue = []\r\n\r\n    // Work out the stepper and the duration\r\n    this._duration = typeof options === 'number' && options\r\n    this._isDeclarative = options instanceof Controller\r\n    this._stepper = this._isDeclarative ? options : new Ease()\r\n\r\n    // We copy the current values from the timeline because they can change\r\n    this._history = {}\r\n\r\n    // Store the state of the runner\r\n    this.enabled = true\r\n    this._time = 0\r\n    this._lastTime = 0\r\n\r\n    // At creation, the runner is in reseted state\r\n    this._reseted = true\r\n\r\n    // Save transforms applied to this runner\r\n    this.transforms = new Matrix()\r\n    this.transformId = 1\r\n\r\n    // Looping variables\r\n    this._haveReversed = false\r\n    this._reverse = false\r\n    this._loopsDone = 0\r\n    this._swing = false\r\n    this._wait = 0\r\n    this._times = 1\r\n\r\n    this._frameId = null\r\n\r\n    // Stores how long a runner is stored after beeing done\r\n    this._persist = this._isDeclarative ? true : null\r\n  }\r\n\r\n  static sanitise (duration, delay, when) {\r\n    // Initialise the default parameters\r\n    let times = 1\r\n    let swing = false\r\n    let wait = 0\r\n    duration = duration || timeline.duration\r\n    delay = delay || timeline.delay\r\n    when = when || 'last'\r\n\r\n    // If we have an object, unpack the values\r\n    if (typeof duration === 'object' && !(duration instanceof Stepper)) {\r\n      delay = duration.delay || delay\r\n      when = duration.when || when\r\n      swing = duration.swing || swing\r\n      times = duration.times || times\r\n      wait = duration.wait || wait\r\n      duration = duration.duration || timeline.duration\r\n    }\r\n\r\n    return {\r\n      duration: duration,\r\n      delay: delay,\r\n      swing: swing,\r\n      times: times,\r\n      wait: wait,\r\n      when: when\r\n    }\r\n  }\r\n\r\n  active (enabled) {\r\n    if (enabled == null) return this.enabled\r\n    this.enabled = enabled\r\n    return this\r\n  }\r\n\r\n  /*\r\n  Private Methods\r\n  ===============\r\n  Methods that shouldn't be used externally\r\n  */\r\n  addTransform (transform, index) {\r\n    this.transforms.lmultiplyO(transform)\r\n    return this\r\n  }\r\n\r\n  after (fn) {\r\n    return this.on('finished', fn)\r\n  }\r\n\r\n  animate (duration, delay, when) {\r\n    const o = Runner.sanitise(duration, delay, when)\r\n    const runner = new Runner(o.duration)\r\n    if (this._timeline) runner.timeline(this._timeline)\r\n    if (this._element) runner.element(this._element)\r\n    return runner.loop(o).schedule(o.delay, o.when)\r\n  }\r\n\r\n  clearTransform () {\r\n    this.transforms = new Matrix()\r\n    return this\r\n  }\r\n\r\n  // TODO: Keep track of all transformations so that deletion is faster\r\n  clearTransformsFromQueue () {\r\n    if (!this.done || !this._timeline || !this._timeline._runnerIds.includes(this.id)) {\r\n      this._queue = this._queue.filter((item) => {\r\n        return !item.isTransform\r\n      })\r\n    }\r\n  }\r\n\r\n  delay (delay) {\r\n    return this.animate(0, delay)\r\n  }\r\n\r\n  duration () {\r\n    return this._times * (this._wait + this._duration) - this._wait\r\n  }\r\n\r\n  during (fn) {\r\n    return this.queue(null, fn)\r\n  }\r\n\r\n  ease (fn) {\r\n    this._stepper = new Ease(fn)\r\n    return this\r\n  }\r\n  /*\r\n  Runner Definitions\r\n  ==================\r\n  These methods help us define the runtime behaviour of the Runner or they\r\n  help us make new runners from the current runner\r\n  */\r\n\r\n  element (element) {\r\n    if (element == null) return this._element\r\n    this._element = element\r\n    element._prepareRunner()\r\n    return this\r\n  }\r\n\r\n  finish () {\r\n    return this.step(Infinity)\r\n  }\r\n\r\n  loop (times, swing, wait) {\r\n    // Deal with the user passing in an object\r\n    if (typeof times === 'object') {\r\n      swing = times.swing\r\n      wait = times.wait\r\n      times = times.times\r\n    }\r\n\r\n    // Sanitise the values and store them\r\n    this._times = times || Infinity\r\n    this._swing = swing || false\r\n    this._wait = wait || 0\r\n\r\n    // Allow true to be passed\r\n    if (this._times === true) { this._times = Infinity }\r\n\r\n    return this\r\n  }\r\n\r\n  loops (p) {\r\n    const loopDuration = this._duration + this._wait\r\n    if (p == null) {\r\n      const loopsDone = Math.floor(this._time / loopDuration)\r\n      const relativeTime = (this._time - loopsDone * loopDuration)\r\n      const position = relativeTime / this._duration\r\n      return Math.min(loopsDone + position, this._times)\r\n    }\r\n    const whole = Math.floor(p)\r\n    const partial = p % 1\r\n    const time = loopDuration * whole + this._duration * partial\r\n    return this.time(time)\r\n  }\r\n\r\n  persist (dtOrForever) {\r\n    if (dtOrForever == null) return this._persist\r\n    this._persist = dtOrForever\r\n    return this\r\n  }\r\n\r\n  position (p) {\r\n    // Get all of the variables we need\r\n    const x = this._time\r\n    const d = this._duration\r\n    const w = this._wait\r\n    const t = this._times\r\n    const s = this._swing\r\n    const r = this._reverse\r\n    let position\r\n\r\n    if (p == null) {\r\n      /*\r\n      This function converts a time to a position in the range [0, 1]\r\n      The full explanation can be found in this desmos demonstration\r\n        https://www.desmos.com/calculator/u4fbavgche\r\n      The logic is slightly simplified here because we can use booleans\r\n      */\r\n\r\n      // Figure out the value without thinking about the start or end time\r\n      const f = function (x) {\r\n        const swinging = s * Math.floor(x % (2 * (w + d)) / (w + d))\r\n        const backwards = (swinging && !r) || (!swinging && r)\r\n        const uncliped = Math.pow(-1, backwards) * (x % (w + d)) / d + backwards\r\n        const clipped = Math.max(Math.min(uncliped, 1), 0)\r\n        return clipped\r\n      }\r\n\r\n      // Figure out the value by incorporating the start time\r\n      const endTime = t * (w + d) - w\r\n      position = x <= 0\r\n        ? Math.round(f(1e-5))\r\n        : x < endTime\r\n          ? f(x)\r\n          : Math.round(f(endTime - 1e-5))\r\n      return position\r\n    }\r\n\r\n    // Work out the loops done and add the position to the loops done\r\n    const loopsDone = Math.floor(this.loops())\r\n    const swingForward = s && (loopsDone % 2 === 0)\r\n    const forwards = (swingForward && !r) || (r && swingForward)\r\n    position = loopsDone + (forwards ? p : 1 - p)\r\n    return this.loops(position)\r\n  }\r\n\r\n  progress (p) {\r\n    if (p == null) {\r\n      return Math.min(1, this._time / this.duration())\r\n    }\r\n    return this.time(p * this.duration())\r\n  }\r\n\r\n  /*\r\n  Basic Functionality\r\n  ===================\r\n  These methods allow us to attach basic functions to the runner directly\r\n  */\r\n  queue (initFn, runFn, retargetFn, isTransform) {\r\n    this._queue.push({\r\n      initialiser: initFn || noop,\r\n      runner: runFn || noop,\r\n      retarget: retargetFn,\r\n      isTransform: isTransform,\r\n      initialised: false,\r\n      finished: false\r\n    })\r\n    const timeline = this.timeline()\r\n    timeline && this.timeline()._continue()\r\n    return this\r\n  }\r\n\r\n  reset () {\r\n    if (this._reseted) return this\r\n    this.time(0)\r\n    this._reseted = true\r\n    return this\r\n  }\r\n\r\n  reverse (reverse) {\r\n    this._reverse = reverse == null ? !this._reverse : reverse\r\n    return this\r\n  }\r\n\r\n  schedule (timeline, delay, when) {\r\n    // The user doesn't need to pass a timeline if we already have one\r\n    if (!(timeline instanceof Timeline)) {\r\n      when = delay\r\n      delay = timeline\r\n      timeline = this.timeline()\r\n    }\r\n\r\n    // If there is no timeline, yell at the user...\r\n    if (!timeline) {\r\n      throw Error('Runner cannot be scheduled without timeline')\r\n    }\r\n\r\n    // Schedule the runner on the timeline provided\r\n    timeline.schedule(this, delay, when)\r\n    return this\r\n  }\r\n\r\n  step (dt) {\r\n    // If we are inactive, this stepper just gets skipped\r\n    if (!this.enabled) return this\r\n\r\n    // Update the time and get the new position\r\n    dt = dt == null ? 16 : dt\r\n    this._time += dt\r\n    const position = this.position()\r\n\r\n    // Figure out if we need to run the stepper in this frame\r\n    const running = this._lastPosition !== position && this._time >= 0\r\n    this._lastPosition = position\r\n\r\n    // Figure out if we just started\r\n    const duration = this.duration()\r\n    const justStarted = this._lastTime <= 0 && this._time > 0\r\n    const justFinished = this._lastTime < duration && this._time >= duration\r\n\r\n    this._lastTime = this._time\r\n    if (justStarted) {\r\n      this.fire('start', this)\r\n    }\r\n\r\n    // Work out if the runner is finished set the done flag here so animations\r\n    // know, that they are running in the last step (this is good for\r\n    // transformations which can be merged)\r\n    const declarative = this._isDeclarative\r\n    this.done = !declarative && !justFinished && this._time >= duration\r\n\r\n    // Runner is running. So its not in reseted state anymore\r\n    this._reseted = false\r\n\r\n    let converged = false\r\n    // Call initialise and the run function\r\n    if (running || declarative) {\r\n      this._initialise(running)\r\n\r\n      // clear the transforms on this runner so they dont get added again and again\r\n      this.transforms = new Matrix()\r\n      converged = this._run(declarative ? dt : position)\r\n\r\n      this.fire('step', this)\r\n    }\r\n    // correct the done flag here\r\n    // declaritive animations itself know when they converged\r\n    this.done = this.done || (converged && declarative)\r\n    if (justFinished) {\r\n      this.fire('finished', this)\r\n    }\r\n    return this\r\n  }\r\n\r\n  /*\r\n  Runner animation methods\r\n  ========================\r\n  Control how the animation plays\r\n  */\r\n  time (time) {\r\n    if (time == null) {\r\n      return this._time\r\n    }\r\n    const dt = time - this._time\r\n    this.step(dt)\r\n    return this\r\n  }\r\n\r\n  timeline (timeline) {\r\n    // check explicitly for undefined so we can set the timeline to null\r\n    if (typeof timeline === 'undefined') return this._timeline\r\n    this._timeline = timeline\r\n    return this\r\n  }\r\n\r\n  unschedule () {\r\n    const timeline = this.timeline()\r\n    timeline && timeline.unschedule(this)\r\n    return this\r\n  }\r\n\r\n  // Run each initialise function in the runner if required\r\n  _initialise (running) {\r\n    // If we aren't running, we shouldn't initialise when not declarative\r\n    if (!running && !this._isDeclarative) return\r\n\r\n    // Loop through all of the initialisers\r\n    for (let i = 0, len = this._queue.length; i < len; ++i) {\r\n      // Get the current initialiser\r\n      const current = this._queue[i]\r\n\r\n      // Determine whether we need to initialise\r\n      const needsIt = this._isDeclarative || (!current.initialised && running)\r\n      running = !current.finished\r\n\r\n      // Call the initialiser if we need to\r\n      if (needsIt && running) {\r\n        current.initialiser.call(this)\r\n        current.initialised = true\r\n      }\r\n    }\r\n  }\r\n\r\n  // Save a morpher to the morpher list so that we can retarget it later\r\n  _rememberMorpher (method, morpher) {\r\n    this._history[method] = {\r\n      morpher: morpher,\r\n      caller: this._queue[this._queue.length - 1]\r\n    }\r\n\r\n    // We have to resume the timeline in case a controller\r\n    // is already done without being ever run\r\n    // This can happen when e.g. this is done:\r\n    //    anim = el.animate(new SVG.Spring)\r\n    // and later\r\n    //    anim.move(...)\r\n    if (this._isDeclarative) {\r\n      const timeline = this.timeline()\r\n      timeline && timeline.play()\r\n    }\r\n  }\r\n\r\n  // Try to set the target for a morpher if the morpher exists, otherwise\r\n  // Run each run function for the position or dt given\r\n  _run (positionOrDt) {\r\n    // Run all of the _queue directly\r\n    let allfinished = true\r\n    for (let i = 0, len = this._queue.length; i < len; ++i) {\r\n      // Get the current function to run\r\n      const current = this._queue[i]\r\n\r\n      // Run the function if its not finished, we keep track of the finished\r\n      // flag for the sake of declarative _queue\r\n      const converged = current.runner.call(this, positionOrDt)\r\n      current.finished = current.finished || (converged === true)\r\n      allfinished = allfinished && current.finished\r\n    }\r\n\r\n    // We report when all of the constructors are finished\r\n    return allfinished\r\n  }\r\n\r\n  // do nothing and return false\r\n  _tryRetarget (method, target, extra) {\r\n    if (this._history[method]) {\r\n      // if the last method wasnt even initialised, throw it away\r\n      if (!this._history[method].caller.initialised) {\r\n        const index = this._queue.indexOf(this._history[method].caller)\r\n        this._queue.splice(index, 1)\r\n        return false\r\n      }\r\n\r\n      // for the case of transformations, we use the special retarget function\r\n      // which has access to the outer scope\r\n      if (this._history[method].caller.retarget) {\r\n        this._history[method].caller.retarget.call(this, target, extra)\r\n        // for everything else a simple morpher change is sufficient\r\n      } else {\r\n        this._history[method].morpher.to(target)\r\n      }\r\n\r\n      this._history[method].caller.finished = false\r\n      const timeline = this.timeline()\r\n      timeline && timeline.play()\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n}\r\n\r\nRunner.id = 0\r\n\r\nexport class FakeRunner {\r\n  constructor (transforms = new Matrix(), id = -1, done = true) {\r\n    this.transforms = transforms\r\n    this.id = id\r\n    this.done = done\r\n  }\r\n\r\n  clearTransformsFromQueue () { }\r\n}\r\n\r\nextend([ Runner, FakeRunner ], {\r\n  mergeWith (runner) {\r\n    return new FakeRunner(\r\n      runner.transforms.lmultiply(this.transforms),\r\n      runner.id\r\n    )\r\n  }\r\n})\r\n\r\n// FakeRunner.emptyRunner = new FakeRunner()\r\n\r\nconst lmultiply = (last, curr) => last.lmultiplyO(curr)\r\nconst getRunnerTransform = (runner) => runner.transforms\r\n\r\nfunction mergeTransforms () {\r\n  // Find the matrix to apply to the element and apply it\r\n  const runners = this._transformationRunners.runners\r\n  const netTransform = runners\r\n    .map(getRunnerTransform)\r\n    .reduce(lmultiply, new Matrix())\r\n\r\n  this.transform(netTransform)\r\n\r\n  this._transformationRunners.merge()\r\n\r\n  if (this._transformationRunners.length() === 1) {\r\n    this._frameId = null\r\n  }\r\n}\r\n\r\nexport class RunnerArray {\r\n  constructor () {\r\n    this.runners = []\r\n    this.ids = []\r\n  }\r\n\r\n  add (runner) {\r\n    if (this.runners.includes(runner)) return\r\n    const id = runner.id + 1\r\n\r\n    this.runners.push(runner)\r\n    this.ids.push(id)\r\n\r\n    return this\r\n  }\r\n\r\n  clearBefore (id) {\r\n    const deleteCnt = this.ids.indexOf(id + 1) || 1\r\n    this.ids.splice(0, deleteCnt, 0)\r\n    this.runners.splice(0, deleteCnt, new FakeRunner())\r\n      .forEach((r) => r.clearTransformsFromQueue())\r\n    return this\r\n  }\r\n\r\n  edit (id, newRunner) {\r\n    const index = this.ids.indexOf(id + 1)\r\n    this.ids.splice(index, 1, id + 1)\r\n    this.runners.splice(index, 1, newRunner)\r\n    return this\r\n  }\r\n\r\n  getByID (id) {\r\n    return this.runners[this.ids.indexOf(id + 1)]\r\n  }\r\n\r\n  length () {\r\n    return this.ids.length\r\n  }\r\n\r\n  merge () {\r\n    let lastRunner = null\r\n    for (let i = 0; i < this.runners.length; ++i) {\r\n      const runner = this.runners[i]\r\n\r\n      const condition = lastRunner\r\n        && runner.done && lastRunner.done\r\n        // don't merge runner when persisted on timeline\r\n        && (!runner._timeline || !runner._timeline._runnerIds.includes(runner.id))\r\n        && (!lastRunner._timeline || !lastRunner._timeline._runnerIds.includes(lastRunner.id))\r\n\r\n      if (condition) {\r\n        // the +1 happens in the function\r\n        this.remove(runner.id)\r\n        const newRunner = runner.mergeWith(lastRunner)\r\n        this.edit(lastRunner.id, newRunner)\r\n        lastRunner = newRunner\r\n        --i\r\n      } else {\r\n        lastRunner = runner\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  remove (id) {\r\n    const index = this.ids.indexOf(id + 1)\r\n    this.ids.splice(index, 1)\r\n    this.runners.splice(index, 1)\r\n    return this\r\n  }\r\n\r\n}\r\n\r\nregisterMethods({\r\n  Element: {\r\n    animate (duration, delay, when) {\r\n      const o = Runner.sanitise(duration, delay, when)\r\n      const timeline = this.timeline()\r\n      return new Runner(o.duration)\r\n        .loop(o)\r\n        .element(this)\r\n        .timeline(timeline.play())\r\n        .schedule(o.delay, o.when)\r\n    },\r\n\r\n    delay (by, when) {\r\n      return this.animate(0, by, when)\r\n    },\r\n\r\n    // this function searches for all runners on the element and deletes the ones\r\n    // which run before the current one. This is because absolute transformations\r\n    // overwfrite anything anyway so there is no need to waste time computing\r\n    // other runners\r\n    _clearTransformRunnersBefore (currentRunner) {\r\n      this._transformationRunners.clearBefore(currentRunner.id)\r\n    },\r\n\r\n    _currentTransform (current) {\r\n      return this._transformationRunners.runners\r\n        // we need the equal sign here to make sure, that also transformations\r\n        // on the same runner which execute before the current transformation are\r\n        // taken into account\r\n        .filter((runner) => runner.id <= current.id)\r\n        .map(getRunnerTransform)\r\n        .reduce(lmultiply, new Matrix())\r\n    },\r\n\r\n    _addRunner (runner) {\r\n      this._transformationRunners.add(runner)\r\n\r\n      // Make sure that the runner merge is executed at the very end of\r\n      // all Animator functions. Thats why we use immediate here to execute\r\n      // the merge right after all frames are run\r\n      Animator.cancelImmediate(this._frameId)\r\n      this._frameId = Animator.immediate(mergeTransforms.bind(this))\r\n    },\r\n\r\n    _prepareRunner () {\r\n      if (this._frameId == null) {\r\n        this._transformationRunners = new RunnerArray()\r\n          .add(new FakeRunner(new Matrix(this)))\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\n// Will output the elements from array A that are not in the array B\r\nconst difference = (a, b) => a.filter(x => !b.includes(x))\r\n\r\nextend(Runner, {\r\n  attr (a, v) {\r\n    return this.styleAttr('attr', a, v)\r\n  },\r\n\r\n  // Add animatable styles\r\n  css (s, v) {\r\n    return this.styleAttr('css', s, v)\r\n  },\r\n\r\n  styleAttr (type, nameOrAttrs, val) {\r\n    if (typeof nameOrAttrs === 'string') {\r\n      return this.styleAttr(type, { [nameOrAttrs]: val })\r\n    }\r\n\r\n    let attrs = nameOrAttrs\r\n    if (this._tryRetarget(type, attrs)) return this\r\n\r\n    let morpher = new Morphable(this._stepper).to(attrs)\r\n    let keys = Object.keys(attrs)\r\n\r\n    this.queue(function () {\r\n      morpher = morpher.from(this.element()[type](keys))\r\n    }, function (pos) {\r\n      this.element()[type](morpher.at(pos).valueOf())\r\n      return morpher.done()\r\n    }, function (newToAttrs) {\r\n\r\n      // Check if any new keys were added\r\n      const newKeys = Object.keys(newToAttrs)\r\n      const differences = difference(newKeys, keys)\r\n\r\n      // If their are new keys, initialize them and add them to morpher\r\n      if (differences.length) {\r\n        // Get the values\r\n        const addedFromAttrs = this.element()[type](differences)\r\n\r\n        // Get the already initialized values\r\n        const oldFromAttrs = new ObjectBag(morpher.from()).valueOf()\r\n\r\n        // Merge old and new\r\n        Object.assign(oldFromAttrs, addedFromAttrs)\r\n        morpher.from(oldFromAttrs)\r\n      }\r\n\r\n      // Get the object from the morpher\r\n      const oldToAttrs = new ObjectBag(morpher.to()).valueOf()\r\n\r\n      // Merge in new attributes\r\n      Object.assign(oldToAttrs, newToAttrs)\r\n\r\n      // Change morpher target\r\n      morpher.to(oldToAttrs)\r\n\r\n      // Make sure that we save the work we did so we don't need it to do again\r\n      keys = newKeys\r\n      attrs = newToAttrs\r\n    })\r\n\r\n    this._rememberMorpher(type, morpher)\r\n    return this\r\n  },\r\n\r\n  zoom (level, point) {\r\n    if (this._tryRetarget('zoom', level, point)) return this\r\n\r\n    let morpher = new Morphable(this._stepper).to(new SVGNumber(level))\r\n\r\n    this.queue(function () {\r\n      morpher = morpher.from(this.element().zoom())\r\n    }, function (pos) {\r\n      this.element().zoom(morpher.at(pos), point)\r\n      return morpher.done()\r\n    }, function (newLevel, newPoint) {\r\n      point = newPoint\r\n      morpher.to(newLevel)\r\n    })\r\n\r\n    this._rememberMorpher('zoom', morpher)\r\n    return this\r\n  },\r\n\r\n  /**\r\n   ** absolute transformations\r\n   **/\r\n\r\n  //\r\n  // M v -----|-----(D M v = F v)------|----->  T v\r\n  //\r\n  // 1. define the final state (T) and decompose it (once)\r\n  //    t = [tx, ty, the, lam, sy, sx]\r\n  // 2. on every frame: pull the current state of all previous transforms\r\n  //    (M - m can change)\r\n  //   and then write this as m = [tx0, ty0, the0, lam0, sy0, sx0]\r\n  // 3. Find the interpolated matrix F(pos) = m + pos * (t - m)\r\n  //   - Note F(0) = M\r\n  //   - Note F(1) = T\r\n  // 4. Now you get the delta matrix as a result: D = F * inv(M)\r\n\r\n  transform (transforms, relative, affine) {\r\n    // If we have a declarative function, we should retarget it if possible\r\n    relative = transforms.relative || relative\r\n    if (this._isDeclarative && !relative && this._tryRetarget('transform', transforms)) {\r\n      return this\r\n    }\r\n\r\n    // Parse the parameters\r\n    const isMatrix = Matrix.isMatrixLike(transforms)\r\n    affine = transforms.affine != null\r\n      ? transforms.affine\r\n      : (affine != null ? affine : !isMatrix)\r\n\r\n    // Create a morepher and set its type\r\n    const morpher = new Morphable(this._stepper)\r\n      .type(affine ? TransformBag : Matrix)\r\n\r\n    let origin\r\n    let element\r\n    let current\r\n    let currentAngle\r\n    let startTransform\r\n\r\n    function setup () {\r\n      // make sure element and origin is defined\r\n      element = element || this.element()\r\n      origin = origin || getOrigin(transforms, element)\r\n\r\n      startTransform = new Matrix(relative ? undefined : element)\r\n\r\n      // add the runner to the element so it can merge transformations\r\n      element._addRunner(this)\r\n\r\n      // Deactivate all transforms that have run so far if we are absolute\r\n      if (!relative) {\r\n        element._clearTransformRunnersBefore(this)\r\n      }\r\n    }\r\n\r\n    function run (pos) {\r\n      // clear all other transforms before this in case something is saved\r\n      // on this runner. We are absolute. We dont need these!\r\n      if (!relative) this.clearTransform()\r\n\r\n      const { x, y } = new Point(origin).transform(element._currentTransform(this))\r\n\r\n      let target = new Matrix({ ...transforms, origin: [ x, y ] })\r\n      let start = this._isDeclarative && current\r\n        ? current\r\n        : startTransform\r\n\r\n      if (affine) {\r\n        target = target.decompose(x, y)\r\n        start = start.decompose(x, y)\r\n\r\n        // Get the current and target angle as it was set\r\n        const rTarget = target.rotate\r\n        const rCurrent = start.rotate\r\n\r\n        // Figure out the shortest path to rotate directly\r\n        const possibilities = [ rTarget - 360, rTarget, rTarget + 360 ]\r\n        const distances = possibilities.map(a => Math.abs(a - rCurrent))\r\n        const shortest = Math.min(...distances)\r\n        const index = distances.indexOf(shortest)\r\n        target.rotate = possibilities[index]\r\n      }\r\n\r\n      if (relative) {\r\n        // we have to be careful here not to overwrite the rotation\r\n        // with the rotate method of Matrix\r\n        if (!isMatrix) {\r\n          target.rotate = transforms.rotate || 0\r\n        }\r\n        if (this._isDeclarative && currentAngle) {\r\n          start.rotate = currentAngle\r\n        }\r\n      }\r\n\r\n      morpher.from(start)\r\n      morpher.to(target)\r\n\r\n      const affineParameters = morpher.at(pos)\r\n      currentAngle = affineParameters.rotate\r\n      current = new Matrix(affineParameters)\r\n\r\n      this.addTransform(current)\r\n      element._addRunner(this)\r\n      return morpher.done()\r\n    }\r\n\r\n    function retarget (newTransforms) {\r\n      // only get a new origin if it changed since the last call\r\n      if (\r\n        (newTransforms.origin || 'center').toString()\r\n        !== (transforms.origin || 'center').toString()\r\n      ) {\r\n        origin = getOrigin(newTransforms, element)\r\n      }\r\n\r\n      // overwrite the old transformations with the new ones\r\n      transforms = { ...newTransforms, origin }\r\n    }\r\n\r\n    this.queue(setup, run, retarget, true)\r\n    this._isDeclarative && this._rememberMorpher('transform', morpher)\r\n    return this\r\n  },\r\n\r\n  // Animatable x-axis\r\n  x (x, relative) {\r\n    return this._queueNumber('x', x)\r\n  },\r\n\r\n  // Animatable y-axis\r\n  y (y) {\r\n    return this._queueNumber('y', y)\r\n  },\r\n\r\n  dx (x = 0) {\r\n    return this._queueNumberDelta('x', x)\r\n  },\r\n\r\n  dy (y = 0) {\r\n    return this._queueNumberDelta('y', y)\r\n  },\r\n\r\n  dmove (x, y) {\r\n    return this.dx(x).dy(y)\r\n  },\r\n\r\n  _queueNumberDelta (method, to) {\r\n    to = new SVGNumber(to)\r\n\r\n    // Try to change the target if we have this method already registerd\r\n    if (this._tryRetarget(method, to)) return this\r\n\r\n    // Make a morpher and queue the animation\r\n    const morpher = new Morphable(this._stepper).to(to)\r\n    let from = null\r\n    this.queue(function () {\r\n      from = this.element()[method]()\r\n      morpher.from(from)\r\n      morpher.to(from + to)\r\n    }, function (pos) {\r\n      this.element()[method](morpher.at(pos))\r\n      return morpher.done()\r\n    }, function (newTo) {\r\n      morpher.to(from + new SVGNumber(newTo))\r\n    })\r\n\r\n    // Register the morpher so that if it is changed again, we can retarget it\r\n    this._rememberMorpher(method, morpher)\r\n    return this\r\n  },\r\n\r\n  _queueObject (method, to) {\r\n    // Try to change the target if we have this method already registerd\r\n    if (this._tryRetarget(method, to)) return this\r\n\r\n    // Make a morpher and queue the animation\r\n    const morpher = new Morphable(this._stepper).to(to)\r\n    this.queue(function () {\r\n      morpher.from(this.element()[method]())\r\n    }, function (pos) {\r\n      this.element()[method](morpher.at(pos))\r\n      return morpher.done()\r\n    })\r\n\r\n    // Register the morpher so that if it is changed again, we can retarget it\r\n    this._rememberMorpher(method, morpher)\r\n    return this\r\n  },\r\n\r\n  _queueNumber (method, value) {\r\n    return this._queueObject(method, new SVGNumber(value))\r\n  },\r\n\r\n  // Animatable center x-axis\r\n  cx (x) {\r\n    return this._queueNumber('cx', x)\r\n  },\r\n\r\n  // Animatable center y-axis\r\n  cy (y) {\r\n    return this._queueNumber('cy', y)\r\n  },\r\n\r\n  // Add animatable move\r\n  move (x, y) {\r\n    return this.x(x).y(y)\r\n  },\r\n\r\n  // Add animatable center\r\n  center (x, y) {\r\n    return this.cx(x).cy(y)\r\n  },\r\n\r\n  // Add animatable size\r\n  size (width, height) {\r\n    // animate bbox based size for all other elements\r\n    let box\r\n\r\n    if (!width || !height) {\r\n      box = this._element.bbox()\r\n    }\r\n\r\n    if (!width) {\r\n      width = box.width / box.height * height\r\n    }\r\n\r\n    if (!height) {\r\n      height = box.height / box.width * width\r\n    }\r\n\r\n    return this\r\n      .width(width)\r\n      .height(height)\r\n  },\r\n\r\n  // Add animatable width\r\n  width (width) {\r\n    return this._queueNumber('width', width)\r\n  },\r\n\r\n  // Add animatable height\r\n  height (height) {\r\n    return this._queueNumber('height', height)\r\n  },\r\n\r\n  // Add animatable plot\r\n  plot (a, b, c, d) {\r\n    // Lines can be plotted with 4 arguments\r\n    if (arguments.length === 4) {\r\n      return this.plot([ a, b, c, d ])\r\n    }\r\n\r\n    if (this._tryRetarget('plot', a)) return this\r\n\r\n    const morpher = new Morphable(this._stepper)\r\n      .type(this._element.MorphArray).to(a)\r\n\r\n    this.queue(function () {\r\n      morpher.from(this._element.array())\r\n    }, function (pos) {\r\n      this._element.plot(morpher.at(pos))\r\n      return morpher.done()\r\n    })\r\n\r\n    this._rememberMorpher('plot', morpher)\r\n    return this\r\n  },\r\n\r\n  // Add leading method\r\n  leading (value) {\r\n    return this._queueNumber('leading', value)\r\n  },\r\n\r\n  // Add animatable viewbox\r\n  viewbox (x, y, width, height) {\r\n    return this._queueObject('viewbox', new Box(x, y, width, height))\r\n  },\r\n\r\n  update (o) {\r\n    if (typeof o !== 'object') {\r\n      return this.update({\r\n        offset: arguments[0],\r\n        color: arguments[1],\r\n        opacity: arguments[2]\r\n      })\r\n    }\r\n\r\n    if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n    if (o.color != null) this.attr('stop-color', o.color)\r\n    if (o.offset != null) this.attr('offset', o.offset)\r\n\r\n    return this\r\n  }\r\n})\r\n\r\nextend(Runner, { rx, ry, from, to })\r\nregister(Runner, 'Runner')\r\n","import {\r\n  adopt,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { svg, svgjs, xlink, xmlns } from '../modules/core/namespaces.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport Defs from './Defs.js'\r\nimport { globals } from '../utils/window.js'\r\n\r\nexport default class Svg extends Container {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('svg', node), attrs)\r\n    this.namespace()\r\n  }\r\n\r\n  // Creates and returns defs element\r\n  defs () {\r\n    if (!this.isRoot()) return this.root().defs()\r\n\r\n    return adopt(this.node.querySelector('defs'))\r\n      || this.put(new Defs())\r\n  }\r\n\r\n  isRoot () {\r\n    return !this.node.parentNode\r\n      || (!(this.node.parentNode instanceof globals.window.SVGElement) && this.node.parentNode.nodeName !== '#document-fragment')\r\n  }\r\n\r\n  // Add namespaces\r\n  namespace () {\r\n    if (!this.isRoot()) return this.root().namespace()\r\n    return this\r\n      .attr({ xmlns: svg, version: '1.1' })\r\n      .attr('xmlns:xlink', xlink, xmlns)\r\n      .attr('xmlns:svgjs', svgjs, xmlns)\r\n  }\r\n\r\n  removeNamespace () {\r\n    return this.attr({ xmlns: null, version: null })\r\n      .attr('xmlns:xlink', null, xmlns)\r\n      .attr('xmlns:svgjs', null, xmlns)\r\n  }\r\n\r\n  // Check if this is a root svg\r\n  // If not, call root() from this element\r\n  root () {\r\n    if (this.isRoot()) return this\r\n    return super.root()\r\n  }\r\n\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create nested svg document\r\n    nested: wrapWithAttrCheck(function () {\r\n      return this.put(new Svg())\r\n    })\r\n  }\r\n})\r\n\r\nregister(Svg, 'Svg', true)\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\n\r\nexport default class Symbol extends Container {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('symbol', node), attrs)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    symbol: wrapWithAttrCheck(function () {\r\n      return this.put(new Symbol())\r\n    })\r\n  }\r\n})\r\n\r\nregister(Symbol, 'Symbol')\r\n","import { globals } from '../../utils/window.js'\r\n\r\n// Create plain text node\r\nexport function plain (text) {\r\n  // clear if build mode is disabled\r\n  if (this._build === false) {\r\n    this.clear()\r\n  }\r\n\r\n  // create text node\r\n  this.node.appendChild(globals.document.createTextNode(text))\r\n\r\n  return this\r\n}\r\n\r\n// Get length of text element\r\nexport function length () {\r\n  return this.node.getComputedTextLength()\r\n}\r\n\r\n// Move over x-axis\r\n// Text is moved by its bounding box\r\n// text-anchor does NOT matter\r\nexport function x (x, box = this.bbox()) {\r\n  if (x == null) {\r\n    return box.x\r\n  }\r\n\r\n  return this.attr('x', this.attr('x') + x - box.x)\r\n}\r\n\r\n// Move over y-axis\r\nexport function y (y, box = this.bbox()) {\r\n  if (y == null) {\r\n    return box.y\r\n  }\r\n\r\n  return this.attr('y', this.attr('y') + y - box.y)\r\n}\r\n\r\nexport function move (x, y, box = this.bbox()) {\r\n  return this.x(x, box).y(y, box)\r\n}\r\n\r\n// Move center over x-axis\r\nexport function cx (x, box = this.bbox()) {\r\n  if (x == null) {\r\n    return box.cx\r\n  }\r\n\r\n  return this.attr('x', this.attr('x') + x - box.cx)\r\n}\r\n\r\n// Move center over y-axis\r\nexport function cy (y, box = this.bbox()) {\r\n  if (y == null) {\r\n    return box.cy\r\n  }\r\n\r\n  return this.attr('y', this.attr('y') + y - box.cy)\r\n}\r\n\r\nexport function center (x, y, box = this.bbox()) {\r\n  return this.cx(x, box).cy(y, box)\r\n}\r\n\r\nexport function ax (x) {\r\n  return this.attr('x', x)\r\n}\r\n\r\nexport function ay (y) {\r\n  return this.attr('y', y)\r\n}\r\n\r\nexport function amove (x, y) {\r\n  return this.ax(x).ay(y)\r\n}\r\n\r\n// Enable / disable build mode\r\nexport function build (build) {\r\n  this._build = !!build\r\n  return this\r\n}\r\n","import {\r\n  adopt,\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Shape from './Shape.js'\r\nimport { globals } from '../utils/window.js'\r\nimport * as textable from '../modules/core/textable.js'\r\n\r\nexport default class Text extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('text', node), attrs)\r\n\r\n    this.dom.leading = new SVGNumber(1.3) // store leading value for rebuilding\r\n    this._rebuild = true // enable automatic updating of dy values\r\n    this._build = false // disable build mode for adding multiple lines\r\n  }\r\n\r\n  // Set / get leading\n  leading (value) {\r\n    // act as getter\r\n    if (value == null) {\r\n      return this.dom.leading\r\n    }\r\n\r\n    // act as setter\r\n    this.dom.leading = new SVGNumber(value)\r\n\r\n    return this.rebuild()\r\n  }\n\n  // Rebuild appearance type\n  rebuild (rebuild) {\r\n    // store new rebuild flag if given\r\n    if (typeof rebuild === 'boolean') {\r\n      this._rebuild = rebuild\r\n    }\r\n\r\n    // define position of all lines\r\n    if (this._rebuild) {\r\n      const self = this\r\n      let blankLineOffset = 0\r\n      const leading = this.dom.leading\r\n\r\n      this.each(function (i) {\r\n        const fontSize = globals.window.getComputedStyle(this.node)\r\n          .getPropertyValue('font-size')\r\n\r\n        const dy = leading * new SVGNumber(fontSize)\r\n\r\n        if (this.dom.newLined) {\r\n          this.attr('x', self.attr('x'))\r\n\r\n          if (this.text() === '\\n') {\r\n            blankLineOffset += dy\r\n          } else {\r\n            this.attr('dy', i ? dy + blankLineOffset : 0)\r\n            blankLineOffset = 0\r\n          }\r\n        }\r\n      })\r\n\r\n      this.fire('rebuild')\r\n    }\r\n\r\n    return this\r\n  }\n\n  // overwrite method from parent to set data properly\n  setData (o) {\r\n    this.dom = o\r\n    this.dom.leading = new SVGNumber(o.leading || 1.3)\r\n    return this\r\n  }\n\n  // Set the text content\r\n  text (text) {\r\n    // act as getter\r\n    if (text === undefined) {\r\n      const children = this.node.childNodes\r\n      let firstLine = 0\r\n      text = ''\r\n\r\n      for (let i = 0, len = children.length; i < len; ++i) {\r\n        // skip textPaths - they are no lines\r\n        if (children[i].nodeName === 'textPath') {\r\n          if (i === 0) firstLine = 1\r\n          continue\r\n        }\r\n\r\n        // add newline if its not the first child and newLined is set to true\r\n        if (i !== firstLine && children[i].nodeType !== 3 && adopt(children[i]).dom.newLined === true) {\r\n          text += '\\n'\r\n        }\r\n\r\n        // add content of this node\r\n        text += children[i].textContent\r\n      }\r\n\r\n      return text\r\n    }\r\n\r\n    // remove existing content\r\n    this.clear().build(true)\r\n\r\n    if (typeof text === 'function') {\r\n      // call block\r\n      text.call(this, this)\r\n    } else {\r\n      // store text and make sure text is not blank\r\n      text = (text + '').split('\\n')\r\n\r\n      // build new lines\r\n      for (let j = 0, jl = text.length; j < jl; j++) {\r\n        this.newLine(text[j])\r\n      }\r\n    }\r\n\r\n    // disable build mode and rebuild lines\r\n    return this.build(false).rebuild()\r\n  }\r\n\r\n}\r\n\r\nextend(Text, textable)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create text element\r\n    text: wrapWithAttrCheck(function (text = '') {\r\n      return this.put(new Text()).text(text)\r\n    }),\r\n\r\n    // Create plain text element\r\n    plain: wrapWithAttrCheck(function (text = '') {\r\n      return this.put(new Text()).plain(text)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Text, 'Text')\r\n","import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { globals } from '../utils/window.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Shape from './Shape.js'\r\nimport Text from './Text.js'\r\nimport * as textable from '../modules/core/textable.js'\r\n\r\nexport default class Tspan extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('tspan', node), attrs)\r\n    this._build = false // disable build mode for adding multiple lines\r\n  }\r\n\r\n  // Shortcut dx\n  dx (dx) {\r\n    return this.attr('dx', dx)\r\n  }\n\n  // Shortcut dy\n  dy (dy) {\r\n    return this.attr('dy', dy)\r\n  }\n\n  // Create new line\n  newLine () {\r\n    // mark new line\r\n    this.dom.newLined = true\r\n\r\n    // fetch parent\r\n    const text = this.parent()\r\n\r\n    // early return in case we are not in a text element\r\n    if (!(text instanceof Text)) {\r\n      return this\r\n    }\r\n\r\n    const i = text.index(this)\r\n\r\n    const fontSize = globals.window.getComputedStyle(this.node)\r\n      .getPropertyValue('font-size')\r\n    const dy = text.dom.leading * new SVGNumber(fontSize)\r\n\r\n    // apply new position\r\n    return this.dy(i ? dy : 0).attr('x', text.x())\r\n  }\n\n  // Set text content\r\n  text (text) {\r\n    if (text == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '')\r\n\r\n    if (typeof text === 'function') {\r\n      this.clear().build(true)\r\n      text.call(this, this)\r\n      this.build(false)\r\n    } else {\r\n      this.plain(text)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n}\r\n\r\nextend(Tspan, textable)\r\n\r\nregisterMethods({\r\n  Tspan: {\r\n    tspan: wrapWithAttrCheck(function (text = '') {\r\n      const tspan = new Tspan()\r\n\r\n      // clear if build mode is disabled\r\n      if (!this._build) {\r\n        this.clear()\r\n      }\r\n\r\n      // add new tspan\r\n      return this.put(tspan).text(text)\r\n    })\r\n  },\r\n  Text: {\r\n    newLine: function (text = '') {\r\n      return this.tspan(text).newLine()\r\n    }\r\n  }\r\n})\r\n\r\nregister(Tspan, 'Tspan')\r\n","import { cx, cy, height, width, x, y } from '../modules/core/circled.js'\r\nimport {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Shape from './Shape.js'\r\n\r\nexport default class Circle extends Shape {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('circle', node), attrs)\r\n  }\r\n\r\n  radius (r) {\r\n    return this.attr('r', r)\r\n  }\r\n\r\n  // Radius x value\r\n  rx (rx) {\r\n    return this.attr('r', rx)\r\n  }\r\n\r\n  // Alias radius x value\r\n  ry (ry) {\r\n    return this.rx(ry)\r\n  }\r\n\r\n  size (size) {\r\n    return this.radius(new SVGNumber(size).divide(2))\r\n  }\r\n}\r\n\r\nextend(Circle, { x, y, cx, cy, width, height })\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create circle element\r\n    circle: wrapWithAttrCheck(function (size = 0) {\r\n      return this.put(new Circle())\r\n        .size(size)\r\n        .move(0, 0)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Circle, 'Circle')\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class ClipPath extends Container {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('clipPath', node), attrs)\r\n  }\r\n\r\n  // Unclip all clipped elements and remove itself\r\n  remove () {\r\n    // unclip all targets\r\n    this.targets().forEach(function (el) {\r\n      el.unclip()\r\n    })\r\n\r\n    // remove clipPath from parent\r\n    return super.remove()\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [clip-path*=\"' + this.id() + '\"]')\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create clipping element\r\n    clip: wrapWithAttrCheck(function () {\r\n      return this.defs().put(new ClipPath())\r\n    })\r\n  },\r\n  Element: {\r\n    // Distribute clipPath to svg element\r\n    clipper () {\r\n      return this.reference('clip-path')\r\n    },\r\n\r\n    clipWith (element) {\r\n      // use given clip or create a new one\r\n      const clipper = element instanceof ClipPath\r\n        ? element\r\n        : this.parent().clip().add(element)\r\n\r\n      // apply mask\r\n      return this.attr('clip-path', 'url(\"#' + clipper.id() + '\")')\r\n    },\r\n\r\n    // Unclip element\r\n    unclip () {\r\n      return this.attr('clip-path', null)\r\n    }\r\n  }\r\n})\r\n\r\nregister(ClipPath, 'ClipPath')\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Element from './Element.js'\r\n\r\nexport default class ForeignObject extends Element {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('foreignObject', node), attrs)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    foreignObject: wrapWithAttrCheck(function (width, height) {\r\n      return this.put(new ForeignObject()).size(width, height)\r\n    })\r\n  }\r\n})\r\n\r\nregister(ForeignObject, 'ForeignObject')\r\n","import Matrix from '../../types/Matrix.js'\nimport Point from '../../types/Point.js'\nimport { proportionalSize } from '../../utils/utils.js'\n\nexport function dmove (dx, dy) {\n  this.children().forEach((child, i) => {\n\n    let bbox\n\n    // We have to wrap this for elements that dont have a bbox\n    // e.g. title and other descriptive elements\n    try {\n      // Get the childs bbox\n      bbox = child.bbox()\n    } catch (e) {\n      return\n    }\n\n    // Get childs matrix\n    const m = new Matrix(child)\n    // Translate childs matrix by amount and\n    // transform it back into parents space\n    const matrix = m.translate(dx, dy).transform(m.inverse())\n    // Calculate new x and y from old box\n    const p = new Point(bbox.x, bbox.y).transform(matrix)\n    // Move element\n    child.move(p.x, p.y)\n  })\n\n  return this\n}\n\nexport function dx (dx) {\n  return this.dmove(dx, 0)\n}\n\nexport function dy (dy) {\n  return this.dmove(0, dy)\n}\n\nexport function height (height, box = this.bbox()) {\n  if (height == null) return box.height\n  return this.size(box.width, height, box)\n}\n\nexport function move (x = 0, y = 0, box = this.bbox()) {\n  const dx = x - box.x\n  const dy = y - box.y\n\n  return this.dmove(dx, dy)\n}\n\nexport function size (width, height, box = this.bbox()) {\n  const p = proportionalSize(this, width, height, box)\n  const scaleX = p.width / box.width\n  const scaleY = p.height / box.height\n\n  this.children().forEach((child, i) => {\n    const o = new Point(box).transform(new Matrix(child).inverse())\n    child.scale(scaleX, scaleY, o.x, o.y)\n  })\n\n  return this\n}\n\nexport function width (width, box = this.bbox()) {\n  if (width == null) return box.width\n  return this.size(width, box.height, box)\n}\n\nexport function x (x, box = this.bbox()) {\n  if (x == null) return box.x\n  return this.move(x, box.y, box)\n}\n\nexport function y (y, box = this.bbox()) {\n  if (y == null) return box.y\n  return this.move(box.x, y, box)\n}\n","import { nodeOrNew, register, wrapWithAttrCheck, extend } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Container from './Container.js'\r\nimport * as containerGeometry from '../modules/core/containerGeometry.js'\r\n\r\nexport default class A extends Container {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('a', node), attrs)\r\n  }\r\n\r\n  // Link target attribute\r\n  target (target) {\r\n    return this.attr('target', target)\r\n  }\r\n\r\n  // Link url\r\n  to (url) {\r\n    return this.attr('href', url, xlink)\r\n  }\r\n\r\n}\r\n\r\nextend(A, containerGeometry)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a hyperlink element\r\n    link: wrapWithAttrCheck(function (url) {\r\n      return this.put(new A()).to(url)\r\n    })\r\n  },\r\n  Element: {\r\n    unlink () {\r\n      const link = this.linker()\r\n\r\n      if (!link) return this\r\n\r\n      const parent = link.parent()\r\n\r\n      if (!parent) {\r\n        return this.remove()\r\n      }\r\n\r\n      const index = parent.index(link)\r\n      parent.add(this, index)\r\n\r\n      link.remove()\r\n      return this\r\n    },\r\n    linkTo (url) {\r\n      // reuse old link if possible\r\n      let link = this.linker()\r\n\r\n      if (!link) {\r\n        link = new A()\r\n        this.wrap(link)\r\n      }\r\n\r\n      if (typeof url === 'function') {\r\n        url.call(link, link)\r\n      } else {\r\n        link.to(url)\r\n      }\r\n\r\n      return this\r\n    },\r\n    linker () {\r\n      const link = this.parent()\r\n      if (link && link.node.nodeName.toLowerCase() === 'a') {\r\n        return link\r\n      }\r\n\r\n      return null\r\n    }\r\n  }\r\n})\r\n\r\nregister(A, 'A')\r\n","import { nodeOrNew, register, wrapWithAttrCheck, extend } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport * as containerGeometry from '../modules/core/containerGeometry.js'\r\n\r\nexport default class G extends Container {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('g', node), attrs)\r\n  }\r\n}\r\n\r\nextend(G, containerGeometry)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a group element\r\n    group: wrapWithAttrCheck(function () {\r\n      return this.put(new G())\r\n    })\r\n  }\r\n})\r\n\r\nregister(G, 'G')\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class Mask extends Container {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('mask', node), attrs)\r\n  }\r\n\r\n  // Unmask all masked elements and remove itself\r\n  remove () {\r\n    // unmask all targets\r\n    this.targets().forEach(function (el) {\r\n      el.unmask()\r\n    })\r\n\r\n    // remove mask from parent\r\n    return super.remove()\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [mask*=\"' + this.id() + '\"]')\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    mask: wrapWithAttrCheck(function () {\r\n      return this.defs().put(new Mask())\r\n    })\r\n  },\r\n  Element: {\r\n    // Distribute mask to svg element\r\n    masker () {\r\n      return this.reference('mask')\r\n    },\r\n\r\n    maskWith (element) {\r\n      // use given mask or create a new one\r\n      const masker = element instanceof Mask\r\n        ? element\r\n        : this.parent().mask().add(element)\r\n\r\n      // apply mask\r\n      return this.attr('mask', 'url(\"#' + masker.id() + '\")')\r\n    },\r\n\r\n    // Unmask element\r\n    unmask () {\r\n      return this.attr('mask', null)\r\n    }\r\n  }\r\n})\r\n\r\nregister(Mask, 'Mask')\r\n","import { nodeOrNew, register } from '../utils/adopter.js'\r\nimport Element from './Element.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\n\r\nexport default class Stop extends Element {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('stop', node), attrs)\r\n  }\r\n\r\n  // add color stops\r\n  update (o) {\r\n    if (typeof o === 'number' || o instanceof SVGNumber) {\r\n      o = {\r\n        offset: arguments[0],\r\n        color: arguments[1],\r\n        opacity: arguments[2]\r\n      }\r\n    }\r\n\r\n    // set attributes\r\n    if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n    if (o.color != null) this.attr('stop-color', o.color)\r\n    if (o.offset != null) this.attr('offset', new SVGNumber(o.offset))\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Gradient: {\r\n    // Add a color stop\r\n    stop: function (offset, color, opacity) {\r\n      return this.put(new Stop()).update(offset, color, opacity)\r\n    }\r\n  }\r\n})\r\n\r\nregister(Stop, 'Stop')\r\n","import { nodeOrNew, register } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { unCamelCase } from '../utils/utils.js'\r\nimport Element from './Element.js'\r\n\r\nfunction cssRule (selector, rule) {\r\n  if (!selector) return ''\r\n  if (!rule) return selector\r\n\r\n  let ret = selector + '{'\r\n\r\n  for (const i in rule) {\r\n    ret += unCamelCase(i) + ':' + rule[i] + ';'\r\n  }\r\n\r\n  ret += '}'\r\n\r\n  return ret\r\n}\r\n\r\nexport default class Style extends Element {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('style', node), attrs)\r\n  }\r\n\r\n  addText (w = '') {\r\n    this.node.textContent += w\r\n    return this\r\n  }\r\n\r\n  font (name, src, params = {}) {\r\n    return this.rule('@font-face', {\r\n      fontFamily: name,\r\n      src: src,\r\n      ...params\r\n    })\r\n  }\r\n\r\n  rule (selector, obj) {\r\n    return this.addText(cssRule(selector, obj))\r\n  }\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  style (selector, obj) {\r\n    return this.put(new Style()).rule(selector, obj)\r\n  },\r\n  fontface  (name, src, params) {\r\n    return this.put(new Style()).font(name, src, params)\r\n  }\r\n})\r\n\r\nregister(Style, 'Style')\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Path from './Path.js'\r\nimport PathArray from '../types/PathArray.js'\r\nimport Text from './Text.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class TextPath extends Text {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('textPath', node), attrs)\r\n  }\r\n\r\n  // return the array of the path track element\r\n  array () {\r\n    const track = this.track()\r\n\r\n    return track ? track.array() : null\r\n  }\r\n\r\n  // Plot path if any\r\n  plot (d) {\r\n    const track = this.track()\r\n    let pathArray = null\r\n\r\n    if (track) {\r\n      pathArray = track.plot(d)\r\n    }\r\n\r\n    return (d == null) ? pathArray : this\r\n  }\r\n\r\n  // Get the path element\r\n  track () {\r\n    return this.reference('href')\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    textPath: wrapWithAttrCheck(function (text, path) {\r\n      // Convert text to instance if needed\r\n      if (!(text instanceof Text)) {\r\n        text = this.text(text)\r\n      }\r\n\r\n      return text.path(path)\r\n    })\r\n  },\r\n  Text: {\r\n    // Create path for text to run on\r\n    path: wrapWithAttrCheck(function (track, importNodes = true) {\r\n      const textPath = new TextPath()\r\n\r\n      // if track is a path, reuse it\r\n      if (!(track instanceof Path)) {\r\n        // create path element\r\n        track = this.defs().path(track)\r\n      }\r\n\r\n      // link textPath to path and add content\r\n      textPath.attr('href', '#' + track, xlink)\r\n\r\n      // Transplant all nodes from text to textPath\r\n      let node\r\n      if (importNodes) {\r\n        while ((node = this.node.firstChild)) {\r\n          textPath.node.appendChild(node)\r\n        }\r\n      }\r\n\r\n      // add textPath element as child node and return textPath\r\n      return this.put(textPath)\r\n    }),\r\n\r\n    // Get the textPath children\r\n    textPath () {\r\n      return this.findOne('textPath')\r\n    }\r\n  },\r\n  Path: {\r\n    // creates a textPath from this path\r\n    text: wrapWithAttrCheck(function (text) {\r\n      // Convert text to instance if needed\r\n      if (!(text instanceof Text)) {\r\n        text = new Text().addTo(this.parent()).text(text)\r\n      }\r\n\r\n      // Create textPath from text and path and return\r\n      return text.path(this)\r\n    }),\r\n\r\n    targets () {\r\n      return baseFind('svg textPath').filter((node) => {\r\n        return (node.attr('href') || '').includes(this.id())\r\n      })\r\n\r\n      // Does not work in IE11. Use when IE support is dropped\r\n      // return baseFind('svg textPath[*|href*=\"' + this.id() + '\"]')\r\n    }\r\n  }\r\n})\r\n\r\nTextPath.prototype.MorphArray = PathArray\r\nregister(TextPath, 'TextPath')\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Shape from './Shape.js'\r\n\r\nexport default class Use extends Shape {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('use', node), attrs)\r\n  }\r\n\r\n  // Use element as a reference\r\n  use (element, file) {\r\n    // Set lined element\r\n    return this.attr('href', (file || '') + '#' + element, xlink)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a use element\r\n    use: wrapWithAttrCheck(function (element, file) {\r\n      return this.put(new Use()).use(element, file)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Use, 'Use')\r\n","/* Optional Modules */\r\nimport './modules/optional/arrange.js'\r\nimport './modules/optional/class.js'\r\nimport './modules/optional/css.js'\r\nimport './modules/optional/data.js'\r\nimport './modules/optional/memory.js'\r\nimport './modules/optional/sugar.js'\r\nimport './modules/optional/transform.js'\r\n\r\nimport { extend, makeInstance } from './utils/adopter.js'\r\nimport { getMethodNames, getMethodsFor } from './utils/methods.js'\r\nimport Box from './types/Box.js'\r\nimport Color from './types/Color.js'\r\nimport Container from './elements/Container.js'\r\nimport Defs from './elements/Defs.js'\r\nimport Dom from './elements/Dom.js'\r\nimport Element from './elements/Element.js'\r\nimport Ellipse from './elements/Ellipse.js'\r\nimport EventTarget from './types/EventTarget.js'\r\nimport Fragment from './elements/Fragment.js'\r\nimport Gradient from './elements/Gradient.js'\r\nimport Image from './elements/Image.js'\r\nimport Line from './elements/Line.js'\r\nimport List from './types/List.js'\r\nimport Marker from './elements/Marker.js'\r\nimport Matrix from './types/Matrix.js'\r\nimport Morphable, {\r\n  NonMorphable,\r\n  ObjectBag,\r\n  TransformBag,\r\n  makeMorphable,\r\n  registerMorphableType\r\n} from './animation/Morphable.js'\r\nimport Path from './elements/Path.js'\r\nimport PathArray from './types/PathArray.js'\r\nimport Pattern from './elements/Pattern.js'\r\nimport PointArray from './types/PointArray.js'\r\nimport Point from './types/Point.js'\r\nimport Polygon from './elements/Polygon.js'\r\nimport Polyline from './elements/Polyline.js'\r\nimport Rect from './elements/Rect.js'\r\nimport Runner from './animation/Runner.js'\r\nimport SVGArray from './types/SVGArray.js'\r\nimport SVGNumber from './types/SVGNumber.js'\r\nimport Shape from './elements/Shape.js'\r\nimport Svg from './elements/Svg.js'\r\nimport Symbol from './elements/Symbol.js'\r\nimport Text from './elements/Text.js'\r\nimport Tspan from './elements/Tspan.js'\r\nimport * as defaults from './modules/core/defaults.js'\r\nimport * as utils from './utils/utils.js'\r\nimport * as namespaces from './modules/core/namespaces.js'\r\nimport * as regex from './modules/core/regex.js'\r\n\r\nexport {\r\n  Morphable,\r\n  registerMorphableType,\r\n  makeMorphable,\r\n  TransformBag,\r\n  ObjectBag,\r\n  NonMorphable\r\n}\r\n\r\nexport { defaults, utils, namespaces, regex }\r\nexport const SVG = makeInstance\r\nexport { default as parser } from './modules/core/parser.js'\r\nexport { default as find } from './modules/core/selector.js'\r\nexport * from './modules/core/event.js'\r\nexport * from './utils/adopter.js'\r\nexport {\r\n  getWindow,\r\n  registerWindow,\r\n  restoreWindow,\r\n  saveWindow,\r\n  withWindow\r\n} from './utils/window.js'\r\n\r\n/* Animation Modules */\r\nexport { default as Animator } from './animation/Animator.js'\r\nexport { Controller, Ease, PID, Spring, easing } from './animation/Controller.js'\r\nexport { default as Queue } from './animation/Queue.js'\r\nexport { default as Runner } from './animation/Runner.js'\r\nexport { default as Timeline } from './animation/Timeline.js'\r\n\r\n/* Types */\r\nexport { default as Array } from './types/SVGArray.js'\r\nexport { default as Box } from './types/Box.js'\r\nexport { default as Color } from './types/Color.js'\r\nexport { default as EventTarget } from './types/EventTarget.js'\r\nexport { default as Matrix } from './types/Matrix.js'\r\nexport { default as Number } from './types/SVGNumber.js'\r\nexport { default as PathArray } from './types/PathArray.js'\r\nexport { default as Point } from './types/Point.js'\r\nexport { default as PointArray } from './types/PointArray.js'\r\nexport { default as List } from './types/List.js'\r\n\r\n/* Elements */\r\nexport { default as Circle } from './elements/Circle.js'\r\nexport { default as ClipPath } from './elements/ClipPath.js'\r\nexport { default as Container } from './elements/Container.js'\r\nexport { default as Defs } from './elements/Defs.js'\r\nexport { default as Dom } from './elements/Dom.js'\r\nexport { default as Element } from './elements/Element.js'\r\nexport { default as Ellipse } from './elements/Ellipse.js'\r\nexport { default as ForeignObject } from './elements/ForeignObject.js'\r\nexport { default as Fragment } from './elements/Fragment.js'\r\nexport { default as Gradient } from './elements/Gradient.js'\r\nexport { default as G } from './elements/G.js'\r\nexport { default as A } from './elements/A.js'\r\nexport { default as Image } from './elements/Image.js'\r\nexport { default as Line } from './elements/Line.js'\r\nexport { default as Marker } from './elements/Marker.js'\r\nexport { default as Mask } from './elements/Mask.js'\r\nexport { default as Path } from './elements/Path.js'\r\nexport { default as Pattern } from './elements/Pattern.js'\r\nexport { default as Polygon } from './elements/Polygon.js'\r\nexport { default as Polyline } from './elements/Polyline.js'\r\nexport { default as Rect } from './elements/Rect.js'\r\nexport { default as Shape } from './elements/Shape.js'\r\nexport { default as Stop } from './elements/Stop.js'\r\nexport { default as Style } from './elements/Style.js'\r\nexport { default as Svg } from './elements/Svg.js'\r\nexport { default as Symbol } from './elements/Symbol.js'\r\nexport { default as Text } from './elements/Text.js'\r\nexport { default as TextPath } from './elements/TextPath.js'\r\nexport { default as Tspan } from './elements/Tspan.js'\r\nexport { default as Use } from './elements/Use.js'\r\n\r\nextend([\r\n  Svg,\r\n  Symbol,\r\n  Image,\r\n  Pattern,\r\n  Marker\r\n], getMethodsFor('viewbox'))\r\n\r\nextend([\r\n  Line,\r\n  Polyline,\r\n  Polygon,\r\n  Path\r\n], getMethodsFor('marker'))\r\n\r\nextend(Text, getMethodsFor('Text'))\r\nextend(Path, getMethodsFor('Path'))\r\n\r\nextend(Defs, getMethodsFor('Defs'))\r\n\r\nextend([\r\n  Text,\r\n  Tspan\r\n], getMethodsFor('Tspan'))\r\n\r\nextend([\r\n  Rect,\r\n  Ellipse,\r\n  Gradient,\r\n  Runner\r\n], getMethodsFor('radius'))\r\n\r\nextend(EventTarget, getMethodsFor('EventTarget'))\r\nextend(Dom, getMethodsFor('Dom'))\r\nextend(Element, getMethodsFor('Element'))\r\nextend(Shape, getMethodsFor('Shape'))\r\nextend([ Container, Fragment ], getMethodsFor('Container'))\r\nextend(Gradient, getMethodsFor('Gradient'))\r\n\r\nextend(Runner, getMethodsFor('Runner'))\r\n\r\nList.extend(getMethodNames())\r\n\r\nregisterMorphableType([\r\n  SVGNumber,\r\n  Color,\r\n  Box,\r\n  Matrix,\r\n  SVGArray,\r\n  PointArray,\r\n  PathArray,\r\n  Point\r\n])\r\n\r\nmakeMorphable()\r\n","import { LitElement, html, css } from \"lit\";\r\nimport {\r\n  SVG,\r\n  extend as SVGextend,\r\n  Element as SVGElement,\r\n  create,\r\n} from \"@svgdotjs/svg.js\";\r\n// Need to add shuffler of order of objects within the array.\r\nconst peaceMessages = [\r\n  {\r\n    language: \"English\",\r\n    message: \"May peace prevail on earth\",\r\n    direction: \"ltor\",\r\n    displayMessage: true,\r\n  },\r\n  {\r\n    language: \"Spanish\",\r\n    message: \"Que la paz prevalezca en la tierra\",\r\n    direction: \"ltor\",\r\n    displayMessage: true,\r\n  },\r\n  {\r\n    language: \"Japanese\",\r\n    message: \"世界人類が平和でありますように\",\r\n    direction: \"ttob\",\r\n    displayMessage: true,\r\n  },\r\n  {\r\n    language: \"Arabic\",\r\n    message: \"السلام للعالم أجمع\",\r\n    direction: \"rtol\",\r\n    displayMessage: true,\r\n  },\r\n  {\r\n    language: \"Danish\",\r\n    message: \"Må fred herske på jorden\",\r\n    direction: \"ltor\",\r\n    displayMessage: true,\r\n  },\r\n  {\r\n    language: \"Chinese\",\r\n    message: \"我們祈禱世界人類的和平\",\r\n    direction: \"ttob\",\r\n    displayMessage: true,\r\n  },\r\n  {\r\n    language: \"Korean\",\r\n    message: \"세계인류의 평화가 이룩되도록\",\r\n    direction: \"ttob\",\r\n    displayMessage: true,\r\n  },\r\n  {\r\n    language: \"Persian\",\r\n    message: \" برقرار باد صلح در سراسر جهان\",\r\n    direction: \"rtol\",\r\n    displayMessage: true,\r\n  },\r\n  {\r\n    language: \"Hebrew\",\r\n    message: \" ישרה שלום עלי אדמות\",\r\n    direction: \"rtol\",\r\n    displayMessage: true,\r\n  },\r\n  {\r\n    language: \"Ukrainian\",\r\n    message: \"Хай буде мир людству у всьому світі\",\r\n    direction: \"ltor\",\r\n    displayMessage: true,\r\n  },\r\n  {\r\n    language: \"Russian\",\r\n    message: \"Да будет мир человечеству во всём мире\",\r\n    direction: \"ltor\",\r\n    displayMessage: true,\r\n  },\r\n  {\r\n    language: \"Tamil\",\r\n    message: \"உலகில் அமைதி நிலவட்டும்\",\r\n    direction: \"ltor\",\r\n    displayMessage: true,\r\n  },\r\n  {\r\n    language: \"Serbo-Croatian\",\r\n    message: \"Neka mirzavlada na zemliji\",\r\n    direction: \"ltor\",\r\n    displayMessage: true,\r\n  },\r\n  {\r\n    language: \"Romansch\",\r\n    message: \"Possia la pasch reger en il mund\",\r\n    direction: \"ltor\",\r\n    displayMessage: true,\r\n  },\r\n  {\r\n    language: \"Hawaiian\",\r\n    message: \"E Ho'omaluhia Me Ka Honua\",\r\n    direction: \"ltor\",\r\n    displayMessage: true,\r\n  },\r\n  {\r\n    language: \"Icelandic\",\r\n    message: \"Megi friður ríkja á jörð\",\r\n    direction: \"ltor\",\r\n    displayMessage: true,\r\n  },\r\n  {\r\n    language: \"Kikuyu\",\r\n    message: \"Thayú v́iyv́re thiine wa thi yothe\",\r\n    direction: \"ltor\",\r\n    displayMessage: true,\r\n  },\r\n  {\r\n    language: \"Yoruba\",\r\n    message: \"Alàáfíà fún gbogbo àgbáyé\",\r\n    direction: \"ltor\",\r\n    displayMessage: true,\r\n  },\r\n  {\r\n    language: \"Vietnamese\",\r\n    message: \"Nguyện xin hòa bình đến với toàn thể nhân loại trên thế giới\",\r\n    direction: \"ltor\",\r\n    displayMessage: true,\r\n  },\r\n  {\r\n    language: \"Hopi\",\r\n    message: \"Tuwa kwatsi es looma eyesni\",\r\n    direction: \"ltor\",\r\n    displayMessage: true,\r\n  },\r\n  {\r\n    language: \"Afrikaans\",\r\n    message: \"Mag Vrede Seëvier Op Aarde\",\r\n    direction: \"ltor\",\r\n    displayMessage: true,\r\n  },\r\n  {\r\n    language: \"Algonquin\",\r\n    message: \"Quenohteau Ohke woh aquené omskauau\",\r\n    direction: \"ltor\",\r\n    displayMessage: true,\r\n  },\r\n  {\r\n    language: \"Cherokee\",\r\n    message: \"ᎡᎶᎯᏃ ᏙᎯᏱ ᎨᏎᏍᏗ\",\r\n    direction: \"ltor\",\r\n    displayMessage: true,\r\n  },\r\n  {\r\n    language: \"Urdu\",\r\n    message: \"دنیا میں امن قائم رہے\",\r\n    direction: \"rtol\",\r\n    displayMessage: true,\r\n  },\r\n  {\r\n    language: \"Filipino\",\r\n    message: \"Sana'y Manatili ang Kapayapáan sa Mundo\",\r\n    direction: \"ltor\",\r\n    displayMessage: true,\r\n  },\r\n  {\r\n    language: \"French\",\r\n    message: \"Puisse la paix régner dans le monde\",\r\n    direction: \"ltor\",\r\n    displayMessage: true,\r\n  },\r\n  {\r\n    language: \"Hmong\",\r\n    message: \"Kom kev thaj yeeb mauj rau ntiaj teb no\",\r\n    direction: \"ltor\",\r\n    displayMessage: true,\r\n  },\r\n  {\r\n    language: \"Maori\",\r\n    message: \"He maungārongo ki runga i te whenua\",\r\n    direction: \"ltor\",\r\n    displayMessage: true,\r\n  },\r\n  {\r\n    language: \"Quechua\",\r\n    message: \"Kusi kausay kachun kay pachapi\",\r\n    direction: \"ltor\",\r\n    displayMessage: true,\r\n  },\r\n];\r\n\r\n// Count up the number of LTOR messages\r\nconst sumLTORMessages = peaceMessages.reduce((total, current) => {\r\n  // console.log(current);\r\n  if (current.direction === \"ltor\") {\r\n    console.log(\"yes\");\r\n    console.log(total);\r\n    total += 1;\r\n  }\r\n  return total;\r\n}, 0);\r\n\r\nconsole.log({ sumLTORMessages });\r\n\r\n// Number of messages to keep out of the ltor pool, not including english\r\nlet numLTORMessagesToKeep = 9;\r\n\r\n// Find the index number of the english entry (map converts the language entries in the objects to an array, then searches\r\n// for the index of the english entry)\r\nconst indexOfEnglishEntry = peaceMessages\r\n  .map((object) => {\r\n    return object.language;\r\n  })\r\n  .indexOf(\"English\");\r\n\r\n//console.log({ indexOfEnglishEntry });\r\n\r\n// There are more messages in ltor than will fix well on a screen. Randomly downsample them here,\r\n// but keep all of the rtol and ttob messages. Randomly select 7 messages, and always include English for context.\r\nfunction downsampleMessages(numLTORMessages, numToKeep) {\r\n  let downsampleIndexes = [];\r\n  // Start by adding the index of the english entry\r\n  downsampleIndexes.push(indexOfEnglishEntry);\r\n  for (let counter = 0; counter < numToKeep; counter++) {\r\n    // keeps the entry in the range [0,numLTORMessages]\r\n    let currEntry = Math.floor(Math.random() * numLTORMessages);\r\n    console.log({ currEntry });\r\n    // Ensure there are no duplicate index picks (re-randomize as needed to ensure this is the case)\r\n    if (downsampleIndexes.includes(currEntry)) {\r\n      while (downsampleIndexes.includes(currEntry)) {\r\n        //console.log(\"in while\");\r\n        currEntry = Math.floor(Math.random() * numLTORMessages);\r\n      }\r\n    }\r\n    downsampleIndexes.push(currEntry);\r\n  }\r\n\r\n  console.log({ downsampleIndexes });\r\n  let sampledMessageHolder = [];\r\n  let ltorCounter = 0;\r\n  for (const message of peaceMessages) {\r\n    //console.log(message);\r\n    if (message.direction === \"rtol\" || message.direction === \"ttob\") {\r\n      sampledMessageHolder.push(message);\r\n    } else if (message.direction === \"ltor\") {\r\n      if (downsampleIndexes.includes(ltorCounter)) {\r\n        sampledMessageHolder.push(message);\r\n      }\r\n      ltorCounter += 1;\r\n    }\r\n  }\r\n  return sampledMessageHolder;\r\n}\r\n\r\nconst sampledMessages = downsampleMessages(\r\n  sumLTORMessages,\r\n  numLTORMessagesToKeep\r\n);\r\n\r\nclass PeacePanel extends LitElement {\r\n  // These are Class properties that are dynamic for Lit (i.e. it listens to changes in them and updates the\r\n  // DOM automatically if they change). The static keyword only refers to the fact that they're defined\r\n  // in the class as a whole and not in individual object instances of the class.\r\n  // static properties = {\r\n  //     // Will hold the peace language (key) and peace message (value)\r\n  //     messageLanguage:{}\r\n  // };\r\n  static properties = {\r\n    // This reads in object attached by JS to the HTML element, which contains the\r\n    // information for the current peace panel.\r\n    messageDetails: { type: Object },\r\n    tester: { type: String },\r\n  };\r\n  static styles = css`\r\n    .message {\r\n      color: #222222;\r\n    }\r\n    .language {\r\n      color: #777777;\r\n    }\r\n    p {\r\n      background-color: bisque;\r\n      text-align: center;\r\n    }\r\n  `;\r\n  //   constructor() {\r\n  //     super();\r\n  //     console.log(\"in constructor\");\r\n  //     console.log(this.messageDetails);\r\n  //     // Assign the input object passed to the class definition when creating a new Object so it's\r\n  //     // accessible for correct message/language rendering.\r\n  //     //this.messageDetails = inputObject;\r\n  //     console.log(this);\r\n  //   }\r\n\r\n  render() {\r\n    //console.log(\"in render\");\r\n    //console.log(this.messageDetails.language);\r\n    //console.log(this.tester);\r\n    // Make each peace-panel element have 2 classes: 1 for what is being shown, and the other for the text direction\r\n    // which is needed to style them for correct text direction using the main CSS file. Easiest to define as\r\n    // a variable before using in the template string construction.\r\n    let classList = `${\r\n      this.messageDetails.displayMessage ? \"message\" : \"language\"\r\n    }`;\r\n    classList = classList + \" \" + this.messageDetails.direction;\r\n    //return html`<p>Testing</p>`;\r\n    return html`\r\n      <p class=${classList} @click=${() => this.toggleMessage()}>\r\n        ${this.messageDetails.displayMessage\r\n          ? this.messageDetails.message\r\n          : this.messageDetails.language}\r\n      </p>\r\n    `;\r\n  }\r\n\r\n  // Toggle whether the displayMessage property is set to true/false.\r\n  toggleMessage() {\r\n    //console.log(\"in toggle\");\r\n    //console.log(this.messageDetails);\r\n    // Toggle the boolean and re-assign\r\n\r\n    this.messageDetails.displayMessage = !this.messageDetails.displayMessage;\r\n    //console.log(this.messageDetails.displayMessage);\r\n    this.requestUpdate();\r\n  }\r\n}\r\n\r\ncustomElements.define(\"peace-panel\", PeacePanel);\r\n\r\n// class TesterTester extends LitElement {\r\n//   render() {\r\n//     html`<p>TESTING here</p>`;\r\n//   }\r\n// }\r\n\r\n// customElements.define(\"tester-tester\", TesterTester);\r\n\r\n// export class SimpleGreeting extends LitElement {\r\n//   static styles = css`\r\n//     p {\r\n//       color: blue;\r\n//     }\r\n//   `;\r\n\r\n//   static properties = {\r\n//     name: { type: String },\r\n//   };\r\n\r\n//   constructor() {\r\n//     super();\r\n\r\n//     this.name = \"Somebody\";\r\n//   }\r\n\r\n//   render() {\r\n//     return html`<p>Hello, ${this.name}!</p>`;\r\n//   }\r\n// }\r\n\r\n// customElements.define(\"simple-greeting\", SimpleGreeting);\r\n\r\n// peaceMessages.forEach((message) => {\r\n//   const newElement = document.createElement(\"simple-greeting\");\r\n//   document.querySelector(\".banner-holder\").appendChild(newElement);\r\n// });\r\n\r\nsampledMessages.forEach((message) => {\r\n  //console.log(message);\r\n  const newPeacePanel = document.createElement(\"peace-panel\");\r\n  // The name of this property added to the HTML node has to exactly match the name expected\r\n  // in the static properties area of the PeacePanels class definition (this seems to be how it\r\n  // can process multiple pieces of input information attached to the HTML and correctly assign them.)\r\n\r\n  // These are named 'slots' that newPeacePanel is expecting based on our definition in the static properties\r\n  // section. Can attach any other properties that I want to the peace-panel elements, but only the\r\n  // ones with the names matching those expected from the properties definition of the class will\r\n  // be available for use with the Lit web component.\r\n  newPeacePanel.messageDetails = message;\r\n  newPeacePanel.tester = \"Gussy!\";\r\n  //console.log(\"in setting up\");\r\n  //console.log(newPeacePanel.messageDetails);\r\n  if (message.direction === \"ttob\") {\r\n    document.querySelector(\".banner-ttob\").appendChild(newPeacePanel);\r\n  }\r\n  if (message.direction === \"rtol\") {\r\n    document.querySelector(\".banner-rtol\").appendChild(newPeacePanel);\r\n  }\r\n  if (message.direction === \"ltor\") {\r\n    document.querySelector(\".banner-ltor\").appendChild(newPeacePanel);\r\n  }\r\n});\r\n\r\n//Get the window width and height every time it's resized (this is a workaround to set the\r\n// window dimensions using percentages of the window size when the input size only accepts pixels)\r\n// let windowWidth = window.innerWidth;\r\n// let windowHeight = window.innerHeight;\r\nlet windowWidth = window.visualViewport.width;\r\nlet windowHeight = window.visualViewport.height;\r\n\r\n// const testSVG = SVG()\r\n//   .addTo(\"body\")\r\n//   .size(windowWidth / 2, windowHeight);\r\n\r\n// let rect = testSVG\r\n//   .polygon(`0,0 100,100 150,150, 150,0 0,0`)\r\n//   .attr({ fill: \"#0f0\", class: \"svg\" });\r\n\r\n// function makeSVGContainer(width, height, className) {\r\n//   return (svgContainer = SVG()\r\n//     .addTo(\"body\")\r\n//     .size(width, height)\r\n//     .addClass(className));\r\n// }\r\n\r\nconst fullContainer = SVG()\r\n  .addTo(\".banner-holder\")\r\n  .size(windowWidth, windowHeight)\r\n  .addClass(\"full-container\");\r\n\r\n// Initialize to undefined. This is important in the render functions to tell whether a previous panel render exists or not.\r\nlet rtolSVG, ltorSVG, ttobSVG;\r\n\r\nfunction renderSVG_full(renderLtor, renderRtol, renderTtob) {\r\n  // Only render the panels with input parameters of true\r\n\r\n  // All of these panel renders get their second class set to 'max' to indicate they're filling the full screen currently\r\n\r\n  //Get the window dimensions to work with\r\n  windowWidth = window.visualViewport.width;\r\n  windowHeight = window.visualViewport.height;\r\n\r\n  if (renderRtol) {\r\n    if (rtolSVG != undefined) {\r\n      rtolSVG.remove();\r\n    }\r\n    rtolSVG = fullContainer\r\n      .polygon(\r\n        `0,0 0,${windowHeight} ${windowWidth / 2},${windowHeight / 2} ${\r\n          windowWidth / 2\r\n        },0 0,0`\r\n      )\r\n      .attr({ fill: \"#DD6B7F\", class: `rtol-svg max` });\r\n    // Set the click event handler to change the class to 'min' and render to the side when clicked\r\n    rtolSVG.click(function () {\r\n      console.log(\"fired\");\r\n      this.fill({ color: \"blue\" });\r\n      this.animate().move(-(2 / 10) * windowWidth, 0);\r\n      // this.node.classList[1] = min;\r\n      renderSVG_side(false, true, false);\r\n    });\r\n  }\r\n\r\n  if (renderTtob) {\r\n    if (ttobSVG != undefined) {\r\n      ttobSVG.remove();\r\n    }\r\n    ttobSVG = fullContainer\r\n      .polygon(\r\n        `0,${windowHeight} ${windowWidth},${windowHeight} ${windowWidth / 2},${\r\n          windowHeight / 2\r\n        }`\r\n      )\r\n      .attr({ fill: \"#FFA500\", class: `ttob-svg max` });\r\n\r\n    ttobSVG.click(function () {\r\n      console.log(\"fired\");\r\n      this.fill({ color: \"blue\" });\r\n      this.animate().move(0, (7 / 10) * windowHeight);\r\n      renderSVG_side(false, false, true);\r\n    });\r\n  }\r\n  if (renderLtor) {\r\n    if (ltorSVG != undefined) {\r\n      ltorSVG.remove();\r\n    }\r\n    ltorSVG = fullContainer\r\n      .polygon(\r\n        `${windowWidth},0 ${windowWidth},${windowHeight} ${windowWidth / 2},${\r\n          windowHeight / 2\r\n        } ${windowWidth / 2},0`\r\n      )\r\n      .attr({\r\n        fill: \"#54B5FB\",\r\n        class: `ltor-svg max`,\r\n      });\r\n    console.log(ltorSVG);\r\n\r\n    // Add the click event handlers\r\n    ltorSVG.click(function () {\r\n      console.log(\"fired\");\r\n      this.fill({ color: \"blue\" });\r\n      this.animate().move((7 / 10) * windowWidth, 0);\r\n      console.log(this);\r\n      renderSVG_side(true, false, false);\r\n    });\r\n  }\r\n}\r\n\r\nfunction renderSVG_side(renderLtor, renderRtol, renderTtob) {\r\n  // Only render the panels with input parameters of true\r\n\r\n  // All of these panel renders get their second class set to 'min' to indicate they're on the side of the screen currently\r\n  //Get the window dimensions to work with\r\n  windowWidth = window.visualViewport.width;\r\n  windowHeight = window.visualViewport.height;\r\n  if (renderRtol) {\r\n    // remove the panel if it already exists before re-rendering\r\n    if (rtolSVG != undefined) {\r\n      rtolSVG.remove();\r\n    }\r\n    rtolSVG = fullContainer\r\n      .polygon(\r\n        `${(-2 / 10) * windowWidth},0 ${\r\n          (-2 / 10) * windowWidth\r\n        },${windowHeight} ${windowWidth / 2 - (2 / 10) * windowWidth},${\r\n          windowHeight / 2\r\n        } ${windowWidth / 2 - (2 / 10) * windowWidth},0 0,0`\r\n      )\r\n      .attr({ fill: \"#DD6B7F\", class: `rtol-svg min` });\r\n    // Set the click event handler to change the class to 'min' and render to the side when clicked\r\n    rtolSVG.click(function () {\r\n      console.log(\"fired\");\r\n      this.fill({ color: \"blue\" });\r\n      this.animate().move(0, 0);\r\n      // this.node.classList[1] = min;\r\n      renderSVG_full(false, true, false);\r\n    });\r\n  }\r\n\r\n  if (renderTtob) {\r\n    if (ttobSVG != undefined) {\r\n      ttobSVG.remove();\r\n    }\r\n    ttobSVG = fullContainer\r\n      .polygon(\r\n        `0,${windowHeight + (1 / 10) * windowHeight} ${windowWidth},${\r\n          windowHeight + (1 / 10) * windowHeight\r\n        } ${windowWidth / 2},${(6 / 10) * windowHeight}`\r\n      )\r\n      .attr({ fill: \"#FFA500\", class: `ttob-svg min` });\r\n\r\n    ttobSVG.click(function () {\r\n      console.log(\"fired\");\r\n      this.fill({ color: \"blue\" });\r\n      this.animate().move(0, (8 / 10) * windowHeight);\r\n      renderSVG_full(false, false, true);\r\n    });\r\n  }\r\n  if (renderLtor) {\r\n    if (ltorSVG != undefined) {\r\n      ltorSVG.remove();\r\n    }\r\n    ltorSVG = fullContainer\r\n      .polygon(\r\n        `${(12 / 10) * windowWidth},0 ${\r\n          (12 / 10) * windowWidth\r\n        },${windowHeight} ${windowWidth / 2 + (2 / 10) * windowWidth},${\r\n          windowHeight / 2\r\n        } ${windowWidth / 2 + (2 / 10) * windowWidth},0 ${\r\n          (12 / 10) * windowWidth\r\n        },0`\r\n      )\r\n      .attr({\r\n        fill: \"#54B5FB\",\r\n        class: `ltor-svg min`,\r\n      });\r\n    console.log(ltorSVG);\r\n\r\n    // Add the click event handlers\r\n    ltorSVG.click(function () {\r\n      console.log(\"fired\");\r\n      this.fill({ color: \"blue\" });\r\n      this.animate().move((8 / 10) * windowWidth, 0);\r\n      console.log(this);\r\n      renderSVG_full(true, false, false);\r\n    });\r\n  }\r\n}\r\n\r\n// Scales the SVG along with the window size.\r\nfunction updateSVGSize(event) {\r\n  console.log({ event });\r\n  let resized = false;\r\n  if (event != \"\") {\r\n    resized = true;\r\n  }\r\n\r\n  // Remove the previous rectangle and re-render with the new width/height dimensions\r\n  // rect.remove();\r\n  // rect = testSVG\r\n  //   .rect(windowWidth / 10, windowHeight / 10)\r\n  //   .attr({ fill: \"#0f0\", class: \"svg\" });\r\n  // The background color panels are min/maxed based on their second class value.\r\n  // Updating them with window size destroys the previous panels and their class state, so\r\n  // need to capture their current class state here before removing them, and pass that to the\r\n  // renderSVG function so that when they're re-sized, they keep their same min/max appearance.\r\n  const currLTORSVG = document.querySelector(\".ltor-svg\");\r\n  const currRTOLSVG = document.querySelector(\".rtol-svg\");\r\n  const currTTOBSVG = document.querySelector(\".ttob-svg\");\r\n\r\n  const currLTORClass = currLTORSVG.classList[1];\r\n  const currRTOLClass = currRTOLSVG.classList[1];\r\n  const currTTOBClass = currTTOBSVG.classList[1];\r\n\r\n  // ltorSVG.remove();\r\n  // ttobSVG.remove();\r\n  // rtolSVG.remove();\r\n\r\n  // re-render the full banners as needed\r\n  renderSVG_full(\r\n    currLTORClass === \"max\" ? true : false,\r\n    currRTOLClass === \"max\" ? true : false,\r\n    currTTOBClass === \"max\" ? true : false\r\n  );\r\n\r\n  // re-Render the banners currently off to the side as needed\r\n  renderSVG_side(\r\n    currLTORClass === \"min\" ? true : false,\r\n    currRTOLClass === \"min\" ? true : false,\r\n    currTTOBClass === \"min\" ? true : false\r\n  );\r\n}\r\n// Initial SVG render of the background areas to the side\r\nrenderSVG_side(windowHeight, windowWidth, true, true, true);\r\n// If the window size changes, re-calculate and re-render the background areas so they still fit correctly\r\n// based on the new screen size.\r\nwindow.addEventListener(\"resize\", updateSVGSize);\r\n\r\n// // Can't use anonymous arrow functions for this callback (likely because it's not passing the correct value of 'this')\r\n// rect.click(function () {\r\n//   this.fill({ color: \"blue\" });\r\n//   this.animate().move(150, 150);\r\n// });\r\n\r\n// document.querySelector(\".svg\").addEventListener(\"click\", function () {\r\n//   console.log(\"Clicked!\");\r\n// });\r\n"],"names":["supportsAdoptingStyleSheets","window","ShadowRoot","ShadyCSS","nativeShadow","Document","prototype","CSSStyleSheet","constructionToken","Symbol","cssTagCache","WeakMap","CSSResult","constructor","cssText","strings","safeToken","this","_$cssResult$","Error","_strings","styleSheet","_styleSheet","cacheable","length","get","replaceSync","set","toString","css","values","reduce","acc","v","idx","value","getCompatibleStyle","s","sheet","rule","cssRules","String","$27fcf98b67c2a783$var$s","trustedTypes","emptyStringForBooleanAttribute","emptyScript","polyfillSupport","reactiveElementPolyfillSupport","defaultConverter","toAttribute","type","Boolean","Object","Array","JSON","stringify","fromAttribute","fromValue","Number","parse","e","notEqual","old","defaultPropertyDeclaration","attribute","converter","reflect","hasChanged","ReactiveElement","HTMLElement","super","__instanceProperties","Map","isUpdatePending","hasUpdated","__reflectingProperty","_initialize","static","initializer","_a","_initializers","push","observedAttributes","finalize","attributes","elementProperties","forEach","p","attr","__attributeNameForProperty","__attributeToPropertyMap","name","options","state","noAccessor","hasOwnProperty","key","descriptor","getPropertyDescriptor","defineProperty","oldValue","requestUpdate","configurable","enumerable","finalized","superCtor","getPrototypeOf","props","properties","propKeys","getOwnPropertyNames","getOwnPropertySymbols","createProperty","elementStyles","finalizeStyles","styles","isArray","Set","flat","Infinity","reverse","unshift","toLowerCase","__updatePromise","Promise","res","enableUpdating","_$changedProperties","__saveInstanceProperties","i","addController","controller","__controllers","renderRoot","isConnected","_b","hostConnected","call","removeController","splice","indexOf","_v","createRenderRoot","shadowRoot","attachShadow","shadowRootOptions","adoptedStyleSheets","map","style","document","createElement","nonce","litNonce","setAttribute","textContent","appendChild","connectedCallback","c","_requestedUpdate","disconnectedCallback","hostDisconnected","attributeChangedCallback","_old","_$attributeToProperty","__propertyToAttribute","attrValue","removeAttribute","ctor","propName","getPropertyOptions","e6","shouldRequestUpdate","has","__reflectingProperties","__enqueueUpdate","async","reject","result","scheduleUpdate","performUpdate","shouldUpdate","changedProperties","willUpdate","hostUpdate","update","__markUpdated","_$didUpdate","_changedProperties","hostUpdated","firstUpdated","updated","updateComplete","getUpdateComplete","k","$e5ed8027d647799b$var$t","mode","_c","globalThis","reactiveElementVersions","policy","createPolicy","createHTML","marker","Math","random","slice","markerMatch","nodeMarker","d","createMarker","createComment","isPrimitive","isIterable","iterator","textEndRegex","commentEndRegex","comment2EndRegex","tagEndRegex","RegExp","singleQuoteAttrEndRegex","doubleQuoteAttrEndRegex","rawTextElement","tag","_$litType$","html","noChange","for","nothing","templateCache","render","container","partOwnerNode","renderBefore","part","_$litPart$","endNode","ChildPart","insertBefore","_$setValue","walker","createTreeWalker","getTemplateHtml","l","attrNames","rawTextEndRegex","regex","attrName","match","attrNameEndIndex","lastIndex","exec","test","end","startsWith","htmlResult","Template","node","parts","nodeIndex","attrNameIndex","partCount","el","currentNode","content","svgElement","firstChild","remove","append","childNodes","nextNode","nodeType","hasAttributes","attrsToRemove","getAttributeNames","endsWith","realName","statics","getAttribute","split","m","index","PropertyPart","BooleanAttributePart","EventPart","AttributePart","tagName","data","_options","innerHTML","resolveDirective","parent","attributeIndex","currentDirective","__directives","__directive","nextDirectiveConstructor","_$litDirective$","_$AO","_$initialize","_d","_$resolve","TemplateInstance","template","_parts","_$disconnectableChildren","_$template","_$parent","parentNode","_$isConnected","_clone","fragment","creationScope","importNode","partIndex","templatePart","nextSibling","ElementPart","_update","startNode","_$committedValue","_$startNode","_$endNode","__isConnected","directiveParent","_$clear","_commitText","_commitTemplateResult","_commitNode","_commitIterable","_insert","ref","createTextNode","_$getTemplate","h","i24","instance","itemParts","itemPart","item","start","from","_$notifyConnectionChanged","n","setConnected","element","fill","valueIndex","noCommit","change","_commitValue","newListener","oldListener","shouldRemoveListener","capture","once","passive","shouldAddListener","removeEventListener","addEventListener","handleEvent","event","i35","host","litHtmlPolyfillSupport","$fe586ba0757c37f7$var$l","$fe586ba0757c37f7$var$o","litHtmlVersions","LitElement","renderOptions","__childPart","_$litElement$","litElementHydrateSupport","litElementPolyfillSupport","litElementVersions","methods","names","registerMethods","_name","addMethodNames","assign","getMethodsFor","_names","array","block","il","filter","radians","PI","camelCase","replace","g","toUpperCase","unCamelCase","capitalize","charAt","proportionalSize","width","height","box","bbox","origin","o","y","ox","originX","oy","originY","x","condX","includes","condY","height2","width2","x1","y1","$e4b50d36b79545e2$var$globals","registerWindow","globals","win","$e4b50d36b79545e2$var$Base","$e4b50d36b79545e2$var$elements","makeInstance","adopter","$e4b50d36b79545e2$export$60fbc25e7b928117","isHTML","wrapper","$e4b50d36b79545e2$var$adopter","querySelector","removeChild","nodeOrNew","ownerDocument","$e4b50d36b79545e2$export$5b825b8c91fb12a7","defaultView","Node","$e4b50d36b79545e2$export$185802fd694ee1f5","className","elements","nodeName","$e4b50d36b79545e2$var$capitalize","adopt","mockAdopt","register","$e4b50d36b79545e2$export$6503ec6e8aabbaf","asRoot","getClass","$e4b50d36b79545e2$var$addMethodNames","$e4b50d36b79545e2$var$did","assignNewId","$e4b50d36b79545e2$export$ff39fbab45dc7cd0","eid","i3","children","$e4b50d36b79545e2$export$14fdd2dab64e28f0","id","extend","modules","i4","args","methods1","fn","siblings","apply","position","i5","backward","add","i6","front","back","before","after","insertAfter","transforms","whitespace","isHex","isRgb","isBlank","isNumber","isImage","delimiter","isPathLetter","$e4b50d36b79545e2$var$componentHex","hex","integer","round","component","hex2","is","object","space","$e4b50d36b79545e2$var$is","i10","getParameters","$e4b50d36b79545e2$var$hueToRgb","q","t","Color","removeClass","attr1","classes","trim","$e4b50d36b79545e2$var$delimiter","hasClass","addClass","array3","toggleClass","join","visible","val","ret","arguments","cased","$e4b50d36b79545e2$var$camelCase","$e4b50d36b79545e2$var$isBlank","show","hide","a","r","$e4b50d36b79545e2$var$map","$e4b50d36b79545e2$var$filter","data1","remember","memory","forget","_memory","i9","$e4b50d36b79545e2$export$892596cec99bc70e","color","init","inputs","b","u","sin","pi","grey","$e4b50d36b79545e2$var$isHex","$e4b50d36b79545e2$var$isRgb","min","rgb","max","isGrey","delta","noWhitespace","params","$e4b50d36b79545e2$var$whitespace","hexParse","parseInt","hex1","substring","componentHex","bounded","components","z","x2","y3","xyz","sqrt","lab","atan2","x3","dToR","xL","cos","yL","zL","ct","mx","nm","y4","pow","gU","bU","bd","rU","y5","toHex","_clamped","rV","gV","bV","r255","b255","g255","xU","rL","yU","zU","bL","gL","x4","format","y6","Point","y7","base","source","x5","transform","transformO","clone","point","closeEnough","threshold","$e4b50d36b79545e2$export$5b12bf1653c0dd85","abs","x6","y8","Matrix","$e4b50d36b79545e2$var$closeEnough","flip","flipY","scaleX","rotate","flipBoth","px","skew","isFinite","skewX","py","skewY","translate","scale","translateX","translateY","flipX","tx","scaleY","ty","relative","rx","around","ry","$e4b50d36b79545e2$export$baf26146a414f24a","positionX","NaN","positionY","shear","theta","relativeX","relativeY","fromArray","f","isMatrixLike","matrixMultiply","cy","matrix","aroundO","cx","dx","dy","cx1","cy1","decompose","cx2","cy2","translateO","dx1","dy1","lmultiplyO","determinant","cx3","cy3","thetaRad","st","lam","sy","sx","ccw","other","comp","axis","flipO","scaleO","inverseO","matrixify","parseFloat","det","nc","nd","ne","nf","na","nb","multiply","multiplyO","rotateO","cx4","cy4","cx5","cy5","$e4b50d36b79545e2$var$radians","x8","y10","cx6","cy6","shearO","lx","cx7","cy7","skewO","cy8","x9","ly","tan","cy9","cx8","y11","toArray","cx9","cy10","x10","cx10","cy11","y12","current","formatTransforms","transformer","dx2","dy2","valueOf","x11","y13","x12","y14","ctm","screenCTM","rect","$e4b50d36b79545e2$export$8f49e4af10703ce3","nodes","path","parser","svg1","isNulledBox","domContains","documentElement","svg","addTo","$e4b50d36b79545e2$var$isNulledBox","addOffset","$e4b50d36b79545e2$export$e71c4d32a2263218","pageXOffset","pageYOffset","left","top","merge","w","y2","Box","x13","y15","width3","height3","xMax","yMin","yMax","xMin","getBox","getBBoxFn","retry","contains","node1","x15","y17","width4","height4","level","zoom","zoomX","zoomY","zoomAmount","height5","width5","clientHeight","viewbox","List","arr","MAX_SAFE_INTEGER","point1","fnOrMethodName","$e4b50d36b79545e2$export$54c2e3dc7acea9f5","each","i11","obj","concat","getEvents","querySelectorAll","query","windowEvents","methods2","baseFind","$e4b50d36b79545e2$var$reserved","attrs1","find","$e4b50d36b79545e2$export$8b58be045bf06082","listenerId","$e4b50d36b79545e2$var$listenerId","$e4b50d36b79545e2$export$e7a44b381aecfc4","$e4b50d36b79545e2$export$3f41ece7d7128238","on","listener","bag","events","_svgjsListenerId","$e4b50d36b79545e2$export$af631764ddc44097","bind","binding","off","getEventTarget","ev","$e4b50d36b79545e2$export$8c8705df4a2dcec9","ns","namespace","dispatch","detail","cancelable","dispatchEvent","data3","getEventHolder","Base","Event","CustomEvent","j","i12","data4","noop","duration","delay","attrs","$e4b50d36b79545e2$var$noop","$e4b50d36b79545e2$export$648eec84020a2b10","stroke","opacity","ease","$e4b50d36b79545e2$var$attrs","toSet","array4","convert","unit","divide","number","$e4b50d36b79545e2$export$fffa67e515d04022","isNaN","$e4b50d36b79545e2$var$numberAndUnit","SVGNumber","toJSON","hooks","$e4b50d36b79545e2$var$hooks","$e4b50d36b79545e2$export$1e2eb70c93855705","attrs2","i13","removeNamespace","SVGElement","hasChildNodes","deep","i14","put","lastChild","writeDataToDom","cloneNode","first","i15","il3","attrs3","$e4b50d36b79545e2$export$62c9251e71806cd","i16","last","htmlOrFn","xml","outerHTML","matches","matcher","selector","matchesSelector","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","putIn","removeElement","i17","i18","factor","precision","replaceChild","words","text","map1","i19","attrs4","svgOrFn","xmlOrFn","outerXML","create","_this","Dom","Element","len","well","firstElementChild","dom","center","attr2","curr","SVGArray","$e4b50d36b79545e2$var$isNumber","setAttributeNS","hook","_val","isColor","leading","clearEvents","$e4b50d36b79545e2$export$db77ccec0bb4ccac","attrs5","root","setData","defs","dmove","x17","y19","plus","root1","x18","y20","move","x19","parents","isSelector","until","y22","x20","reference","attr3","keys","width6","height7","$e4b50d36b79545e2$var$proportionalSize","width7","rbox","inside","x21","sugar","y23","$e4b50d36b79545e2$var$getBox","getBoundingClientRect","box1","el1","rbox1","x14","y16","x7","y9","inverse","getCTM","isRoot","getScreenCTM","prefix","extension","i20","$e4b50d36b79545e2$var$sugar","mat","angle","cy12","x22","y24","cx12","cy13","cy14","x23","y25","cx14","cy15","x24","y26","x25","y27","direction","_element","getTotalLength","x26","y28","font","length1","getPointAtLength","$e4b50d36b79545e2$var$registerMethods","kv","ungroup","str1","toParent","str","toRoot","transform1","lmultiply","decomposed","ctm1","i21","untransform","pCtm","i22","$e4b50d36b79545e2$var$getOrigin","flatten","Defs","$e4b50d36b79545e2$export$42a852a2b6b56249","i23","Shape","$e4b50d36b79545e2$export$b2bdceae9588b42d","attrs6","$e4b50d36b79545e2$export$6428a7f2611ef1fa","$e4b50d36b79545e2$var$rx","rx2","$e4b50d36b79545e2$var$ry","ry2","$e4b50d36b79545e2$var$x$3","x27","$e4b50d36b79545e2$var$y$3","y29","Ellipse","height8","size","$e4b50d36b79545e2$var$cx$1","$e4b50d36b79545e2$var$height$2","attrs7","Fragment","createDocumentFragment","$e4b50d36b79545e2$export$80b0269ab108fa11","$e4b50d36b79545e2$var$circled","width10","height10","to","$e4b50d36b79545e2$var$from","x29","y31","fy","Gradient","Container","x30","y32","targets","$e4b50d36b79545e2$export$3d3dd8f63ff0f876","attrs8","clear","url","$e4b50d36b79545e2$export$71aa6c912b956294","gradient","wrapWithAttrCheck","$e4b50d36b79545e2$var$gradiented","$e4b50d36b79545e2$export$26f3b51f2e19e8f9","attrs9","pattern","Image","width11","height11","callback","img","attrs10","xlink","$e4b50d36b79545e2$export$47606a6ae3eaed8e","registerAttrHook","src","attr4","$e4b50d36b79545e2$var$isImage","image","PointArray","minX","maxX","$e4b50d36b79545e2$export$3e431a229df88919","maxY","minY","x31","y33","points","array5","pop","i25","height12","i26","width12","array6","i27","il4","MorphArray","x32","y34","i28","$e4b50d36b79545e2$export$e834181a854d3988","x33","height13","attrs11","x34","y36","toLine","width14","height14","$e4b50d36b79545e2$export$17d680238e50603e","$e4b50d36b79545e2$var$pointed","Marker","plot","$e4b50d36b79545e2$export$e98856a975cab58e","attrs12","height15","orient","x35","y37","width15","$e4b50d36b79545e2$var$makeSetterGetter","pos","width16","height16","width17","height17","attr5","easing","steps","stepPosition","beforeFlag","jumping","step","Stepper","jumps","floor","done","$e4b50d36b79545e2$export$e60daad661aebae6","$e4b50d36b79545e2$var$Stepper","$e4b50d36b79545e2$var$timeline","$e4b50d36b79545e2$export$24c5ac7c37452e7d","from1","overshoot","to1","$e4b50d36b79545e2$export$bd0bf19f25da8474","Spring","stepper","dt","target","acceleration","_duration","velocity","newPosition","_overshoot","os","zeta","wn","makeSetterGetter","PID","integral","error","windup","_windup","$e4b50d36b79545e2$var$recalculate","i29","M","i30","Z","pathHandlers","p0","H","C","T","mlhvqtcsaz","makeAbsolut","command","segmentComplete","startNewSegment","lastCommand","i31","small","isSmall","segment","$e4b50d36b79545e2$var$pathHandlers","parser2","inNumber","hasExponent","$e4b50d36b79545e2$var$finalizeNumber","finalizeSegment","pathLetter","parser3","token","segments","isArcFlag","isArc","inSegment","isExponential","pathParser","toAbsolute","parser4","lastToken","$e4b50d36b79545e2$var$finalizeSegment","parser5","pointSeen","parser1","finalizeNumber","$e4b50d36b79545e2$var$makeAbsolut","absolute","$e4b50d36b79545e2$var$isArcFlag","parser6","length2","$e4b50d36b79545e2$export$c4be6576ca6fe4aa","getBBox","y38","x36","i33","parser8","$e4b50d36b79545e2$var$startNewSegment","$e4b50d36b79545e2$var$segmentComplete","arrayToString","height18","i34","width18","getClassForType","numberAndUnit","NonMorphable","Morphable","_to","il5","i32","PathArray","_morphObj","$e4b50d36b79545e2$var$isPathLetter","$e4b50d36b79545e2$export$dbd6a88fc4ee1d79","complete","$e4b50d36b79545e2$export$886991c84a4f013a","$e4b50d36b79545e2$var$morphableTypes","_from","$e4b50d36b79545e2$export$2b088fc80407dd4c","_stepper","_type","_set","morph","_context","$e4b50d36b79545e2$var$getClassForType","align","toConsumable","TransformBag","$e4b50d36b79545e2$export$9c52af6a49a79065","defaults","sortByKey","ObjectBag","toDelete","objOrArr","il6","Type","entries","sort","shift","num","i36","morphableTypes","registerMorphableType","makeMorphable","attrs13","_array","Path","height19","x37","y39","width19","height20","width20","x38","y40","x39","y41","polygon","Polygon","width21","height21","$e4b50d36b79545e2$export$7d31b617c820d435","attrs14","Polyline","poly","$e4b50d36b79545e2$var$poly","$e4b50d36b79545e2$export$79f3ee03e63e7073","Rect","$e4b50d36b79545e2$export$c79fc6492f3af13d","_first","attrs16","next","width22","height22","_last","prev","frames","Animator","timeouts","immediates","run","timeout","time","$e4b50d36b79545e2$export$3dc07afe418952bc","immediate","Date","cancelFrame","$e4b50d36b79545e2$export$c774d8c9d4e9e234","clearTimeout","nextDraw","requestAnimationFrame","_draw","cancelImmediate","timer","now","nextTimeout","nextFrame","nextImmediate","makeSchedule","Timeline","EventTarget","lastFrame","runnerInfo","_paused","runner","_time","_lastSourceTime","_runnerIds","_step","_stepFn","active","performance","timeSource","$e4b50d36b79545e2$var$defaultSource","getEndTime","_startTime","lastRunnerInfo","_speed","lastDuration","_persist","lastStartTime","_nextFrame","getEndTimeOfTimeline","_lastRunnerId","endTimes","getLastRunnerInfo","_lastStepTime","getRunnerInfoById","pause","persist","dtOrForever","yes","_runners","i38","currentSpeed","speed","positive","schedule","absoluteStartTime","when","_continue","$e4b50d36b79545e2$var$makeSchedule","updateTime","unschedule","info","_timeSource","immediateStep","dtSource","_stepImmediate","frame","dtTime","runnersLeft","fire","finished","reset","i39","dtToStart","timeline","_timeline","Runner","_isDeclarative","timeline1","_history","enabled","$e4b50d36b79545e2$export$e6a97ba2cae5bb94","_reseted","_wait","_frameId","sanitise","times","swing","wait","_reverse","_loopsDone","clearTransform","clearTransformsFromQueue","transform2","during","$e4b50d36b79545e2$export$571ad3bcba5a0c45","_prepareRunner","finish","loop","_queue","isTransform","animate","_times","queue","loops","_swing","uncliped","clipped","loopsDone","loopDuration","position3","swingForward","forwards","progress","initialiser","initFn","runFn","retarget","retargetFn","initialised","position4","x41","swinging","backwards","x40","endTime","running","_lastPosition","justStarted","justFinished","declarative","_initialise","timeline3","position5","_lastTime","converged","_rememberMorpher","morpher","_run","caller","positionOrDt","allfinished","timeline4","timeline5","_tryRetarget","i40","needsIt","method","timeline6","FakeRunner","mergeWith","i41","getRunnerTransform","runners","_transformationRunners","netTransform","extra","RunnerArray","timeline7","clearBefore","play","deleteCnt","transforms1","getByID","lastRunner","$e4b50d36b79545e2$var$FakeRunner","newRunner","$e4b50d36b79545e2$var$lmultiply","ids","by","_addRunner","i42","difference","nameOrAttrs","timeline8","newKeys","addedFromAttrs","oldFromAttrs","oldToAttrs","newToAttrs","$e4b50d36b79545e2$var$mergeTransforms","$e4b50d36b79545e2$var$RunnerArray","at","newLevel","styleAttr","attrs17","$e4b50d36b79545e2$export$c8711ee424a4a619","affine","differences","x42","currentAngle","startTransform","_clearTransformRunnersBefore","point2","possibilities","transforms2","isMatrix","newTransforms","undefined","x43","y42","_currentTransform","_queueNumber","rTarget","rCurrent","_queueNumberDelta","distances","shortest","newTo","affineParameters","_queueObject","y43","x45","y44","x46","y45","to3","from3","to4","x47","y46","x48","y47","x49","y48","width23","height23","width24","height24","xmlns","version","x50","y49","width25","height25","offset","nested","Svg","$e4b50d36b79545e2$var$to","plain","$e4b50d36b79545e2$export$e17b9c1182212c96","$e4b50d36b79545e2$export$3e25e887b7a5b37b","attrs19","amove","symbol","ax","y50","x52","y51","_build","x53","y52","x54","y53","rebuild","x55","self","y54","x56","ay","build1","attrs20","_rebuild","blankLineOffset","build","i43","fontSize","getComputedStyle","getPropertyValue","dy3","Text","Tspan","firstLine","i44","newLined","jl","newLine","$e4b50d36b79545e2$export$5f1af8db9871e1d6","$e4b50d36b79545e2$var$textable","$e4b50d36b79545e2$export$3f943b6ddddb1a7d","Circle","attrs21","radius","dx3","i45","ClipPath","tspan","unclip","$e4b50d36b79545e2$export$c89a927ffc67e6fa","attrs22","clip","rx3","clipper","ry3","size1","clipWith","$e4b50d36b79545e2$var$width$2","ForeignObject","circle","size2","attrs23","child","$e4b50d36b79545e2$export$407988c5e190497b","$e4b50d36b79545e2$export$86f236f5872f181","attrs24","foreignObject","width26","height26","dx4","dy6","bbox2","height27","x57","y56","group","dx6","dy8","width27","height28","G","A","width28","x58","y57","attrs25","$e4b50d36b79545e2$export$2329c99376c9d0a4","link","linker","$e4b50d36b79545e2$export$ebd11618f299a286","Mask","$e4b50d36b79545e2$var$containerGeometry","mask","masker","maskWith","wrap","Stop","attrs27","unmask","cssRule","$e4b50d36b79545e2$export$991dcf7284de63d","Style","attrs28","track","$e4b50d36b79545e2$export$ac4156b3386a7c70","attrs29","textPath","fontFamily","addText","pathArray","i46","$e4b50d36b79545e2$var$unCamelCase","$e4b50d36b79545e2$var$cssRule","$e4b50d36b79545e2$export$d9e45bc13d335801","findOne","attrs30","TextPath","Use","use","$e4b50d36b79545e2$export$f7e34a95cc06fac7","$e4b50d36b79545e2$export$4b2950bdac9b6ee9","SVG","Pattern","Line","attrs31","file","to2","context","i37","$35da740d59af89ba$var$peaceMessages","language","message","displayMessage","$35da740d59af89ba$var$sumLTORMessages","total","console","log","$35da740d59af89ba$var$indexOfEnglishEntry","$35da740d59af89ba$var$sampledMessages","numLTORMessages","numToKeep","downsampleIndexes","counter","currEntry","sampledMessageHolder","ltorCounter","$35da740d59af89ba$var$downsampleMessages","$35da740d59af89ba$var$PeacePanel","$fe586ba0757c37f7$export$3f2f9f5909897157","messageDetails","tester","$3233927aa82734f9$export$dbf350e5966cf602","classList","$e5ed8027d647799b$export$c0bb0b647f701bb5","toggleMessage","customElements","define","newPeacePanel","$35da740d59af89ba$var$windowWidth","visualViewport","$35da740d59af89ba$var$windowHeight","$e4b50d36b79545e2$export$13f4b12aafeba5d6","$35da740d59af89ba$var$ltorSVG","$35da740d59af89ba$var$ttobSVG","renderLtor","renderRtol","renderTtob","$35da740d59af89ba$var$rtolSVG","$35da740d59af89ba$var$fullContainer","class","click","$35da740d59af89ba$var$renderSVG_side","$35da740d59af89ba$var$renderSVG_full","currLTORSVG","currRTOLSVG","currTTOBSVG","currLTORClass","currRTOLClass","currTTOBClass"],"version":3,"file":"index.ab475563.js.map"}